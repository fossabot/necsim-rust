# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 9982002212758782286,

        algorithm: SkippingGillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3582945[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-10-3.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 06:11:21 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 9982002212758782286,

        algorithm: SkippingGillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3582945[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-10-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 9982002212758782286,
        algorithm: SkippingGillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3582945[1].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffef13d7958; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffef13d7978; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3582945[1].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 16.385148828s
 - execution: 509.559512144s
 - cleanup: 77.745969ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 17012600.69004605 after 1119898125 steps.

# mpiexec: finished at Fri 21 May 06:20:14 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.010016193186199172,
                ),
                max_time: PositiveF64(
                    0.0 < 8353536.160165285,
                ),
                length: 732,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.02375024011148208,
                ),
                max_time: PositiveF64(
                    0.0 < 5183611.031315624,
                ),
                length: 500,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.02794406805847994,
                ),
                max_time: PositiveF64(
                    0.0 < 6087537.392161215,
                ),
                length: 914,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.03211183034258231,
                ),
                max_time: PositiveF64(
                    0.0 < 5357435.851252748,
                ),
                length: 679,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.032578470197077235,
                ),
                max_time: PositiveF64(
                    0.0 < 13843137.54289753,
                ),
                length: 722,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.04988175340111165,
                ),
                max_time: PositiveF64(
                    0.0 < 6054897.873746382,
                ),
                length: 1074,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06745170200021072,
                ),
                max_time: PositiveF64(
                    0.0 < 4978723.504784745,
                ),
                length: 598,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07193765874739518,
                ),
                max_time: PositiveF64(
                    0.0 < 7215392.96036898,
                ),
                length: 484,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11788954731187146,
                ),
                max_time: PositiveF64(
                    0.0 < 10447684.79154295,
                ),
                length: 628,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.12929152354579135,
                ),
                max_time: PositiveF64(
                    0.0 < 9395305.50222423,
                ),
                length: 760,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.15623815999059262,
                ),
                max_time: PositiveF64(
                    0.0 < 7026861.285813856,
                ),
                length: 658,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2059215881325095,
                ),
                max_time: PositiveF64(
                    0.0 < 7593932.466742923,
                ),
                length: 786,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20962700263202963,
                ),
                max_time: PositiveF64(
                    0.0 < 9201266.437488372,
                ),
                length: 866,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2116901343366497,
                ),
                max_time: PositiveF64(
                    0.0 < 8827293.540156431,
                ),
                length: 680,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2181060551293481,
                ),
                max_time: PositiveF64(
                    0.0 < 6140961.1406444,
                ),
                length: 653,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.23416217936699626,
                ),
                max_time: PositiveF64(
                    0.0 < 9070603.904485883,
                ),
                length: 765,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.25217826206754046,
                ),
                max_time: PositiveF64(
                    0.0 < 8855830.35963045,
                ),
                length: 739,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.26693045337651283,
                ),
                max_time: PositiveF64(
                    0.0 < 7224132.273346881,
                ),
                length: 572,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.31228550245309367,
                ),
                max_time: PositiveF64(
                    0.0 < 6877706.151082034,
                ),
                length: 665,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.38362082228440086,
                ),
                max_time: PositiveF64(
                    0.0 < 10124550.178072453,
                ),
                length: 755,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4430948621848382,
                ),
                max_time: PositiveF64(
                    0.0 < 17012600.69004605,
                ),
                length: 1074,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4805869748159574,
                ),
                max_time: PositiveF64(
                    0.0 < 5551015.60611178,
                ),
                length: 774,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4841839652034642,
                ),
                max_time: PositiveF64(
                    0.0 < 5241913.554658328,
                ),
                length: 513,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4858615792068435,
                ),
                max_time: PositiveF64(
                    0.0 < 5780198.289805027,
                ),
                length: 391,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.489795767782403,
                ),
                max_time: PositiveF64(
                    0.0 < 4527037.388848835,
                ),
                length: 520,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5186812045480741,
                ),
                max_time: PositiveF64(
                    0.0 < 2603640.4579502265,
                ),
                length: 523,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5500325644382998,
                ),
                max_time: PositiveF64(
                    0.0 < 8200463.273459586,
                ),
                length: 642,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5519355378264262,
                ),
                max_time: PositiveF64(
                    0.0 < 7737478.018485695,
                ),
                length: 714,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5530985313212778,
                ),
                max_time: PositiveF64(
                    0.0 < 9822996.75217625,
                ),
                length: 547,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5551576935411342,
                ),
                max_time: PositiveF64(
                    0.0 < 8572071.713762386,
                ),
                length: 652,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6555677336623977,
                ),
                max_time: PositiveF64(
                    0.0 < 4059706.868045223,
                ),
                length: 445,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6742503746006612,
                ),
                max_time: PositiveF64(
                    0.0 < 3547666.785921852,
                ),
                length: 529,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6949634702131594,
                ),
                max_time: PositiveF64(
                    0.0 < 8453591.12830467,
                ),
                length: 640,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.829287629237365,
                ),
                max_time: PositiveF64(
                    0.0 < 12473389.686383678,
                ),
                length: 795,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9219442809612135,
                ),
                max_time: PositiveF64(
                    0.0 < 9956642.311818462,
                ),
                length: 723,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0032247556887943,
                ),
                max_time: PositiveF64(
                    0.0 < 8787734.286913363,
                ),
                length: 659,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0153981387384494,
                ),
                max_time: PositiveF64(
                    0.0 < 6136210.435161315,
                ),
                length: 331,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.079172130073442,
                ),
                max_time: PositiveF64(
                    0.0 < 4632998.490637583,
                ),
                length: 671,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2160266482289956,
                ),
                max_time: PositiveF64(
                    0.0 < 5334329.063578315,
                ),
                length: 491,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2760734057364835,
                ),
                max_time: PositiveF64(
                    0.0 < 5005466.11662824,
                ),
                length: 489,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5097325140180042,
                ),
                max_time: PositiveF64(
                    0.0 < 7590795.859805474,
                ),
                length: 614,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.582384000756421,
                ),
                max_time: PositiveF64(
                    0.0 < 8117615.380142222,
                ),
                length: 497,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6344965673404015,
                ),
                max_time: PositiveF64(
                    0.0 < 10652463.437602002,
                ),
                length: 685,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6609346884082425,
                ),
                max_time: PositiveF64(
                    0.0 < 6781309.378885917,
                ),
                length: 550,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8702388317015526,
                ),
                max_time: PositiveF64(
                    0.0 < 8016492.076226912,
                ),
                length: 710,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9356461114171521,
                ),
                max_time: PositiveF64(
                    0.0 < 4261563.768002928,
                ),
                length: 484,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9563562927752058,
                ),
                max_time: PositiveF64(
                    0.0 < 5815382.899154718,
                ),
                length: 530,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.9220854672696635,
                ),
                max_time: PositiveF64(
                    0.0 < 4606373.497618815,
                ),
                length: 525,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 730ns
 - execution: 5.444002ms
 - cleanup: 12.741µs
INFO  The simulation resulted in a biodiversity of 30948 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        56 (peak)  46.44 (ave)

============================================
