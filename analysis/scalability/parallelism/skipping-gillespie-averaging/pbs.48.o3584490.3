# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 9437890587420800256,

        algorithm: SkippingGillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584490[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-22.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 08:48:49 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 9437890587420800256,

        algorithm: SkippingGillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584490[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-22.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 9437890587420800256,
        algorithm: SkippingGillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584490[3].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff368872c8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff368872e8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584490[3].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 11.530367598s
 - execution: 483.514533862s
 - cleanup: 122.451953ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 15758897.289478093 after 1119847578 steps.

# mpiexec: finished at Fri 21 May 08:57:10 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.007048503039867335,
                ),
                max_time: PositiveF64(
                    0.0 < 6648994.3444525,
                ),
                length: 547,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.014562284884518002,
                ),
                max_time: PositiveF64(
                    0.0 < 9079625.293259317,
                ),
                length: 638,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.017315008212291594,
                ),
                max_time: PositiveF64(
                    0.0 < 10867868.040605335,
                ),
                length: 717,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.02302260522056267,
                ),
                max_time: PositiveF64(
                    0.0 < 9846768.9958727,
                ),
                length: 639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06651605632895975,
                ),
                max_time: PositiveF64(
                    0.0 < 4160605.1615488855,
                ),
                length: 727,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07259569893485023,
                ),
                max_time: PositiveF64(
                    0.0 < 9127247.492975134,
                ),
                length: 479,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0951677083490878,
                ),
                max_time: PositiveF64(
                    0.0 < 10464548.39674658,
                ),
                length: 783,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1635841231915669,
                ),
                max_time: PositiveF64(
                    0.0 < 5272705.968843131,
                ),
                length: 613,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1837799147265857,
                ),
                max_time: PositiveF64(
                    0.0 < 6728918.690792161,
                ),
                length: 562,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20174556416144634,
                ),
                max_time: PositiveF64(
                    0.0 < 3303657.7948904317,
                ),
                length: 637,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2062569747750924,
                ),
                max_time: PositiveF64(
                    0.0 < 10619333.376521524,
                ),
                length: 1118,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.25417905402963353,
                ),
                max_time: PositiveF64(
                    0.0 < 9173942.872735273,
                ),
                length: 668,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.271572998155157,
                ),
                max_time: PositiveF64(
                    0.0 < 7015286.487147119,
                ),
                length: 507,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2902673520043176,
                ),
                max_time: PositiveF64(
                    0.0 < 3090971.0729191024,
                ),
                length: 514,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.30097571054782235,
                ),
                max_time: PositiveF64(
                    0.0 < 8367113.134098646,
                ),
                length: 747,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3014809587044449,
                ),
                max_time: PositiveF64(
                    0.0 < 9298622.747726182,
                ),
                length: 485,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3123300912663923,
                ),
                max_time: PositiveF64(
                    0.0 < 6306334.384749874,
                ),
                length: 630,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.392102702822368,
                ),
                max_time: PositiveF64(
                    0.0 < 6403904.600164534,
                ),
                length: 675,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4060034829385385,
                ),
                max_time: PositiveF64(
                    0.0 < 10374826.327248938,
                ),
                length: 516,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4377781396270523,
                ),
                max_time: PositiveF64(
                    0.0 < 5252127.830333993,
                ),
                length: 542,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.472841810200736,
                ),
                max_time: PositiveF64(
                    0.0 < 7418766.855808276,
                ),
                length: 662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4824596474479862,
                ),
                max_time: PositiveF64(
                    0.0 < 7477666.891894165,
                ),
                length: 661,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.583545557671481,
                ),
                max_time: PositiveF64(
                    0.0 < 7940852.401348898,
                ),
                length: 781,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5892518621342384,
                ),
                max_time: PositiveF64(
                    0.0 < 7303151.587034917,
                ),
                length: 1026,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6094938173258186,
                ),
                max_time: PositiveF64(
                    0.0 < 8817166.877131894,
                ),
                length: 553,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7060660178841437,
                ),
                max_time: PositiveF64(
                    0.0 < 6454542.4823048385,
                ),
                length: 333,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.739624003357078,
                ),
                max_time: PositiveF64(
                    0.0 < 7746178.925489169,
                ),
                length: 712,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8062062472012028,
                ),
                max_time: PositiveF64(
                    0.0 < 9599320.084625486,
                ),
                length: 755,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8724238369855021,
                ),
                max_time: PositiveF64(
                    0.0 < 11162871.636137296,
                ),
                length: 702,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8906848315167065,
                ),
                max_time: PositiveF64(
                    0.0 < 15758897.289478093,
                ),
                length: 866,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9138944710291996,
                ),
                max_time: PositiveF64(
                    0.0 < 6066695.399056539,
                ),
                length: 664,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9927986618270117,
                ),
                max_time: PositiveF64(
                    0.0 < 5671657.477769892,
                ),
                length: 619,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9987993660129827,
                ),
                max_time: PositiveF64(
                    0.0 < 7250032.719867287,
                ),
                length: 548,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0038434398546443,
                ),
                max_time: PositiveF64(
                    0.0 < 14907909.752210991,
                ),
                length: 525,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.026326312832418,
                ),
                max_time: PositiveF64(
                    0.0 < 7395406.0521292025,
                ),
                length: 693,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0382657781549434,
                ),
                max_time: PositiveF64(
                    0.0 < 7257625.336588765,
                ),
                length: 478,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1946415831741553,
                ),
                max_time: PositiveF64(
                    0.0 < 12387144.276039314,
                ),
                length: 784,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3654825475874204,
                ),
                max_time: PositiveF64(
                    0.0 < 9732870.82981147,
                ),
                length: 606,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3692104152790285,
                ),
                max_time: PositiveF64(
                    0.0 < 9368784.381734224,
                ),
                length: 512,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4089910665958363,
                ),
                max_time: PositiveF64(
                    0.0 < 7370530.595731945,
                ),
                length: 683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5845871966691405,
                ),
                max_time: PositiveF64(
                    0.0 < 6679621.386367595,
                ),
                length: 379,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.603434909569102,
                ),
                max_time: PositiveF64(
                    0.0 < 5867407.571594256,
                ),
                length: 654,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.859493839019497,
                ),
                max_time: PositiveF64(
                    0.0 < 15112972.282655032,
                ),
                length: 826,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.887753717313494,
                ),
                max_time: PositiveF64(
                    0.0 < 7417216.559351702,
                ),
                length: 738,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0875593230853444,
                ),
                max_time: PositiveF64(
                    0.0 < 4280360.555975801,
                ),
                length: 520,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.3327263231741915,
                ),
                max_time: PositiveF64(
                    0.0 < 7262609.864387574,
                ),
                length: 537,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.4647293694921184,
                ),
                max_time: PositiveF64(
                    0.0 < 12117732.040685859,
                ),
                length: 936,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.029129985455606,
                ),
                max_time: PositiveF64(
                    0.0 < 4343285.455909212,
                ),
                length: 506,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 449ns
 - execution: 4.188896ms
 - cleanup: 7.311µs
INFO  The simulation resulted in a biodiversity of 31003 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        59 (peak)  46.07 (ave)

============================================
