# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 11250745958219945943,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[4].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-11-2.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 08:03:39 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 11250745958219945943,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[4].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-11-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 11250745958219945943,
        algorithm: Gillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584479[4].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff6f6d02f8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff6f6d0318; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584479[4].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 16.736251133s
 - execution: 2207.493780015s
 - cleanup: 67.91627ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 12926650.0423615 after 31305362412 steps.

# mpiexec: finished at Fri 21 May 08:40:49 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.004061715302987415,
                ),
                max_time: PositiveF64(
                    0.0 < 6190988.451752055,
                ),
                length: 518,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.017070256929885463,
                ),
                max_time: PositiveF64(
                    0.0 < 6080422.86050838,
                ),
                length: 550,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.05397517417225049,
                ),
                max_time: PositiveF64(
                    0.0 < 3822850.168775359,
                ),
                length: 774,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.057394599647820926,
                ),
                max_time: PositiveF64(
                    0.0 < 6947573.252105478,
                ),
                length: 655,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07766732750336355,
                ),
                max_time: PositiveF64(
                    0.0 < 6501822.307711406,
                ),
                length: 506,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.10511713260346528,
                ),
                max_time: PositiveF64(
                    0.0 < 11190815.814288277,
                ),
                length: 793,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11094420889385036,
                ),
                max_time: PositiveF64(
                    0.0 < 12926650.0423615,
                ),
                length: 1091,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11170827629138842,
                ),
                max_time: PositiveF64(
                    0.0 < 4640698.017004755,
                ),
                length: 530,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11236467056825976,
                ),
                max_time: PositiveF64(
                    0.0 < 6838932.579881889,
                ),
                length: 682,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14733330099740594,
                ),
                max_time: PositiveF64(
                    0.0 < 7122435.712808093,
                ),
                length: 518,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16169930567839946,
                ),
                max_time: PositiveF64(
                    0.0 < 6887188.804663556,
                ),
                length: 904,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2110488182298877,
                ),
                max_time: PositiveF64(
                    0.0 < 7639759.414477946,
                ),
                length: 822,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3244221429181941,
                ),
                max_time: PositiveF64(
                    0.0 < 10760691.259641733,
                ),
                length: 768,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.33133745219808286,
                ),
                max_time: PositiveF64(
                    0.0 < 11506469.748324152,
                ),
                length: 507,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3389303451725173,
                ),
                max_time: PositiveF64(
                    0.0 < 5475760.905464265,
                ),
                length: 326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3630874772412543,
                ),
                max_time: PositiveF64(
                    0.0 < 7994811.039902013,
                ),
                length: 573,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.39600249500640455,
                ),
                max_time: PositiveF64(
                    0.0 < 10087643.536520816,
                ),
                length: 701,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4636876096249932,
                ),
                max_time: PositiveF64(
                    0.0 < 9438606.18323437,
                ),
                length: 501,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4707140386374547,
                ),
                max_time: PositiveF64(
                    0.0 < 4863844.935083243,
                ),
                length: 654,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5134293999310114,
                ),
                max_time: PositiveF64(
                    0.0 < 3157052.487121691,
                ),
                length: 607,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5603042849107804,
                ),
                max_time: PositiveF64(
                    0.0 < 9886773.16660029,
                ),
                length: 721,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6583340595367986,
                ),
                max_time: PositiveF64(
                    0.0 < 6951776.928870547,
                ),
                length: 506,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.68784524707405,
                ),
                max_time: PositiveF64(
                    0.0 < 7899128.674155385,
                ),
                length: 496,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.714343356631118,
                ),
                max_time: PositiveF64(
                    0.0 < 12455315.39175602,
                ),
                length: 720,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.729992035233276,
                ),
                max_time: PositiveF64(
                    0.0 < 3716508.3336122506,
                ),
                length: 652,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7567717825445267,
                ),
                max_time: PositiveF64(
                    0.0 < 7724692.676119936,
                ),
                length: 643,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7840790468211848,
                ),
                max_time: PositiveF64(
                    0.0 < 8614975.206844721,
                ),
                length: 472,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8144797452772751,
                ),
                max_time: PositiveF64(
                    0.0 < 6031340.825425935,
                ),
                length: 769,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9541799357830176,
                ),
                max_time: PositiveF64(
                    0.0 < 6257389.521417523,
                ),
                length: 740,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.975781639056948,
                ),
                max_time: PositiveF64(
                    0.0 < 12711028.276043048,
                ),
                length: 520,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0912380477639332,
                ),
                max_time: PositiveF64(
                    0.0 < 7060076.164829625,
                ),
                length: 713,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1537559439152834,
                ),
                max_time: PositiveF64(
                    0.0 < 6352489.8113233335,
                ),
                length: 767,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3243403507234686,
                ),
                max_time: PositiveF64(
                    0.0 < 8746453.827431303,
                ),
                length: 752,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4035398866031705,
                ),
                max_time: PositiveF64(
                    0.0 < 6096281.220967886,
                ),
                length: 703,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4837840044936608,
                ),
                max_time: PositiveF64(
                    0.0 < 10306326.74305325,
                ),
                length: 739,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.534092381836353,
                ),
                max_time: PositiveF64(
                    0.0 < 10466872.783750663,
                ),
                length: 841,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6212565216823163,
                ),
                max_time: PositiveF64(
                    0.0 < 7448563.158352034,
                ),
                length: 532,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6766180155764692,
                ),
                max_time: PositiveF64(
                    0.0 < 4613945.988777614,
                ),
                length: 484,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6852592683515415,
                ),
                max_time: PositiveF64(
                    0.0 < 7577931.418661566,
                ),
                length: 620,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7227805514801746,
                ),
                max_time: PositiveF64(
                    0.0 < 9339001.014357585,
                ),
                length: 595,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8626543993022786,
                ),
                max_time: PositiveF64(
                    0.0 < 11398015.174922667,
                ),
                length: 715,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8748157966304573,
                ),
                max_time: PositiveF64(
                    0.0 < 5935120.351148467,
                ),
                length: 1067,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9037286305416046,
                ),
                max_time: PositiveF64(
                    0.0 < 6724735.491157691,
                ),
                length: 667,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.905207369338425,
                ),
                max_time: PositiveF64(
                    0.0 < 5695540.530394942,
                ),
                length: 634,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9412609436099322,
                ),
                max_time: PositiveF64(
                    0.0 < 10685102.715795057,
                ),
                length: 688,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.420194250829917,
                ),
                max_time: PositiveF64(
                    0.0 < 5554975.1607120745,
                ),
                length: 374,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.7775637429146185,
                ),
                max_time: PositiveF64(
                    0.0 < 3075944.887588327,
                ),
                length: 518,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.88307516778896,
                ),
                max_time: PositiveF64(
                    0.0 < 8428568.661180433,
                ),
                length: 591,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 725ns
 - execution: 5.0428ms
 - cleanup: 11.464µs
INFO  The simulation resulted in a biodiversity of 31219 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        56 (peak)  48.02 (ave)

============================================
