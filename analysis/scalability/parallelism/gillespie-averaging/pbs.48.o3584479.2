# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 5482253213732261571,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[2].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-11-2.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 07:19:38 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 5482253213732261571,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[2].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-11-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 5482253213732261571,
        algorithm: Gillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584479[2].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc77e37158; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc77e37178; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584479[2].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 16.713778417s
 - execution: 2294.660883976s
 - cleanup: 83.251461ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 17976311.65010942 after 31303233427 steps.

# mpiexec: finished at Fri 21 May 07:58:16 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.002138775593983438,
                ),
                max_time: PositiveF64(
                    0.0 < 12631549.896117434,
                ),
                length: 693,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.10260350450230864,
                ),
                max_time: PositiveF64(
                    0.0 < 8592909.991763247,
                ),
                length: 674,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1106843372938426,
                ),
                max_time: PositiveF64(
                    0.0 < 10396450.101461288,
                ),
                length: 759,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11843453439630938,
                ),
                max_time: PositiveF64(
                    0.0 < 4261913.530695135,
                ),
                length: 343,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11957781371944759,
                ),
                max_time: PositiveF64(
                    0.0 < 5091460.594345219,
                ),
                length: 623,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.13821980481596569,
                ),
                max_time: PositiveF64(
                    0.0 < 8469350.873132668,
                ),
                length: 684,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.13907635809770907,
                ),
                max_time: PositiveF64(
                    0.0 < 13769791.743696637,
                ),
                length: 679,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.26582792825618967,
                ),
                max_time: PositiveF64(
                    0.0 < 8184462.243435324,
                ),
                length: 554,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2878916349093458,
                ),
                max_time: PositiveF64(
                    0.0 < 6965502.376646461,
                ),
                length: 546,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3133618423190696,
                ),
                max_time: PositiveF64(
                    0.0 < 7165243.662263021,
                ),
                length: 635,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.32121583726907776,
                ),
                max_time: PositiveF64(
                    0.0 < 9319004.461017607,
                ),
                length: 1112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.32668678670906925,
                ),
                max_time: PositiveF64(
                    0.0 < 5111850.370290305,
                ),
                length: 641,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.355020228186334,
                ),
                max_time: PositiveF64(
                    0.0 < 7556835.919753947,
                ),
                length: 742,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.38783276536789607,
                ),
                max_time: PositiveF64(
                    0.0 < 5686149.773449589,
                ),
                length: 494,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3994286086497635,
                ),
                max_time: PositiveF64(
                    0.0 < 7012183.283028676,
                ),
                length: 466,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4042497078843161,
                ),
                max_time: PositiveF64(
                    0.0 < 13755556.392902015,
                ),
                length: 533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.40846078718117357,
                ),
                max_time: PositiveF64(
                    0.0 < 4877973.564638242,
                ),
                length: 473,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.41347413175152753,
                ),
                max_time: PositiveF64(
                    0.0 < 12046749.183783045,
                ),
                length: 770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5224138611362437,
                ),
                max_time: PositiveF64(
                    0.0 < 10109519.883391416,
                ),
                length: 943,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5326321150226934,
                ),
                max_time: PositiveF64(
                    0.0 < 9785713.765921272,
                ),
                length: 718,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.569517749744772,
                ),
                max_time: PositiveF64(
                    0.0 < 9883421.494499737,
                ),
                length: 797,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5992578556903417,
                ),
                max_time: PositiveF64(
                    0.0 < 5552965.977690163,
                ),
                length: 480,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6394923809706032,
                ),
                max_time: PositiveF64(
                    0.0 < 7068849.84104935,
                ),
                length: 773,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7309718754045378,
                ),
                max_time: PositiveF64(
                    0.0 < 8838057.179349702,
                ),
                length: 660,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7352724017446204,
                ),
                max_time: PositiveF64(
                    0.0 < 4562498.788474492,
                ),
                length: 690,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8758706406021538,
                ),
                max_time: PositiveF64(
                    0.0 < 7167817.376576222,
                ),
                length: 648,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9190042344662653,
                ),
                max_time: PositiveF64(
                    0.0 < 8616045.110258276,
                ),
                length: 997,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.939658592747576,
                ),
                max_time: PositiveF64(
                    0.0 < 10154193.1342112,
                ),
                length: 753,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9410704523981942,
                ),
                max_time: PositiveF64(
                    0.0 < 5833509.418826363,
                ),
                length: 514,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9571072907599162,
                ),
                max_time: PositiveF64(
                    0.0 < 17976311.65010942,
                ),
                length: 762,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.030076737004185,
                ),
                max_time: PositiveF64(
                    0.0 < 9550607.899318893,
                ),
                length: 719,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1118202469799698,
                ),
                max_time: PositiveF64(
                    0.0 < 6927201.570500893,
                ),
                length: 759,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1621788444859869,
                ),
                max_time: PositiveF64(
                    0.0 < 4204917.970476579,
                ),
                length: 527,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2077076984915684,
                ),
                max_time: PositiveF64(
                    0.0 < 6400006.528820032,
                ),
                length: 657,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2106916824900842,
                ),
                max_time: PositiveF64(
                    0.0 < 9185917.811709948,
                ),
                length: 755,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2340790050259027,
                ),
                max_time: PositiveF64(
                    0.0 < 8315781.532992646,
                ),
                length: 686,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2622600829155697,
                ),
                max_time: PositiveF64(
                    0.0 < 6117167.03946756,
                ),
                length: 541,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2769388244160633,
                ),
                max_time: PositiveF64(
                    0.0 < 4159243.663242708,
                ),
                length: 495,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.328722702207344,
                ),
                max_time: PositiveF64(
                    0.0 < 6853773.928492226,
                ),
                length: 571,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4052539598901779,
                ),
                max_time: PositiveF64(
                    0.0 < 17447170.37496122,
                ),
                length: 714,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4502963864068794,
                ),
                max_time: PositiveF64(
                    0.0 < 8578774.13028906,
                ),
                length: 868,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.486737987606703,
                ),
                max_time: PositiveF64(
                    0.0 < 10387980.70450445,
                ),
                length: 776,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.528466904012984,
                ),
                max_time: PositiveF64(
                    0.0 < 6448623.838958448,
                ),
                length: 677,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6443250056212708,
                ),
                max_time: PositiveF64(
                    0.0 < 6658234.612188048,
                ),
                length: 501,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7948042840831624,
                ),
                max_time: PositiveF64(
                    0.0 < 1479434.1569662436,
                ),
                length: 523,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.118004285177867,
                ),
                max_time: PositiveF64(
                    0.0 < 4779653.24917061,
                ),
                length: 578,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.401525851291294,
                ),
                max_time: PositiveF64(
                    0.0 < 12714360.681938933,
                ),
                length: 520,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.4384274013952325,
                ),
                max_time: PositiveF64(
                    0.0 < 9034550.35115095,
                ),
                length: 375,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 492ns
 - execution: 4.991921ms
 - cleanup: 12.058µs
INFO  The simulation resulted in a biodiversity of 31398 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        56 (peak)  48.05 (ave)

============================================
