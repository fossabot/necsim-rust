# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 13150726388839430169,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-10-3.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 07:19:38 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 13150726388839430169,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-10-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 13150726388839430169,
        algorithm: Gillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584479[1].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff34c68a18; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff34c68a38; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584479[1].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 16.686834384s
 - execution: 2307.606053043s
 - cleanup: 86.493362ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 18105536.157960415 after 31374153054 steps.

# mpiexec: finished at Fri 21 May 07:58:28 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.018531032457086986,
                ),
                max_time: PositiveF64(
                    0.0 < 9682600.09019957,
                ),
                length: 726,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.02663040290412851,
                ),
                max_time: PositiveF64(
                    0.0 < 7181040.886886107,
                ),
                length: 676,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.03765415509884654,
                ),
                max_time: PositiveF64(
                    0.0 < 12340391.323136298,
                ),
                length: 857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.12347808464442768,
                ),
                max_time: PositiveF64(
                    0.0 < 3907867.444814438,
                ),
                length: 700,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1354528909278269,
                ),
                max_time: PositiveF64(
                    0.0 < 4949702.928288061,
                ),
                length: 607,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.13938923194960284,
                ),
                max_time: PositiveF64(
                    0.0 < 8423959.103919115,
                ),
                length: 808,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14812340604188004,
                ),
                max_time: PositiveF64(
                    0.0 < 10951637.423715692,
                ),
                length: 925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16969011155600247,
                ),
                max_time: PositiveF64(
                    0.0 < 9888381.851913217,
                ),
                length: 766,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.17449410111191757,
                ),
                max_time: PositiveF64(
                    0.0 < 7755586.348402723,
                ),
                length: 707,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1752081451272544,
                ),
                max_time: PositiveF64(
                    0.0 < 8481814.037149794,
                ),
                length: 785,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1792073451237565,
                ),
                max_time: PositiveF64(
                    0.0 < 5534178.15880464,
                ),
                length: 555,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.21562915951867898,
                ),
                max_time: PositiveF64(
                    0.0 < 5444130.18175588,
                ),
                length: 415,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.22238650535128995,
                ),
                max_time: PositiveF64(
                    0.0 < 6384848.553795427,
                ),
                length: 705,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.22550985363443146,
                ),
                max_time: PositiveF64(
                    0.0 < 6882835.130261716,
                ),
                length: 486,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.25061439287429554,
                ),
                max_time: PositiveF64(
                    0.0 < 14938719.774009801,
                ),
                length: 732,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2975306963710741,
                ),
                max_time: PositiveF64(
                    0.0 < 7905994.778251382,
                ),
                length: 1137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3044358129638021,
                ),
                max_time: PositiveF64(
                    0.0 < 8041359.786545158,
                ),
                length: 673,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3696004368228013,
                ),
                max_time: PositiveF64(
                    0.0 < 4948451.808332246,
                ),
                length: 616,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4058014527332229,
                ),
                max_time: PositiveF64(
                    0.0 < 6598093.509014213,
                ),
                length: 439,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.43360635094244665,
                ),
                max_time: PositiveF64(
                    0.0 < 9621563.860406142,
                ),
                length: 745,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.43903445344183806,
                ),
                max_time: PositiveF64(
                    0.0 < 10441783.066166172,
                ),
                length: 762,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.43904437844244476,
                ),
                max_time: PositiveF64(
                    0.0 < 9660003.484468667,
                ),
                length: 673,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.473468121848298,
                ),
                max_time: PositiveF64(
                    0.0 < 4640807.819527625,
                ),
                length: 660,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5382472155362681,
                ),
                max_time: PositiveF64(
                    0.0 < 4677452.156711176,
                ),
                length: 538,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5772177886259651,
                ),
                max_time: PositiveF64(
                    0.0 < 13680154.788153365,
                ),
                length: 660,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6464099721388161,
                ),
                max_time: PositiveF64(
                    0.0 < 12561281.632981902,
                ),
                length: 696,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6534617511734508,
                ),
                max_time: PositiveF64(
                    0.0 < 9261394.912882019,
                ),
                length: 727,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6891591324114251,
                ),
                max_time: PositiveF64(
                    0.0 < 7675346.755510123,
                ),
                length: 476,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7286026263472015,
                ),
                max_time: PositiveF64(
                    0.0 < 4450727.911170133,
                ),
                length: 566,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7677609115570644,
                ),
                max_time: PositiveF64(
                    0.0 < 5197321.35796329,
                ),
                length: 533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.772644086230511,
                ),
                max_time: PositiveF64(
                    0.0 < 5291242.0617229175,
                ),
                length: 601,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8082915713354412,
                ),
                max_time: PositiveF64(
                    0.0 < 6956011.003319925,
                ),
                length: 541,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8246325973404793,
                ),
                max_time: PositiveF64(
                    0.0 < 6464792.237669645,
                ),
                length: 607,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8360402091320196,
                ),
                max_time: PositiveF64(
                    0.0 < 5298496.919579743,
                ),
                length: 521,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8746571920618879,
                ),
                max_time: PositiveF64(
                    0.0 < 4564445.48930424,
                ),
                length: 319,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8799951369711774,
                ),
                max_time: PositiveF64(
                    0.0 < 4870345.036079352,
                ),
                length: 563,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9382266827272209,
                ),
                max_time: PositiveF64(
                    0.0 < 8974569.10926082,
                ),
                length: 1046,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0527845617696063,
                ),
                max_time: PositiveF64(
                    0.0 < 18105536.157960415,
                ),
                length: 529,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1448857925142886,
                ),
                max_time: PositiveF64(
                    0.0 < 8050767.995938,
                ),
                length: 522,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3271195517752719,
                ),
                max_time: PositiveF64(
                    0.0 < 7581158.527004245,
                ),
                length: 693,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6456556302245555,
                ),
                max_time: PositiveF64(
                    0.0 < 5965606.271248287,
                ),
                length: 502,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.910509497570996,
                ),
                max_time: PositiveF64(
                    0.0 < 7631900.812270446,
                ),
                length: 630,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0171586499663157,
                ),
                max_time: PositiveF64(
                    0.0 < 7225260.618865245,
                ),
                length: 787,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.7531718232689664,
                ),
                max_time: PositiveF64(
                    0.0 < 8230135.821428185,
                ),
                length: 517,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.8979974189175994,
                ),
                max_time: PositiveF64(
                    0.0 < 10018943.16976931,
                ),
                length: 683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.2223466734501702,
                ),
                max_time: PositiveF64(
                    0.0 < 6727203.075128935,
                ),
                length: 523,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.911069583463571,
                ),
                max_time: PositiveF64(
                    0.0 < 7986684.854580121,
                ),
                length: 638,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.103312416165493,
                ),
                max_time: PositiveF64(
                    0.0 < 5698211.761704971,
                ),
                length: 513,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 587ns
 - execution: 5.022766ms
 - cleanup: 11.922µs
INFO  The simulation resulted in a biodiversity of 31086 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        57 (peak)  48.05 (ave)

============================================
