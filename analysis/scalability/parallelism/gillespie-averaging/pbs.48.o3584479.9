# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 6596596825570325857,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[9].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-5-4.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 08:17:39 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 6596596825570325857,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[9].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-5-4.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 6596596825570325857,
        algorithm: Gillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584479[9].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcf98c9098; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcf98c90b8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584479[9].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 17.202000076s
 - execution: 2303.436630549s
 - cleanup: 65.017978ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 16679298.502230203 after 31400434357 steps.

# mpiexec: finished at Fri 21 May 08:56:27 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.021940391420428806,
                ),
                max_time: PositiveF64(
                    0.0 < 13202431.090515316,
                ),
                length: 958,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.02467933387308001,
                ),
                max_time: PositiveF64(
                    0.0 < 8235722.875984823,
                ),
                length: 653,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.03554586002723269,
                ),
                max_time: PositiveF64(
                    0.0 < 15056634.717343297,
                ),
                length: 878,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07722410339597052,
                ),
                max_time: PositiveF64(
                    0.0 < 9363784.750307757,
                ),
                length: 737,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08143446275205424,
                ),
                max_time: PositiveF64(
                    0.0 < 7989115.890218781,
                ),
                length: 620,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08356384687550063,
                ),
                max_time: PositiveF64(
                    0.0 < 2873808.91951049,
                ),
                length: 654,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09351024746894067,
                ),
                max_time: PositiveF64(
                    0.0 < 5904913.868235652,
                ),
                length: 518,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.13542331075346994,
                ),
                max_time: PositiveF64(
                    0.0 < 10611785.878220422,
                ),
                length: 505,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1429892261702578,
                ),
                max_time: PositiveF64(
                    0.0 < 7110053.07346239,
                ),
                length: 396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16596960056770266,
                ),
                max_time: PositiveF64(
                    0.0 < 5060889.395770857,
                ),
                length: 543,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.17136763414647177,
                ),
                max_time: PositiveF64(
                    0.0 < 6646071.351838099,
                ),
                length: 618,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1750125531909694,
                ),
                max_time: PositiveF64(
                    0.0 < 7944061.313838186,
                ),
                length: 445,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.33416332728559156,
                ),
                max_time: PositiveF64(
                    0.0 < 9495376.145895945,
                ),
                length: 659,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.342595069070189,
                ),
                max_time: PositiveF64(
                    0.0 < 6649236.337086806,
                ),
                length: 661,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3428279542799633,
                ),
                max_time: PositiveF64(
                    0.0 < 8783301.077635048,
                ),
                length: 704,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.379338877763209,
                ),
                max_time: PositiveF64(
                    0.0 < 7349201.336846709,
                ),
                length: 546,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.41794430144398276,
                ),
                max_time: PositiveF64(
                    0.0 < 8261646.502691987,
                ),
                length: 538,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.46558543346164366,
                ),
                max_time: PositiveF64(
                    0.0 < 12169193.781333936,
                ),
                length: 506,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4945879781715305,
                ),
                max_time: PositiveF64(
                    0.0 < 2280444.594120974,
                ),
                length: 588,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.49965061924959153,
                ),
                max_time: PositiveF64(
                    0.0 < 12742474.680072336,
                ),
                length: 719,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5107346535257355,
                ),
                max_time: PositiveF64(
                    0.0 < 2824384.988324425,
                ),
                length: 574,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6448802034744858,
                ),
                max_time: PositiveF64(
                    0.0 < 7349003.25723108,
                ),
                length: 765,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6465930863174697,
                ),
                max_time: PositiveF64(
                    0.0 < 9282939.665947914,
                ),
                length: 704,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6548335852120742,
                ),
                max_time: PositiveF64(
                    0.0 < 3672984.9736290975,
                ),
                length: 511,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6574750577816879,
                ),
                max_time: PositiveF64(
                    0.0 < 5738103.616635933,
                ),
                length: 766,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6702855756265452,
                ),
                max_time: PositiveF64(
                    0.0 < 1688546.891378602,
                ),
                length: 531,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7070659970562809,
                ),
                max_time: PositiveF64(
                    0.0 < 8926969.125998637,
                ),
                length: 493,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7565363803335858,
                ),
                max_time: PositiveF64(
                    0.0 < 8151313.486770295,
                ),
                length: 685,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7871547433491174,
                ),
                max_time: PositiveF64(
                    0.0 < 7228630.215770587,
                ),
                length: 714,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8016349826002496,
                ),
                max_time: PositiveF64(
                    0.0 < 9411702.40719288,
                ),
                length: 769,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8140460518333433,
                ),
                max_time: PositiveF64(
                    0.0 < 7197695.854337649,
                ),
                length: 677,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8195127844136596,
                ),
                max_time: PositiveF64(
                    0.0 < 15126954.032175241,
                ),
                length: 670,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8291558667080186,
                ),
                max_time: PositiveF64(
                    0.0 < 5877625.214351919,
                ),
                length: 477,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8729705452390963,
                ),
                max_time: PositiveF64(
                    0.0 < 4709472.32822713,
                ),
                length: 545,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9013824893327267,
                ),
                max_time: PositiveF64(
                    0.0 < 5269285.941335642,
                ),
                length: 697,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0615213995629045,
                ),
                max_time: PositiveF64(
                    0.0 < 4426332.05007232,
                ),
                length: 601,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0647203886690062,
                ),
                max_time: PositiveF64(
                    0.0 < 8443658.253468009,
                ),
                length: 333,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1691067567799094,
                ),
                max_time: PositiveF64(
                    0.0 < 8182432.966499733,
                ),
                length: 647,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2321436944966202,
                ),
                max_time: PositiveF64(
                    0.0 < 6454977.8118466195,
                ),
                length: 503,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4292050062080728,
                ),
                max_time: PositiveF64(
                    0.0 < 16679298.502230203,
                ),
                length: 725,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5725582524832578,
                ),
                max_time: PositiveF64(
                    0.0 < 12365095.697782975,
                ),
                length: 676,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5947337299174407,
                ),
                max_time: PositiveF64(
                    0.0 < 10010436.470502427,
                ),
                length: 721,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7610586015212968,
                ),
                max_time: PositiveF64(
                    0.0 < 10473577.045998292,
                ),
                length: 774,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0903576748388075,
                ),
                max_time: PositiveF64(
                    0.0 < 12083887.828457259,
                ),
                length: 1006,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.182482094900766,
                ),
                max_time: PositiveF64(
                    0.0 < 13015188.422445826,
                ),
                length: 647,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.6135996398156327,
                ),
                max_time: PositiveF64(
                    0.0 < 14629490.114151357,
                ),
                length: 1178,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.796837925268036,
                ),
                max_time: PositiveF64(
                    0.0 < 2916010.9576305686,
                ),
                length: 533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.077486846903848,
                ),
                max_time: PositiveF64(
                    0.0 < 10214411.658412348,
                ),
                length: 766,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 574ns
 - execution: 5.147228ms
 - cleanup: 13.292µs
INFO  The simulation resulted in a biodiversity of 31134 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        55 (peak)  47.99 (ave)

============================================
