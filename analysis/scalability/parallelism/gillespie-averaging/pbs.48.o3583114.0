# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 14778186616249962014,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3583114[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-15.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 06:16:08 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 14778186616249962014,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3583114[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-15.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 14778186616249962014,
        algorithm: Gillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3583114[0].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffff325da38; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffff325da58; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3583114[0].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 14.842262587s
 - execution: 2964.145321932s
 - cleanup: 153.374404ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 13915230.685591385 after 31267572424 steps.

# mpiexec: finished at Fri 21 May 07:05:57 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.008407654450622868,
                ),
                max_time: PositiveF64(
                    0.0 < 7149377.480240911,
                ),
                length: 792,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.038803291198592986,
                ),
                max_time: PositiveF64(
                    0.0 < 9123158.278276974,
                ),
                length: 813,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0635353481306987,
                ),
                max_time: PositiveF64(
                    0.0 < 4620716.720588558,
                ),
                length: 564,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06661192642167145,
                ),
                max_time: PositiveF64(
                    0.0 < 5059477.135473648,
                ),
                length: 650,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07777019327762996,
                ),
                max_time: PositiveF64(
                    0.0 < 10693041.02525057,
                ),
                length: 665,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.10966361529525653,
                ),
                max_time: PositiveF64(
                    0.0 < 10580756.709756076,
                ),
                length: 718,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.12287455650109659,
                ),
                max_time: PositiveF64(
                    0.0 < 9084214.477100924,
                ),
                length: 1020,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16107262052631685,
                ),
                max_time: PositiveF64(
                    0.0 < 6515498.82554042,
                ),
                length: 513,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16207966726814127,
                ),
                max_time: PositiveF64(
                    0.0 < 12838609.51799533,
                ),
                length: 660,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2145507403135134,
                ),
                max_time: PositiveF64(
                    0.0 < 6214230.671525077,
                ),
                length: 777,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2256190111426273,
                ),
                max_time: PositiveF64(
                    0.0 < 8841424.425030198,
                ),
                length: 378,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.24640587779163195,
                ),
                max_time: PositiveF64(
                    0.0 < 6975424.240405187,
                ),
                length: 648,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.252425771840604,
                ),
                max_time: PositiveF64(
                    0.0 < 3024881.6124313185,
                ),
                length: 590,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4106453546796175,
                ),
                max_time: PositiveF64(
                    0.0 < 4412368.122281619,
                ),
                length: 553,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4127267080179538,
                ),
                max_time: PositiveF64(
                    0.0 < 7793486.38320881,
                ),
                length: 724,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4217135052902451,
                ),
                max_time: PositiveF64(
                    0.0 < 1569410.1298232279,
                ),
                length: 555,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4365006708031457,
                ),
                max_time: PositiveF64(
                    0.0 < 3784284.6293229694,
                ),
                length: 499,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5391641662904282,
                ),
                max_time: PositiveF64(
                    0.0 < 8406455.42020853,
                ),
                length: 1137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5521137254469131,
                ),
                max_time: PositiveF64(
                    0.0 < 11234329.778941825,
                ),
                length: 510,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6017451335448435,
                ),
                max_time: PositiveF64(
                    0.0 < 2766629.479688996,
                ),
                length: 476,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6192784765113385,
                ),
                max_time: PositiveF64(
                    0.0 < 5174240.575854549,
                ),
                length: 762,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7170750866103659,
                ),
                max_time: PositiveF64(
                    0.0 < 8909170.893302217,
                ),
                length: 641,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7192004951236783,
                ),
                max_time: PositiveF64(
                    0.0 < 4755629.960626653,
                ),
                length: 539,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7887345140153397,
                ),
                max_time: PositiveF64(
                    0.0 < 8609479.039208481,
                ),
                length: 718,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8169493887896375,
                ),
                max_time: PositiveF64(
                    0.0 < 4601215.106566006,
                ),
                length: 664,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8466002360564834,
                ),
                max_time: PositiveF64(
                    0.0 < 5465929.969434196,
                ),
                length: 640,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.107642074227524,
                ),
                max_time: PositiveF64(
                    0.0 < 11379825.933063991,
                ),
                length: 692,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1372823187620895,
                ),
                max_time: PositiveF64(
                    0.0 < 7166934.914462622,
                ),
                length: 519,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1445167563805572,
                ),
                max_time: PositiveF64(
                    0.0 < 7089687.993785942,
                ),
                length: 777,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.194900048516521,
                ),
                max_time: PositiveF64(
                    0.0 < 9603554.099867217,
                ),
                length: 503,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2167280136477643,
                ),
                max_time: PositiveF64(
                    0.0 < 8982725.932833577,
                ),
                length: 648,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3267416413068729,
                ),
                max_time: PositiveF64(
                    0.0 < 4208426.016099531,
                ),
                length: 601,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4269223994067441,
                ),
                max_time: PositiveF64(
                    0.0 < 12357338.15407593,
                ),
                length: 722,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4658426426322446,
                ),
                max_time: PositiveF64(
                    0.0 < 10397718.266544184,
                ),
                length: 543,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4743715716567336,
                ),
                max_time: PositiveF64(
                    0.0 < 8642280.418774603,
                ),
                length: 690,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5960721331576693,
                ),
                max_time: PositiveF64(
                    0.0 < 6830002.9074394535,
                ),
                length: 578,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6017575932458372,
                ),
                max_time: PositiveF64(
                    0.0 < 7708224.523244755,
                ),
                length: 836,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7321953039719657,
                ),
                max_time: PositiveF64(
                    0.0 < 9889269.075634269,
                ),
                length: 471,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9711963810520496,
                ),
                max_time: PositiveF64(
                    0.0 < 5699493.566906138,
                ),
                length: 692,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.001670249581165,
                ),
                max_time: PositiveF64(
                    0.0 < 13915230.685591385,
                ),
                length: 711,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.020492092857708,
                ),
                max_time: PositiveF64(
                    0.0 < 7482487.786750042,
                ),
                length: 901,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.150096697231627,
                ),
                max_time: PositiveF64(
                    0.0 < 8705577.910445837,
                ),
                length: 750,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.5722040026320663,
                ),
                max_time: PositiveF64(
                    0.0 < 3399896.519360461,
                ),
                length: 544,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.766340078474441,
                ),
                max_time: PositiveF64(
                    0.0 < 12005651.786019428,
                ),
                length: 698,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.9957721989692043,
                ),
                max_time: PositiveF64(
                    0.0 < 3248401.1352896076,
                ),
                length: 346,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.7403424356805215,
                ),
                max_time: PositiveF64(
                    0.0 < 4394139.654297718,
                ),
                length: 578,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.188043117042839,
                ),
                max_time: PositiveF64(
                    0.0 < 8830403.964683445,
                ),
                length: 704,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.434439140309895,
                ),
                max_time: PositiveF64(
                    0.0 < 5768284.425561878,
                ),
                length: 556,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 630ns
 - execution: 10.425228ms
 - cleanup: 22.15µs
INFO  The simulation resulted in a biodiversity of 31266 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        58 (peak)  47.78 (ave)

============================================
