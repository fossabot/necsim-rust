# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 7369902828844081884,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-15.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 08:08:19 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 7369902828844081884,

        algorithm: Gillespie(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584479[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-15.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 7369902828844081884,
        algorithm: Gillespie(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584479[5].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffd3997b3b8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffd3997b3d8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584479[5].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 14.551408182s
 - execution: 2218.559372161s
 - cleanup: 167.020049ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 14851053.469404586 after 31339386398 steps.

# mpiexec: finished at Fri 21 May 08:45:42 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00047746949135278437,
                ),
                max_time: PositiveF64(
                    0.0 < 8060776.957515955,
                ),
                length: 727,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.05732336188331869,
                ),
                max_time: PositiveF64(
                    0.0 < 3469744.895129985,
                ),
                length: 560,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0622593445049291,
                ),
                max_time: PositiveF64(
                    0.0 < 6168863.997512965,
                ),
                length: 618,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08782604671213487,
                ),
                max_time: PositiveF64(
                    0.0 < 9848073.969531342,
                ),
                length: 798,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09407260008004809,
                ),
                max_time: PositiveF64(
                    0.0 < 7444998.2384247165,
                ),
                length: 768,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19026627103040653,
                ),
                max_time: PositiveF64(
                    0.0 < 8582071.757855445,
                ),
                length: 682,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1921909506544752,
                ),
                max_time: PositiveF64(
                    0.0 < 8408122.634717999,
                ),
                length: 543,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19523334419814306,
                ),
                max_time: PositiveF64(
                    0.0 < 11136480.98247114,
                ),
                length: 1134,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20348678839376708,
                ),
                max_time: PositiveF64(
                    0.0 < 7600462.330540069,
                ),
                length: 661,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.21886186167966926,
                ),
                max_time: PositiveF64(
                    0.0 < 8370945.3736096285,
                ),
                length: 634,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.29378248443040994,
                ),
                max_time: PositiveF64(
                    0.0 < 6353527.648707733,
                ),
                length: 335,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3080120535150933,
                ),
                max_time: PositiveF64(
                    0.0 < 7593384.634292956,
                ),
                length: 745,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3635400589473415,
                ),
                max_time: PositiveF64(
                    0.0 < 8367852.490590965,
                ),
                length: 794,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3638043761337686,
                ),
                max_time: PositiveF64(
                    0.0 < 4029396.776835882,
                ),
                length: 694,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3836842160075282,
                ),
                max_time: PositiveF64(
                    0.0 < 10450084.800121192,
                ),
                length: 734,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.43974924668917664,
                ),
                max_time: PositiveF64(
                    0.0 < 2720110.080831869,
                ),
                length: 684,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.49511717631043733,
                ),
                max_time: PositiveF64(
                    0.0 < 6115420.494119459,
                ),
                length: 621,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5138776596232446,
                ),
                max_time: PositiveF64(
                    0.0 < 7579121.547525209,
                ),
                length: 769,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5674236135867696,
                ),
                max_time: PositiveF64(
                    0.0 < 8061332.589582514,
                ),
                length: 666,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5790745622158192,
                ),
                max_time: PositiveF64(
                    0.0 < 11455700.319707323,
                ),
                length: 689,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6016905760793831,
                ),
                max_time: PositiveF64(
                    0.0 < 5409131.430821231,
                ),
                length: 477,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6375480099774263,
                ),
                max_time: PositiveF64(
                    0.0 < 6771890.24218622,
                ),
                length: 1026,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6552593127441888,
                ),
                max_time: PositiveF64(
                    0.0 < 7562803.756813168,
                ),
                length: 674,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6758830506783493,
                ),
                max_time: PositiveF64(
                    0.0 < 4885373.3972693,
                ),
                length: 559,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7401911110026757,
                ),
                max_time: PositiveF64(
                    0.0 < 9508177.20316935,
                ),
                length: 522,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7609547490472348,
                ),
                max_time: PositiveF64(
                    0.0 < 8936275.01882941,
                ),
                length: 631,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9041288268963296,
                ),
                max_time: PositiveF64(
                    0.0 < 5340549.785390624,
                ),
                length: 453,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9379444576497197,
                ),
                max_time: PositiveF64(
                    0.0 < 11128236.396016056,
                ),
                length: 926,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9525308962849856,
                ),
                max_time: PositiveF64(
                    0.0 < 6019893.669062404,
                ),
                length: 542,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1126883173206963,
                ),
                max_time: PositiveF64(
                    0.0 < 5724862.843947704,
                ),
                length: 489,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.12570036132889,
                ),
                max_time: PositiveF64(
                    0.0 < 7299704.449669082,
                ),
                length: 716,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2203367101111926,
                ),
                max_time: PositiveF64(
                    0.0 < 4217165.094392209,
                ),
                length: 779,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2757717057830036,
                ),
                max_time: PositiveF64(
                    0.0 < 8335006.051358164,
                ),
                length: 374,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3149775547328368,
                ),
                max_time: PositiveF64(
                    0.0 < 5784017.074608264,
                ),
                length: 540,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4846900339169742,
                ),
                max_time: PositiveF64(
                    0.0 < 3894463.807331589,
                ),
                length: 530,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.570139911967846,
                ),
                max_time: PositiveF64(
                    0.0 < 6719873.347043691,
                ),
                length: 492,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7749344195343768,
                ),
                max_time: PositiveF64(
                    0.0 < 8712109.090317618,
                ),
                length: 536,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.828606182550767,
                ),
                max_time: PositiveF64(
                    0.0 < 6198410.936492402,
                ),
                length: 461,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9398416177487383,
                ),
                max_time: PositiveF64(
                    0.0 < 6793578.892813059,
                ),
                length: 773,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9922300361734573,
                ),
                max_time: PositiveF64(
                    0.0 < 10477049.686298652,
                ),
                length: 670,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0270357722819115,
                ),
                max_time: PositiveF64(
                    0.0 < 11579395.996535469,
                ),
                length: 641,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.07488799843978,
                ),
                max_time: PositiveF64(
                    0.0 < 10481963.217934063,
                ),
                length: 887,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.1346564654913527,
                ),
                max_time: PositiveF64(
                    0.0 < 7228557.758827933,
                ),
                length: 506,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.2916257912008273,
                ),
                max_time: PositiveF64(
                    0.0 < 4303820.3738146955,
                ),
                length: 633,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.471521521615631,
                ),
                max_time: PositiveF64(
                    0.0 < 14851053.469404586,
                ),
                length: 803,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.911855372621249,
                ),
                max_time: PositiveF64(
                    0.0 < 6319735.4798227,
                ),
                length: 594,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.828702874379107,
                ),
                max_time: PositiveF64(
                    0.0 < 2141738.559340069,
                ),
                length: 520,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 6.179147314250835,
                ),
                max_time: PositiveF64(
                    0.0 < 8627891.917959476,
                ),
                length: 693,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 530ns
 - execution: 6.673527ms
 - cleanup: 23.961µs
INFO  The simulation resulted in a biodiversity of 31303 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        54 (peak)  47.83 (ave)

============================================
