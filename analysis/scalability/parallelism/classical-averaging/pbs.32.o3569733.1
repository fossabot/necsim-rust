# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 1854101227485078938,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3569733[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-25.cx3.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Tue 18 May 08:22:23 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 1854101227485078938,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3569733[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-25.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 1854101227485078938,
        algorithm: Classical(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3569733[1].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffeca95a048; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffeca95a068; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3569733[1].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 14.858827411s
 - execution: 1886.235667518s
 - cleanup: 92.416641ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 20368022.61885607 after 31361089990 steps.

# mpiexec: finished at Tue 18 May 08:54:09 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06072417031046337,
                ),
                max_time: PositiveF64(
                    0.0 < 6886490.997930354,
                ),
                length: 952,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.060774894701726395,
                ),
                max_time: PositiveF64(
                    0.0 < 7678717.293691855,
                ),
                length: 890,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0746807459091143,
                ),
                max_time: PositiveF64(
                    0.0 < 6685647.557654577,
                ),
                length: 958,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08508897097882608,
                ),
                max_time: PositiveF64(
                    0.0 < 13104400.98968468,
                ),
                length: 1128,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09261717456286259,
                ),
                max_time: PositiveF64(
                    0.0 < 9046286.09994045,
                ),
                length: 1130,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14278584247604548,
                ),
                max_time: PositiveF64(
                    0.0 < 10207872.777925678,
                ),
                length: 1102,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1526238220847796,
                ),
                max_time: PositiveF64(
                    0.0 < 8682839.874688812,
                ),
                length: 1034,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1549056951481223,
                ),
                max_time: PositiveF64(
                    0.0 < 20368022.61885607,
                ),
                length: 1108,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1732196659730973,
                ),
                max_time: PositiveF64(
                    0.0 < 7320323.888922318,
                ),
                length: 1020,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19333476500338112,
                ),
                max_time: PositiveF64(
                    0.0 < 13349798.402481847,
                ),
                length: 1058,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1935493881628968,
                ),
                max_time: PositiveF64(
                    0.0 < 16520228.41802053,
                ),
                length: 1665,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.21925710446436028,
                ),
                max_time: PositiveF64(
                    0.0 < 5796969.882776248,
                ),
                length: 862,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3108663737164141,
                ),
                max_time: PositiveF64(
                    0.0 < 5271964.542713492,
                ),
                length: 753,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3372125662913485,
                ),
                max_time: PositiveF64(
                    0.0 < 8279002.096971874,
                ),
                length: 737,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.35403797043567636,
                ),
                max_time: PositiveF64(
                    0.0 < 10299226.514926422,
                ),
                length: 952,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3873563655476338,
                ),
                max_time: PositiveF64(
                    0.0 < 11125125.884247059,
                ),
                length: 1218,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3885350202559561,
                ),
                max_time: PositiveF64(
                    0.0 < 8285560.374217098,
                ),
                length: 843,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.40463585106198374,
                ),
                max_time: PositiveF64(
                    0.0 < 9805957.060075266,
                ),
                length: 990,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4196088661400709,
                ),
                max_time: PositiveF64(
                    0.0 < 5078123.0465478245,
                ),
                length: 761,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4307582753242528,
                ),
                max_time: PositiveF64(
                    0.0 < 7967088.041075375,
                ),
                length: 541,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.46101474805879566,
                ),
                max_time: PositiveF64(
                    0.0 < 12347608.620463025,
                ),
                length: 1127,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.49792323227477087,
                ),
                max_time: PositiveF64(
                    0.0 < 11587141.616627418,
                ),
                length: 1264,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5678930594363356,
                ),
                max_time: PositiveF64(
                    0.0 < 9175673.860413678,
                ),
                length: 962,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6504691639049407,
                ),
                max_time: PositiveF64(
                    0.0 < 9248852.459454693,
                ),
                length: 767,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7971156011449819,
                ),
                max_time: PositiveF64(
                    0.0 < 9788848.89533393,
                ),
                length: 1036,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9736643813202823,
                ),
                max_time: PositiveF64(
                    0.0 < 8377164.26389253,
                ),
                length: 1048,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0080528981696866,
                ),
                max_time: PositiveF64(
                    0.0 < 7121530.7439283,
                ),
                length: 819,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1909353868503179,
                ),
                max_time: PositiveF64(
                    0.0 < 12397747.21513684,
                ),
                length: 831,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6789640648270596,
                ),
                max_time: PositiveF64(
                    0.0 < 9554505.198379869,
                ),
                length: 912,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.888083230200471,
                ),
                max_time: PositiveF64(
                    0.0 < 9045320.520460188,
                ),
                length: 910,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0372756483473453,
                ),
                max_time: PositiveF64(
                    0.0 < 10905680.556451868,
                ),
                length: 934,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.5614173389491075,
                ),
                max_time: PositiveF64(
                    0.0 < 3996390.158484018,
                ),
                length: 957,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 620ns
 - execution: 5.322937ms
 - cleanup: 9.49µs
INFO  The simulation resulted in a biodiversity of 31269 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            32
 Used       :        39 (peak)  31.88 (ave)

============================================
