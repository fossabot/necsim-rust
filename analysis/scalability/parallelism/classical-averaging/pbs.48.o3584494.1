# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 18301118773726293375,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584494[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-4.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 08:59:30 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 18301118773726293375,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584494[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-4.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 18301118773726293375,
        algorithm: Classical(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584494[1].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcf59b3758; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcf59b3778; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584494[1].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.975512967s
 - execution: 1633.053555468s
 - cleanup: 198.755486ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 12008669.91250819 after 31307813934 steps.

# mpiexec: finished at Fri 21 May 09:27:03 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.020590459193879924,
                ),
                max_time: PositiveF64(
                    0.0 < 3326198.582222276,
                ),
                length: 748,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.031778654581158076,
                ),
                max_time: PositiveF64(
                    0.0 < 5648028.248034603,
                ),
                length: 542,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.03272874324019012,
                ),
                max_time: PositiveF64(
                    0.0 < 8177261.727425391,
                ),
                length: 1141,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.05661652659575378,
                ),
                max_time: PositiveF64(
                    0.0 < 7015105.662442804,
                ),
                length: 675,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07761946938009431,
                ),
                max_time: PositiveF64(
                    0.0 < 9523755.708916867,
                ),
                length: 1049,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1006650363968841,
                ),
                max_time: PositiveF64(
                    0.0 < 6077950.9716342315,
                ),
                length: 708,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1086282596273918,
                ),
                max_time: PositiveF64(
                    0.0 < 8735287.692535905,
                ),
                length: 678,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.13684182586034238,
                ),
                max_time: PositiveF64(
                    0.0 < 10486803.089851175,
                ),
                length: 489,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16733625030293645,
                ),
                max_time: PositiveF64(
                    0.0 < 5889855.607419875,
                ),
                length: 650,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19162504494126278,
                ),
                max_time: PositiveF64(
                    0.0 < 5213863.824137981,
                ),
                length: 528,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.22274499422553454,
                ),
                max_time: PositiveF64(
                    0.0 < 7578724.540567259,
                ),
                length: 746,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.28248106281944624,
                ),
                max_time: PositiveF64(
                    0.0 < 10167458.75544001,
                ),
                length: 678,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3453183297061062,
                ),
                max_time: PositiveF64(
                    0.0 < 8511284.815702965,
                ),
                length: 703,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3549282320082599,
                ),
                max_time: PositiveF64(
                    0.0 < 3267416.318205493,
                ),
                length: 509,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.37715141712277,
                ),
                max_time: PositiveF64(
                    0.0 < 5038220.41179047,
                ),
                length: 484,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4128152113436204,
                ),
                max_time: PositiveF64(
                    0.0 < 12008669.91250819,
                ),
                length: 713,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.45016736764763665,
                ),
                max_time: PositiveF64(
                    0.0 < 5479848.072771827,
                ),
                length: 539,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4859748910513385,
                ),
                max_time: PositiveF64(
                    0.0 < 9682758.816718845,
                ),
                length: 791,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.49470148503226247,
                ),
                max_time: PositiveF64(
                    0.0 < 8147173.137020749,
                ),
                length: 875,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5145191379899815,
                ),
                max_time: PositiveF64(
                    0.0 < 8645228.665179139,
                ),
                length: 690,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.526251008716203,
                ),
                max_time: PositiveF64(
                    0.0 < 9590113.993921276,
                ),
                length: 759,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6297169368267767,
                ),
                max_time: PositiveF64(
                    0.0 < 8785349.912450919,
                ),
                length: 498,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6875091580388226,
                ),
                max_time: PositiveF64(
                    0.0 < 7744981.740574892,
                ),
                length: 728,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7009449355160885,
                ),
                max_time: PositiveF64(
                    0.0 < 2951433.704395667,
                ),
                length: 555,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7066513507680543,
                ),
                max_time: PositiveF64(
                    0.0 < 7630747.310333691,
                ),
                length: 542,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9052128641688337,
                ),
                max_time: PositiveF64(
                    0.0 < 6401445.677375331,
                ),
                length: 642,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9154243443055347,
                ),
                max_time: PositiveF64(
                    0.0 < 5701844.144881253,
                ),
                length: 578,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9680832710225108,
                ),
                max_time: PositiveF64(
                    0.0 < 3994755.813015382,
                ),
                length: 609,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9684961719195837,
                ),
                max_time: PositiveF64(
                    0.0 < 4517521.317277124,
                ),
                length: 510,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.102892838275006,
                ),
                max_time: PositiveF64(
                    0.0 < 6567022.032075915,
                ),
                length: 325,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1695185739866878,
                ),
                max_time: PositiveF64(
                    0.0 < 11818103.000965025,
                ),
                length: 739,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1997565367446328,
                ),
                max_time: PositiveF64(
                    0.0 < 2413500.273621599,
                ),
                length: 670,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2304239394666805,
                ),
                max_time: PositiveF64(
                    0.0 < 5126152.553787848,
                ),
                length: 628,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3210296887563853,
                ),
                max_time: PositiveF64(
                    0.0 < 5393069.491948898,
                ),
                length: 550,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4100338135695882,
                ),
                max_time: PositiveF64(
                    0.0 < 8354182.509908464,
                ),
                length: 360,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5533003856857985,
                ),
                max_time: PositiveF64(
                    0.0 < 7396411.329469254,
                ),
                length: 555,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5855680821057323,
                ),
                max_time: PositiveF64(
                    0.0 < 6823375.543318929,
                ),
                length: 530,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6348909933908908,
                ),
                max_time: PositiveF64(
                    0.0 < 5342799.741873388,
                ),
                length: 638,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.72368369141361,
                ),
                max_time: PositiveF64(
                    0.0 < 9956458.447040496,
                ),
                length: 783,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7248970879170016,
                ),
                max_time: PositiveF64(
                    0.0 < 9323035.990059959,
                ),
                length: 763,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8646156031644558,
                ),
                max_time: PositiveF64(
                    0.0 < 8883178.932991203,
                ),
                length: 708,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9154672749030976,
                ),
                max_time: PositiveF64(
                    0.0 < 8666457.273717286,
                ),
                length: 744,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0884477345194736,
                ),
                max_time: PositiveF64(
                    0.0 < 7460982.249046295,
                ),
                length: 648,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.1941175797922847,
                ),
                max_time: PositiveF64(
                    0.0 < 6778672.49681626,
                ),
                length: 481,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.224708612914913,
                ),
                max_time: PositiveF64(
                    0.0 < 9927203.27173359,
                ),
                length: 868,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.2472630080726335,
                ),
                max_time: PositiveF64(
                    0.0 < 11642735.123793917,
                ),
                length: 788,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.940653880531984,
                ),
                max_time: PositiveF64(
                    0.0 < 10404221.592835851,
                ),
                length: 511,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 5.782555505473376,
                ),
                max_time: PositiveF64(
                    0.0 < 5729149.793909339,
                ),
                length: 589,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 610ns
 - execution: 5.565713ms
 - cleanup: 8.66µs
INFO  The simulation resulted in a biodiversity of 31235 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        56 (peak)  47.64 (ave)

============================================
