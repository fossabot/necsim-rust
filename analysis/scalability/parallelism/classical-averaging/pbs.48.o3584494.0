# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 17596015808059232191,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584494[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-11-2.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 08:56:03 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 17596015808059232191,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584494[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-11-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 17596015808059232191,
        algorithm: Classical(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584494[0].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffd161e8c98; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffd161e8cb8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584494[0].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 16.169065296s
 - execution: 1386.003759629s
 - cleanup: 91.772304ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 13687367.087727074 after 31320474238 steps.

# mpiexec: finished at Fri 21 May 09:19:32 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00434707434112099,
                ),
                max_time: PositiveF64(
                    0.0 < 10470422.003746029,
                ),
                length: 770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.007409596087484327,
                ),
                max_time: PositiveF64(
                    0.0 < 6955975.906049521,
                ),
                length: 667,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.014609139962586098,
                ),
                max_time: PositiveF64(
                    0.0 < 7256861.724429828,
                ),
                length: 671,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0804514978248836,
                ),
                max_time: PositiveF64(
                    0.0 < 12624772.80452419,
                ),
                length: 727,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08458479184492089,
                ),
                max_time: PositiveF64(
                    0.0 < 7947105.17939687,
                ),
                length: 370,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08851575072815157,
                ),
                max_time: PositiveF64(
                    0.0 < 3325543.622420815,
                ),
                length: 556,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1033083183771557,
                ),
                max_time: PositiveF64(
                    0.0 < 9924848.252878338,
                ),
                length: 664,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.10977173913171374,
                ),
                max_time: PositiveF64(
                    0.0 < 6690656.965064186,
                ),
                length: 622,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16260415034804868,
                ),
                max_time: PositiveF64(
                    0.0 < 3316138.010778631,
                ),
                length: 556,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.18359791438114412,
                ),
                max_time: PositiveF64(
                    0.0 < 9272434.263124524,
                ),
                length: 486,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20616752380111478,
                ),
                max_time: PositiveF64(
                    0.0 < 5104251.963813965,
                ),
                length: 625,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.23920225564369907,
                ),
                max_time: PositiveF64(
                    0.0 < 5890374.166297856,
                ),
                length: 521,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2470045308941493,
                ),
                max_time: PositiveF64(
                    0.0 < 8036146.462044649,
                ),
                length: 397,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2537999330275534,
                ),
                max_time: PositiveF64(
                    0.0 < 8769653.959147846,
                ),
                length: 485,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2798213063941578,
                ),
                max_time: PositiveF64(
                    0.0 < 4099215.1233173986,
                ),
                length: 624,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3017757933887192,
                ),
                max_time: PositiveF64(
                    0.0 < 7391328.7579947,
                ),
                length: 603,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3308204911376185,
                ),
                max_time: PositiveF64(
                    0.0 < 9113121.279982345,
                ),
                length: 725,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3320329595185448,
                ),
                max_time: PositiveF64(
                    0.0 < 7749515.004553359,
                ),
                length: 701,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3542013790028976,
                ),
                max_time: PositiveF64(
                    0.0 < 9214410.081176225,
                ),
                length: 756,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3718346044104337,
                ),
                max_time: PositiveF64(
                    0.0 < 9947206.25769174,
                ),
                length: 748,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3900613054108308,
                ),
                max_time: PositiveF64(
                    0.0 < 9933306.202661429,
                ),
                length: 582,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3960502486381945,
                ),
                max_time: PositiveF64(
                    0.0 < 9136232.430086724,
                ),
                length: 1010,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.42579324811198366,
                ),
                max_time: PositiveF64(
                    0.0 < 8100604.195075878,
                ),
                length: 705,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4786832326700357,
                ),
                max_time: PositiveF64(
                    0.0 < 4275518.8386069015,
                ),
                length: 493,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.48599304977425295,
                ),
                max_time: PositiveF64(
                    0.0 < 10670771.738428013,
                ),
                length: 708,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4905053711869663,
                ),
                max_time: PositiveF64(
                    0.0 < 4169896.223815719,
                ),
                length: 547,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.49521116451223535,
                ),
                max_time: PositiveF64(
                    0.0 < 13252765.628124973,
                ),
                length: 811,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4993648145200045,
                ),
                max_time: PositiveF64(
                    0.0 < 6718350.598548196,
                ),
                length: 528,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5061953946279003,
                ),
                max_time: PositiveF64(
                    0.0 < 13039701.779247772,
                ),
                length: 884,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5917197516521052,
                ),
                max_time: PositiveF64(
                    0.0 < 5040727.0480868,
                ),
                length: 678,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6194298305834757,
                ),
                max_time: PositiveF64(
                    0.0 < 7704519.6582642365,
                ),
                length: 695,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6993937926652444,
                ),
                max_time: PositiveF64(
                    0.0 < 10193210.655398794,
                ),
                length: 1171,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7883519500956921,
                ),
                max_time: PositiveF64(
                    0.0 < 9897911.569203284,
                ),
                length: 809,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7897489193054389,
                ),
                max_time: PositiveF64(
                    0.0 < 4500084.195781592,
                ),
                length: 627,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8487351465371861,
                ),
                max_time: PositiveF64(
                    0.0 < 8219031.249726348,
                ),
                length: 553,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9219463279706938,
                ),
                max_time: PositiveF64(
                    0.0 < 6655608.223079365,
                ),
                length: 712,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1314260874954558,
                ),
                max_time: PositiveF64(
                    0.0 < 8487922.061489904,
                ),
                length: 516,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1743566104894454,
                ),
                max_time: PositiveF64(
                    0.0 < 9554710.548247494,
                ),
                length: 474,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.177274721390616,
                ),
                max_time: PositiveF64(
                    0.0 < 6494806.407501597,
                ),
                length: 610,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.194451970715662,
                ),
                max_time: PositiveF64(
                    0.0 < 11730087.1837791,
                ),
                length: 741,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3708361313738975,
                ),
                max_time: PositiveF64(
                    0.0 < 13687367.087727074,
                ),
                length: 686,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3896942153665979,
                ),
                max_time: PositiveF64(
                    0.0 < 6104694.792220828,
                ),
                length: 486,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.526583716990414,
                ),
                max_time: PositiveF64(
                    0.0 < 3032077.776345192,
                ),
                length: 652,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6008416100860619,
                ),
                max_time: PositiveF64(
                    0.0 < 5390228.049408553,
                ),
                length: 719,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6251636646863226,
                ),
                max_time: PositiveF64(
                    0.0 < 7465314.1818105895,
                ),
                length: 524,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9609869257404053,
                ),
                max_time: PositiveF64(
                    0.0 < 6849947.226943455,
                ),
                length: 669,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.388489874264489,
                ),
                max_time: PositiveF64(
                    0.0 < 8650128.250638764,
                ),
                length: 761,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.5335094818450505,
                ),
                max_time: PositiveF64(
                    0.0 < 4762164.779304093,
                ),
                length: 344,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 600ns
 - execution: 4.925378ms
 - cleanup: 12.43µs
INFO  The simulation resulted in a biodiversity of 30969 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        56 (peak)  47.92 (ave)

============================================
