# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 16179430086100937533,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584470[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-24.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 06:57:59 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 16179430086100937533,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584470[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-24.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 16179430086100937533,
        algorithm: Classical(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584470[5].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff2e492348; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff2e492368; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584470[5].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 12.455586053s
 - execution: 1640.745033245s
 - cleanup: 114.397837ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 12995208.101357086 after 31377601977 steps.

# mpiexec: finished at Fri 21 May 07:25:40 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.005627229826586666,
                ),
                max_time: PositiveF64(
                    0.0 < 6110802.008765428,
                ),
                length: 476,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.021459434675780698,
                ),
                max_time: PositiveF64(
                    0.0 < 3088181.522885719,
                ),
                length: 493,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.022756391351447077,
                ),
                max_time: PositiveF64(
                    0.0 < 8831544.076514143,
                ),
                length: 756,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.055979834748564376,
                ),
                max_time: PositiveF64(
                    0.0 < 6285174.97282788,
                ),
                length: 567,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09597533147529334,
                ),
                max_time: PositiveF64(
                    0.0 < 8545799.124985319,
                ),
                length: 532,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.17318967053177162,
                ),
                max_time: PositiveF64(
                    0.0 < 6366354.436850104,
                ),
                length: 463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2020258519949776,
                ),
                max_time: PositiveF64(
                    0.0 < 7617247.4671626445,
                ),
                length: 713,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.25455505970751013,
                ),
                max_time: PositiveF64(
                    0.0 < 7371411.819303245,
                ),
                length: 531,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2587083682691812,
                ),
                max_time: PositiveF64(
                    0.0 < 9850573.058662876,
                ),
                length: 698,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2985758277879746,
                ),
                max_time: PositiveF64(
                    0.0 < 4271847.123213724,
                ),
                length: 363,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3104571447415295,
                ),
                max_time: PositiveF64(
                    0.0 < 10652864.244588574,
                ),
                length: 655,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3128153282412055,
                ),
                max_time: PositiveF64(
                    0.0 < 5505712.404960167,
                ),
                length: 562,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.37821993950217325,
                ),
                max_time: PositiveF64(
                    0.0 < 11817238.140911086,
                ),
                length: 761,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.39447107136627096,
                ),
                max_time: PositiveF64(
                    0.0 < 4747611.944098363,
                ),
                length: 575,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.42616560703573075,
                ),
                max_time: PositiveF64(
                    0.0 < 12995208.101357086,
                ),
                length: 756,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4522926914419685,
                ),
                max_time: PositiveF64(
                    0.0 < 5000200.342050946,
                ),
                length: 431,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4575389049252423,
                ),
                max_time: PositiveF64(
                    0.0 < 8172179.9361131545,
                ),
                length: 637,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4577670284265524,
                ),
                max_time: PositiveF64(
                    0.0 < 7897350.976286458,
                ),
                length: 916,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4610299918243261,
                ),
                max_time: PositiveF64(
                    0.0 < 5194732.334841654,
                ),
                length: 597,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5215699753759051,
                ),
                max_time: PositiveF64(
                    0.0 < 7726566.053179756,
                ),
                length: 653,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6176369436593067,
                ),
                max_time: PositiveF64(
                    0.0 < 7403795.461377804,
                ),
                length: 753,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6574687066846083,
                ),
                max_time: PositiveF64(
                    0.0 < 9290410.981116178,
                ),
                length: 524,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6589460439163449,
                ),
                max_time: PositiveF64(
                    0.0 < 10748969.06325609,
                ),
                length: 686,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7225224570178426,
                ),
                max_time: PositiveF64(
                    0.0 < 7068906.02153137,
                ),
                length: 515,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.763463910934573,
                ),
                max_time: PositiveF64(
                    0.0 < 9810466.559190592,
                ),
                length: 725,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7669848171888783,
                ),
                max_time: PositiveF64(
                    0.0 < 10077091.580328675,
                ),
                length: 599,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7899018491473466,
                ),
                max_time: PositiveF64(
                    0.0 < 10181297.387373798,
                ),
                length: 777,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7993335966907432,
                ),
                max_time: PositiveF64(
                    0.0 < 7516431.514472081,
                ),
                length: 634,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8297866217209147,
                ),
                max_time: PositiveF64(
                    0.0 < 5743914.648068568,
                ),
                length: 639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8507670833936636,
                ),
                max_time: PositiveF64(
                    0.0 < 9501771.451851213,
                ),
                length: 1112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8545460240229403,
                ),
                max_time: PositiveF64(
                    0.0 < 5684623.547045908,
                ),
                length: 622,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8620707467974262,
                ),
                max_time: PositiveF64(
                    0.0 < 6512930.619931082,
                ),
                length: 673,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9754425429996608,
                ),
                max_time: PositiveF64(
                    0.0 < 2745001.1580963912,
                ),
                length: 650,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0020570166219047,
                ),
                max_time: PositiveF64(
                    0.0 < 10296808.206729935,
                ),
                length: 684,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0233815671675857,
                ),
                max_time: PositiveF64(
                    0.0 < 7340637.452360648,
                ),
                length: 781,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0745632616863403,
                ),
                max_time: PositiveF64(
                    0.0 < 4959385.439632111,
                ),
                length: 523,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.16810317243328,
                ),
                max_time: PositiveF64(
                    0.0 < 9460241.16116912,
                ),
                length: 532,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6096036520028068,
                ),
                max_time: PositiveF64(
                    0.0 < 5733929.539769889,
                ),
                length: 696,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9811327223494801,
                ),
                max_time: PositiveF64(
                    0.0 < 8724887.707802927,
                ),
                length: 800,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.068615498736995,
                ),
                max_time: PositiveF64(
                    0.0 < 2096348.6619645571,
                ),
                length: 533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.159676733309689,
                ),
                max_time: PositiveF64(
                    0.0 < 8055601.416992126,
                ),
                length: 641,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.259634156329579,
                ),
                max_time: PositiveF64(
                    0.0 < 10167696.082983008,
                ),
                length: 698,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.2659993085058434,
                ),
                max_time: PositiveF64(
                    0.0 < 10135730.255271584,
                ),
                length: 723,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.371604617821902,
                ),
                max_time: PositiveF64(
                    0.0 < 5478345.632424342,
                ),
                length: 743,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.0514132145428334,
                ),
                max_time: PositiveF64(
                    0.0 < 8890583.857829882,
                ),
                length: 872,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.058413916197193,
                ),
                max_time: PositiveF64(
                    0.0 < 5800979.545858495,
                ),
                length: 541,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.190040353949403,
                ),
                max_time: PositiveF64(
                    0.0 < 10399956.61468437,
                ),
                length: 966,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.701783559127053,
                ),
                max_time: PositiveF64(
                    0.0 < 5235474.350698166,
                ),
                length: 356,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 560ns
 - execution: 4.79147ms
 - cleanup: 7.61µs
INFO  The simulation resulted in a biodiversity of 31133 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        55 (peak)  47.68 (ave)

============================================
