# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 7625139793888902440,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584470[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-9-2.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 06:16:09 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 7625139793888902440,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584470[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-9-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 7625139793888902440,
        algorithm: Classical(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584470[0].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcfee0feb8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcfee0fed8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584470[0].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 19.708963674s
 - execution: 1588.161428404s
 - cleanup: 138.569559ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 17400808.62692003 after 31339344913 steps.

# mpiexec: finished at Fri 21 May 06:43:06 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.028504187061504,
                ),
                max_time: PositiveF64(
                    0.0 < 9668594.798931248,
                ),
                length: 552,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.029000542889943016,
                ),
                max_time: PositiveF64(
                    0.0 < 3430498.8430663915,
                ),
                length: 326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.030159120951648806,
                ),
                max_time: PositiveF64(
                    0.0 < 8302620.707515774,
                ),
                length: 618,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.039124006293247936,
                ),
                max_time: PositiveF64(
                    0.0 < 8058296.130836737,
                ),
                length: 451,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06335130658702355,
                ),
                max_time: PositiveF64(
                    0.0 < 3917034.563372268,
                ),
                length: 569,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07103522123595471,
                ),
                max_time: PositiveF64(
                    0.0 < 8232890.001891003,
                ),
                length: 662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.10872088353601532,
                ),
                max_time: PositiveF64(
                    0.0 < 7664971.615156258,
                ),
                length: 530,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.12606681320042865,
                ),
                max_time: PositiveF64(
                    0.0 < 16546600.581699746,
                ),
                length: 784,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.15255815537667466,
                ),
                max_time: PositiveF64(
                    0.0 < 17400808.62692003,
                ),
                length: 554,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16250919676451978,
                ),
                max_time: PositiveF64(
                    0.0 < 12778175.602468466,
                ),
                length: 653,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.21595532362351946,
                ),
                max_time: PositiveF64(
                    0.0 < 14729599.99948012,
                ),
                length: 756,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2580750443525921,
                ),
                max_time: PositiveF64(
                    0.0 < 8130095.559852746,
                ),
                length: 476,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.27268265505379363,
                ),
                max_time: PositiveF64(
                    0.0 < 9945857.107017145,
                ),
                length: 785,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.33530472738720607,
                ),
                max_time: PositiveF64(
                    0.0 < 5845146.526991365,
                ),
                length: 710,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3410978485905614,
                ),
                max_time: PositiveF64(
                    0.0 < 4341308.618559547,
                ),
                length: 649,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.39831377960674896,
                ),
                max_time: PositiveF64(
                    0.0 < 9504891.089050595,
                ),
                length: 624,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4437128423695057,
                ),
                max_time: PositiveF64(
                    0.0 < 3480593.3542422215,
                ),
                length: 512,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5093684253482721,
                ),
                max_time: PositiveF64(
                    0.0 < 8398639.643233765,
                ),
                length: 699,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5150530177226698,
                ),
                max_time: PositiveF64(
                    0.0 < 9290106.598150535,
                ),
                length: 376,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5535409635931797,
                ),
                max_time: PositiveF64(
                    0.0 < 8097064.948194456,
                ),
                length: 527,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5626927645887232,
                ),
                max_time: PositiveF64(
                    0.0 < 3363230.4939950593,
                ),
                length: 650,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6160557488676687,
                ),
                max_time: PositiveF64(
                    0.0 < 9325879.515773736,
                ),
                length: 764,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6589383164426837,
                ),
                max_time: PositiveF64(
                    0.0 < 10582566.213461813,
                ),
                length: 631,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6698533499270669,
                ),
                max_time: PositiveF64(
                    0.0 < 8974492.772164378,
                ),
                length: 812,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7244771585262594,
                ),
                max_time: PositiveF64(
                    0.0 < 7341564.790287619,
                ),
                length: 751,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7271678274544419,
                ),
                max_time: PositiveF64(
                    0.0 < 6201038.097529185,
                ),
                length: 501,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7677022501820204,
                ),
                max_time: PositiveF64(
                    0.0 < 9089722.14496966,
                ),
                length: 1146,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8571219449090935,
                ),
                max_time: PositiveF64(
                    0.0 < 7562870.493273295,
                ),
                length: 748,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9160225252100285,
                ),
                max_time: PositiveF64(
                    0.0 < 14481764.59766888,
                ),
                length: 686,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9335850992065095,
                ),
                max_time: PositiveF64(
                    0.0 < 9510346.179825312,
                ),
                length: 729,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9625585004640522,
                ),
                max_time: PositiveF64(
                    0.0 < 7303712.655210067,
                ),
                length: 666,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9650592144264877,
                ),
                max_time: PositiveF64(
                    0.0 < 9522660.767807698,
                ),
                length: 663,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.058248355220734,
                ),
                max_time: PositiveF64(
                    0.0 < 9167467.555202028,
                ),
                length: 1046,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.140782300617224,
                ),
                max_time: PositiveF64(
                    0.0 < 8484822.170533994,
                ),
                length: 659,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1650713776346335,
                ),
                max_time: PositiveF64(
                    0.0 < 5006338.247498577,
                ),
                length: 569,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1775181414936453,
                ),
                max_time: PositiveF64(
                    0.0 < 12069794.458162054,
                ),
                length: 696,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2460226884567445,
                ),
                max_time: PositiveF64(
                    0.0 < 9086437.800651398,
                ),
                length: 786,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.263013319087784,
                ),
                max_time: PositiveF64(
                    0.0 < 6354135.858862294,
                ),
                length: 501,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4496756459582965,
                ),
                max_time: PositiveF64(
                    0.0 < 6889234.604591017,
                ),
                length: 707,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4803214460904135,
                ),
                max_time: PositiveF64(
                    0.0 < 7398144.5987889785,
                ),
                length: 493,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5671702962914458,
                ),
                max_time: PositiveF64(
                    0.0 < 9726542.42137641,
                ),
                length: 908,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9844614467233699,
                ),
                max_time: PositiveF64(
                    0.0 < 4621309.179426663,
                ),
                length: 509,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.323244871042605,
                ),
                max_time: PositiveF64(
                    0.0 < 11122184.81610993,
                ),
                length: 693,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.6030276929717027,
                ),
                max_time: PositiveF64(
                    0.0 < 8026040.988913627,
                ),
                length: 652,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.735283747569142,
                ),
                max_time: PositiveF64(
                    0.0 < 6114638.548618704,
                ),
                length: 789,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.8665199201753646,
                ),
                max_time: PositiveF64(
                    0.0 < 5550855.456671785,
                ),
                length: 520,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.355822959832676,
                ),
                max_time: PositiveF64(
                    0.0 < 8595807.60351074,
                ),
                length: 650,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.9719872737701447,
                ),
                max_time: PositiveF64(
                    0.0 < 6947711.508441945,
                ),
                length: 553,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 528ns
 - execution: 5.966414ms
 - cleanup: 11.021µs
INFO  The simulation resulted in a biodiversity of 31291 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        53 (peak)  47.94 (ave)

============================================
