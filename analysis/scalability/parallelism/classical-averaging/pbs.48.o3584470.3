# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 14986570171497065359,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584470[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-11.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 06:47:53 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 14986570171497065359,

        algorithm: Classical(parallelism_mode:Averaging(delta_sync:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3584470[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-11.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 14986570171497065359,
        algorithm: Classical(
            MonolithicArguments {
                parallelism_mode: Averaging(
                    AveragingParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3584470[3].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff62ed18b8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff62ed18d8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3584470[3].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.004748538s
 - execution: 1333.914148884s
 - cleanup: 80.987258ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 17477844.354867592 after 31242341125 steps.

# mpiexec: finished at Fri 21 May 07:10:22 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.010629515454052116,
                ),
                max_time: PositiveF64(
                    0.0 < 8939994.539162131,
                ),
                length: 691,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.023355206230248938,
                ),
                max_time: PositiveF64(
                    0.0 < 7344936.1764713945,
                ),
                length: 766,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06563385512254669,
                ),
                max_time: PositiveF64(
                    0.0 < 8826066.74054933,
                ),
                length: 744,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07322935126405798,
                ),
                max_time: PositiveF64(
                    0.0 < 8136577.5718899425,
                ),
                length: 939,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09475512507558269,
                ),
                max_time: PositiveF64(
                    0.0 < 8776001.964537686,
                ),
                length: 470,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.160338913300218,
                ),
                max_time: PositiveF64(
                    0.0 < 6589882.960418755,
                ),
                length: 507,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.17187518261175286,
                ),
                max_time: PositiveF64(
                    0.0 < 7762421.394599464,
                ),
                length: 526,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.18055637263758015,
                ),
                max_time: PositiveF64(
                    0.0 < 3743193.0101846624,
                ),
                length: 628,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20090753681210044,
                ),
                max_time: PositiveF64(
                    0.0 < 6164353.630223279,
                ),
                length: 519,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20175091904408274,
                ),
                max_time: PositiveF64(
                    0.0 < 3834385.0939972694,
                ),
                length: 547,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.22440786456214812,
                ),
                max_time: PositiveF64(
                    0.0 < 3805673.1631106855,
                ),
                length: 674,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.24937666844120085,
                ),
                max_time: PositiveF64(
                    0.0 < 11866774.592311712,
                ),
                length: 857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.26495458167786584,
                ),
                max_time: PositiveF64(
                    0.0 < 6773387.270750778,
                ),
                length: 535,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.31225135814799176,
                ),
                max_time: PositiveF64(
                    0.0 < 13789413.435689844,
                ),
                length: 665,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.31677686664730315,
                ),
                max_time: PositiveF64(
                    0.0 < 8485939.37555981,
                ),
                length: 660,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3196538575799528,
                ),
                max_time: PositiveF64(
                    0.0 < 6902246.625404484,
                ),
                length: 700,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.33483860738454163,
                ),
                max_time: PositiveF64(
                    0.0 < 11446366.412624478,
                ),
                length: 756,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4372368728844089,
                ),
                max_time: PositiveF64(
                    0.0 < 6694019.678742887,
                ),
                length: 702,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5808692477613938,
                ),
                max_time: PositiveF64(
                    0.0 < 17477844.354867592,
                ),
                length: 635,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6026816084974311,
                ),
                max_time: PositiveF64(
                    0.0 < 3926874.828042284,
                ),
                length: 528,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.603381906528131,
                ),
                max_time: PositiveF64(
                    0.0 < 6840269.342467255,
                ),
                length: 620,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6139633104572622,
                ),
                max_time: PositiveF64(
                    0.0 < 2999278.3836865476,
                ),
                length: 626,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6190833440079164,
                ),
                max_time: PositiveF64(
                    0.0 < 3769683.705539048,
                ),
                length: 662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6665057846122576,
                ),
                max_time: PositiveF64(
                    0.0 < 8238317.207870854,
                ),
                length: 761,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6829763861504087,
                ),
                max_time: PositiveF64(
                    0.0 < 6762222.243245338,
                ),
                length: 510,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8816573192510585,
                ),
                max_time: PositiveF64(
                    0.0 < 5243153.083080423,
                ),
                length: 359,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0215899766303649,
                ),
                max_time: PositiveF64(
                    0.0 < 5767923.925003866,
                ),
                length: 562,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0282665701315958,
                ),
                max_time: PositiveF64(
                    0.0 < 7528251.716617018,
                ),
                length: 746,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0352313649966354,
                ),
                max_time: PositiveF64(
                    0.0 < 7051903.881508035,
                ),
                length: 771,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0705441220777818,
                ),
                max_time: PositiveF64(
                    0.0 < 11838767.238507664,
                ),
                length: 648,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0825097678875173,
                ),
                max_time: PositiveF64(
                    0.0 < 11243902.265763462,
                ),
                length: 765,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.26311464542132,
                ),
                max_time: PositiveF64(
                    0.0 < 6699133.982087235,
                ),
                length: 382,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3732881517220659,
                ),
                max_time: PositiveF64(
                    0.0 < 11037028.489082944,
                ),
                length: 636,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4691399227197457,
                ),
                max_time: PositiveF64(
                    0.0 < 4272935.93369457,
                ),
                length: 557,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5466992184284394,
                ),
                max_time: PositiveF64(
                    0.0 < 9132592.02943885,
                ),
                length: 665,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.577284771598972,
                ),
                max_time: PositiveF64(
                    0.0 < 9517490.370959692,
                ),
                length: 522,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5983908457514093,
                ),
                max_time: PositiveF64(
                    0.0 < 8177191.75333271,
                ),
                length: 558,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.886211481385812,
                ),
                max_time: PositiveF64(
                    0.0 < 12192627.67049438,
                ),
                length: 723,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.098156119496687,
                ),
                max_time: PositiveF64(
                    0.0 < 8940289.643489923,
                ),
                length: 432,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.2502061139567395,
                ),
                max_time: PositiveF64(
                    0.0 < 6983065.847968936,
                ),
                length: 748,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.410965141974591,
                ),
                max_time: PositiveF64(
                    0.0 < 12511795.571011292,
                ),
                length: 1146,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.5051289643301784,
                ),
                max_time: PositiveF64(
                    0.0 < 6771246.224965189,
                ),
                length: 1011,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.5850929180864504,
                ),
                max_time: PositiveF64(
                    0.0 < 4679015.146111578,
                ),
                length: 758,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.721223861065726,
                ),
                max_time: PositiveF64(
                    0.0 < 6086556.826699579,
                ),
                length: 524,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.895771268509291,
                ),
                max_time: PositiveF64(
                    0.0 < 7927658.748513084,
                ),
                length: 525,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.254377308397279,
                ),
                max_time: PositiveF64(
                    0.0 < 9677974.71793418,
                ),
                length: 678,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.261113826381957,
                ),
                max_time: PositiveF64(
                    0.0 < 8996144.402412957,
                ),
                length: 760,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.6335273885922943,
                ),
                max_time: PositiveF64(
                    0.0 < 8828314.361542253,
                ),
                length: 539,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 711ns
 - execution: 8.429894ms
 - cleanup: 32.691µs
INFO  The simulation resulted in a biodiversity of 31243 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        56 (peak)  47.06 (ave)

============================================
