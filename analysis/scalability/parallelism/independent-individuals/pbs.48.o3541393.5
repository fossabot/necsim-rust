# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 17702918665997617791,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-14-3.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 10:14:12 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 17702918665997617791,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-14-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 17702918665997617791,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[5].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff28f8c7d8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff28f8c7f8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[5].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 8.784879122s
 - execution: 6311.987054382s
 - cleanup: 67.998272ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 16580141.06351919 after 825476879299 steps.

# mpiexec: finished at Sun 16 May 11:59:38 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.004457512636699246,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17067,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.021123309104548627,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17088,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0534745981428455,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17097,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06921271607078672,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17086,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08310408701180827,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17105,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09154399109772582,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17103,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.105172107553416,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17147,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14075312842591003,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17128,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.15033184744165617,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17053,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.17798751179349126,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17075,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19556787913081197,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17092,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20986069971678867,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17192,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.21596160674706533,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17078,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.23837042101342898,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17115,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.251508032061287,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17191,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.28307716753367784,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17096,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2903847092111149,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17173,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2941132322536595,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17164,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.294713416921186,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 16986,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.30912453597598,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17146,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3377852627784952,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17077,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3522918532564905,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17094,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.39621571503048725,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17053,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4800459071993719,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17108,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5262904436464506,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17086,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5332738632393257,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17109,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5661889555393136,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17153,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6191128432312778,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.658696671696267,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17175,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6589656357934137,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17191,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.660196897117765,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17065,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6900670742873671,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17177,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7187501557540081,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17188,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7187501557540081,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17066,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.78037352740407,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17101,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8197351644096076,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17039,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8651960028854142,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17086,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.897211579295218,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17126,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9279265777329446,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17142,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9669289932616649,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17181,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9986932677589957,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17062,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1464736215315698,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17135,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2031206239826027,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17097,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.261646256561398,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3246605838334637,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17155,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3521105579791373,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17072,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6723768108790646,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17020,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.15015875562528,
                ),
                max_time: PositiveF64(
                    0.0 < 16580141.06351919,
                ),
                length: 17075,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 474ns
 - execution: 206.034929ms
 - cleanup: 24.101µs
INFO  The simulation resulted in a biodiversity of 31165 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        55 (peak)  48.00 (ave)

============================================
