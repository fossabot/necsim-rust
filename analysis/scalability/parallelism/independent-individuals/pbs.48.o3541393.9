# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 14498553682226552730,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[9].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-7-13.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 16:38:18 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 14498553682226552730,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[9].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-7-13.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 14498553682226552730,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[9].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffdf958da88; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffdf958daa8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[9].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 6.46918865s
 - execution: 4807.670744337s
 - cleanup: 156.368365ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 18074358.89872938 after 824596844582 steps.

# mpiexec: finished at Sun 16 May 17:58:40 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00408062296625511,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17130,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.03605521243058574,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17134,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.05384788940274632,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17050,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06226167643799929,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07336575499013098,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17267,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.13494806257834702,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17164,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14132425874524257,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17135,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16303849999007936,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16390539149771732,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17078,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1791643690456881,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17149,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.22512922264676116,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17098,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.23205360608788728,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17098,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.28947090927889985,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17008,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.29366938984370083,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.30966575943492725,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17104,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.31742083519325837,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17122,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.31923774951229844,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17109,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.33715808985253193,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17131,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4294729592049704,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17043,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.44373158386291434,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17064,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5820648071799774,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 16998,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5948296110435438,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6305063853756023,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17054,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6637723844589163,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17072,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7238752524205747,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17110,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7613973378890597,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17086,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7715854858937907,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17117,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7834034176050384,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17166,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8387367498010265,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8733076152433183,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17177,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9403384712984064,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17092,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0283599997956632,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17098,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.035470203124214,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17124,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0861833546307453,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.152173660489169,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17135,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1705510072478016,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17152,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2117834953905255,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17071,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2339550241117525,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17123,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3209575271176985,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4289799361908504,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17115,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6902957029079764,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17022,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7770653476748475,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7930119364130996,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17090,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8530052322511839,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17056,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.0082724611452503,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17099,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.1238326438489294,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17039,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.271969436917779,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17064,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.26284271307283,
                ),
                max_time: PositiveF64(
                    0.0 < 18074358.89872938,
                ),
                length: 17227,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 449ns
 - execution: 207.981585ms
 - cleanup: 71.492µs
INFO  The simulation resulted in a biodiversity of 31017 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        13 (peak)  48.04 (ave)

============================================
