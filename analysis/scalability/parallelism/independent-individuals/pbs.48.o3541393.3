# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 8030049162334819440,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-13-2.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 10:14:12 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 8030049162334819440,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-13-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 8030049162334819440,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[3].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffdd0608ba8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffdd0608bc8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[3].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 9.055602816s
 - execution: 6363.864578427s
 - cleanup: 68.740111ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 20077203.19540438 after 828583833404 steps.

# mpiexec: finished at Sun 16 May 12:00:30 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.020766731174360675,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17172,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.025844364038333456,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17238,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.031915744550740976,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09419245314310687,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17027,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1077068206496592,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17120,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1331714290957582,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17114,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.15409027673129372,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17177,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.165887777685799,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19761134788879886,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17132,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20680922130235735,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17181,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2248575419470462,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17188,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.22874762781611113,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17242,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2472139606347219,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17146,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.27551902875523937,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17152,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.301747793656161,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3221792497138791,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17145,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.32774356296900664,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3286550269513262,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17132,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3422722675597105,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17206,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3633785341189042,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17083,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3895978422365296,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17121,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.40046469301035525,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17193,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.48517105936678306,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17159,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5274400968520749,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17204,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5472694385570136,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17099,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6935910527974283,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17107,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6935910527974283,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17106,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7000319921359914,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17165,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7073577642785429,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17091,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7301233991144922,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7873271464513802,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17195,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8344426746050042,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17254,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8581633179827761,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17120,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1062172044959755,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17171,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1182811117384448,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17150,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.244305397173505,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17122,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2486660460644332,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17142,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.3050519671173733,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17226,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4022738659541132,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17163,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5664850436830353,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17108,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.629385596791515,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17092,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.686451754787221,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17099,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6935263250169703,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17078,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7229601177205094,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17120,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7242362752322327,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17118,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.25752016390536,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17162,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.345585226516203,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17095,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.1894797825539865,
                ),
                max_time: PositiveF64(
                    0.0 < 20077203.19540438,
                ),
                length: 17178,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 497ns
 - execution: 201.724943ms
 - cleanup: 25.988µs
INFO  The simulation resulted in a biodiversity of 31318 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        55 (peak)  48.07 (ave)

============================================
