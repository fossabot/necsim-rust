# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 17649142939078321497,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[2].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-5-4.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 10:14:12 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 17649142939078321497,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[2].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-5-4.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 17649142939078321497,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[2].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffeef75c068; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffeef75c088; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[2].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 9.549094744s
 - execution: 6471.601587s
 - cleanup: 74.249298ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 16979787.369838547 after 821275495234 steps.

# mpiexec: finished at Sun 16 May 12:02:19 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.017389027483843522,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.02314536068594708,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17081,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.040072796505341124,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16988,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06384115221335152,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17069,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.06672334535013968,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17020,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09299350893757596,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17060,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09380715116448735,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17019,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14255742292960072,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17026,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.18447996705714909,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17063,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20441330292171345,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17028,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2125713837012455,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16969,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.23265033157178516,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16993,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2630487963870367,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17118,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.326299118791713,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17088,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.40128013528346984,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16948,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4352771761849368,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17007,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5105638206470207,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16994,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5334377449844434,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17050,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5418203250039386,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17067,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.558594701407467,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17075,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5964284498506296,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17052,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7143661767919909,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17110,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.731195703353918,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17051,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7349729719275169,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16958,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7977142226898439,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17124,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8187339132468663,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16947,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8350231454936887,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17100,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9330954099046127,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9774149287502238,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17093,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0194417668510334,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16948,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0801780086122221,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17105,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0907634295683741,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17094,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.111421242735525,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17026,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2588906797133663,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17058,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.418637207624159,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17141,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4240175697721493,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17072,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4985952522322215,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 16936,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5514154950315233,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17036,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6277972946759962,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17127,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8990897635691533,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17114,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9066261134727365,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17102,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.009547922072354,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17060,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.1360498305143953,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17029,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.3276935237889065,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17007,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.5712955478514363,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17067,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.7545382680133903,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.054709496639856,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17093,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.5719127277837845,
                ),
                max_time: PositiveF64(
                    0.0 < 16979787.369838547,
                ),
                length: 17050,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 564ns
 - execution: 196.419026ms
 - cleanup: 23.305µs
INFO  The simulation resulted in a biodiversity of 31037 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        55 (peak)  48.04 (ave)

============================================
