# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 11818318929604222692,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[8].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-13-3.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 16:02:24 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 11818318929604222692,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[8].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-13-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 11818318929604222692,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[8].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffdf8b9ba68; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffdf8b9ba88; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[8].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.194773865s
 - execution: 6242.011190506s
 - cleanup: 62.246788ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 13435462.02198916 after 819535877602 steps.

# mpiexec: finished at Sun 16 May 17:46:42 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.013915817281780152,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17377,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.01982320891067113,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17485,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.026895603899488307,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17405,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07151060153609734,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17428,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08195058775182473,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17372,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.09502749148368594,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17366,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.11227406938700168,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17437,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.12950976233261335,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17406,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14444232171197635,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17512,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16623077236057937,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17405,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19043526621903895,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17412,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19260022058871407,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17392,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.21153190560468604,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17421,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2792848849149814,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17426,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.32867626363730595,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17513,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3524126021224827,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.42684715619394886,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17361,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.43167715790579964,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17510,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4495536034417509,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17351,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4567595138404952,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17391,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.47789291743900786,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17483,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.528949191026094,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17365,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5460967074424363,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17482,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5499092642866503,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17434,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5649712930840209,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5775039290784134,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17448,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6619967494377192,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17458,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7618141064285002,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17340,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7986542429967856,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17484,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8818657138094792,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17295,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9482883171899792,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17388,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0684511325747033,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0700122046511458,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17376,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1413592976451672,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17355,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2145312440822023,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17406,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4345649524277668,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17384,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4373695786676575,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17428,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5172959691137873,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17343,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6601318213486707,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7307617138195943,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17451,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9518217543643157,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17397,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.190411374133685,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17485,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.427568615085464,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17424,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.430495545480944,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17424,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.6389052197309697,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17427,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.051327605577491,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17397,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.386852788511238,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17376,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 5.906680118460685,
                ),
                max_time: PositiveF64(
                    0.0 < 13435462.02198916,
                ),
                length: 17386,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 686ns
 - execution: 199.18149ms
 - cleanup: 26.495µs
INFO  The simulation resulted in a biodiversity of 31318 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        54 (peak)  48.08 (ave)

============================================
