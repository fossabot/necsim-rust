# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 10255713683466678430,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[4].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-101-14-1.cx1.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 10:14:12 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 10255713683466678430,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[4].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-101-14-1.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 10255713683466678430,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[4].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffd7136b1b8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffd7136b1d8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[4].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.197897158s
 - execution: 6329.230215861s
 - cleanup: 55.461462ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 14054828.97561814 after 824133929120 steps.

# mpiexec: finished at Sun 16 May 11:59:58 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.01911552704817754,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17040,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.033744844109133254,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.059120846882462885,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17148,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.10027979290668831,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17287,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14385695109010332,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17170,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1506348178776873,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.16336628759024752,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17274,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1872065610809701,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17153,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.18938435625902894,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17179,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1970551701335752,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17080,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2591122045594574,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17127,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.31999198311295207,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3390787854106514,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17211,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.407856289926382,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17128,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4262057832545745,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17144,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4855802633681383,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17145,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5687076034498681,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17080,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6017497021764346,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17174,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6363155629650108,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6398871905265913,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17092,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6514210054558955,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17091,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6562063429602207,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17161,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6963330073711029,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17229,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7396763562908786,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17193,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7750049513056332,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17200,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7872038632336296,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8101888325883579,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8605310172004956,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17162,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9033981994636457,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9263132249248072,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17213,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9670420006534541,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17130,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1664493681412376,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.208354403508527,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17196,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2245072520103568,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17204,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2407848608951269,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17181,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.481631973755456,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17195,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.688978901852206,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17099,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7229567752532957,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17166,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.7757467026278266,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17170,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.062256919575601,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17095,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.283556322621363,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17210,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.6892588580533756,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.755030881689504,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17164,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.8741094476380447,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17171,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.124000124134658,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17169,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.1709692098529354,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17177,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.4840305702614485,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17140,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.086316646123036,
                ),
                max_time: PositiveF64(
                    0.0 < 14054828.97561814,
                ),
                length: 17121,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 613ns
 - execution: 198.619487ms
 - cleanup: 24.597µs
INFO  The simulation resulted in a biodiversity of 31086 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        54 (peak)  48.06 (ave)

============================================
