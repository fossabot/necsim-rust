# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 9480467980229025450,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 48 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-10.cx3.hpc.ic.ac.uk:48
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 10:15:52 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 9480467980229025450,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Individuals,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541393[0].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-10.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 9480467980229025450,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Individuals,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541393[0].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc732011b8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc732011d8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541393[0].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 48 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.102510842s
 - execution: 5066.281879891s
 - cleanup: 90.891501ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 17435922.640916083 after 824613674960 steps.

# mpiexec: finished at Sun 16 May 11:40:34 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.040932786825623735,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16996,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.05500224457912006,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17019,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.05804311044453603,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17045,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.14973329764330123,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16990,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.17031542476709993,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16946,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.1820127553358586,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17056,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19280173750784368,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17032,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19297177160846157,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17031,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.19842523522991096,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16992,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2126861174960455,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17065,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2596970134044283,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17022,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2906482289586003,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16875,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.29419151771762464,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17022,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.29511264471917187,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16946,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.35014125471526203,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16970,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.37379625667697836,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17038,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3785370991232142,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16979,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4075528261161856,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17059,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.41918359380615056,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17111,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.4534101821963521,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16964,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.49385117781209753,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16949,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5085674682711099,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16900,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5111748616133067,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16940,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6027608036762069,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17064,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6293911631575506,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16959,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6398400061159499,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17011,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.646127163555573,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17002,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7190545207696175,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17011,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.7250850759448546,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16975,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8300718753383574,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16906,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8571332195358943,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17025,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8951325895814579,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17087,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8992262990111788,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16932,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.907828835189024,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16897,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9419366137158869,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16949,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.0694227901116142,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16970,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.090918107977869,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17065,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1157497721048637,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17021,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1244801284608856,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16999,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.1915281738421282,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16963,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.246959187800268,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16951,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2861055051323416,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17003,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4273029111017943,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16960,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5531375804091743,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17014,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.5923132666036743,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 16991,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6907268165860123,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17072,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.8330010121040823,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17009,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.105100323921691,
                ),
                max_time: PositiveF64(
                    0.0 < 17435922.640916083,
                ),
                length: 17011,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 430ns
 - execution: 165.139186ms
 - cleanup: 34.951µs
INFO  The simulation resulted in a biodiversity of 30896 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            48
 Used       :        54 (peak)  47.94 (ave)

============================================
