# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 10037540548634797691,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Landscape,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541391[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-11.cx3.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Sun 16 May 10:52:32 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 0.025,
        seed: 10037540548634797691,

        algorithm: Independent(
            delta_t: 2.0,
            step_slice: 10,
            dedup_cache: Relative(factor: 1.0),
            parallelism_mode: Landscape,
        ),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3541391[3].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-11.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 10037540548634797691,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 1,
                        ),
                    },
                ),
                parallelism_mode: Landscape,
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3541391[3].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fffa3c6cdf8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fffa3c6ce18; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3541391[3].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 7.723209276s
 - execution: 431.231691976s
 - cleanup: 53.862069ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 12350085.817186818 after 33222875606 steps.

# mpiexec: finished at Sun 16 May 10:59:55 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.009040538955770172,
                ),
                max_time: PositiveF64(
                    0.0 < 10043749.080045754,
                ),
                length: 1749,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.009581709336051958,
                ),
                max_time: PositiveF64(
                    0.0 < 12350085.817186818,
                ),
                length: 1312,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.026249739259617932,
                ),
                max_time: PositiveF64(
                    0.0 < 11544628.931661103,
                ),
                length: 946,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.03888618208682315,
                ),
                max_time: PositiveF64(
                    0.0 < 4059093.230115097,
                ),
                length: 1002,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.07500972605965739,
                ),
                max_time: PositiveF64(
                    0.0 < 11384026.161934804,
                ),
                length: 1140,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0750171839522833,
                ),
                max_time: PositiveF64(
                    0.0 < 9657722.390279353,
                ),
                length: 1118,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.08602534237460424,
                ),
                max_time: PositiveF64(
                    0.0 < 11178568.042013343,
                ),
                length: 1204,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.20504983925523002,
                ),
                max_time: PositiveF64(
                    0.0 < 5188540.942722456,
                ),
                length: 848,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.2751070138556335,
                ),
                max_time: PositiveF64(
                    0.0 < 6364293.0852860315,
                ),
                length: 1088,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.3062202920562873,
                ),
                max_time: PositiveF64(
                    0.0 < 9627185.251580847,
                ),
                length: 1083,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.36994416507919414,
                ),
                max_time: PositiveF64(
                    0.0 < 7828823.32199544,
                ),
                length: 713,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.38239988671901837,
                ),
                max_time: PositiveF64(
                    0.0 < 9254902.766684113,
                ),
                length: 1296,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.45664953719956136,
                ),
                max_time: PositiveF64(
                    0.0 < 5487399.915538987,
                ),
                length: 878,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5090999791513375,
                ),
                max_time: PositiveF64(
                    0.0 < 9060718.70430959,
                ),
                length: 1010,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5685415764012889,
                ),
                max_time: PositiveF64(
                    0.0 < 7065406.66881727,
                ),
                length: 1169,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.61419580951799,
                ),
                max_time: PositiveF64(
                    0.0 < 5501986.135237898,
                ),
                length: 910,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.6220054649053439,
                ),
                max_time: PositiveF64(
                    0.0 < 4250072.374737799,
                ),
                length: 1103,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8025282741830191,
                ),
                max_time: PositiveF64(
                    0.0 < 8032236.40765718,
                ),
                length: 1035,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8308820975038917,
                ),
                max_time: PositiveF64(
                    0.0 < 6051921.253334208,
                ),
                length: 857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8613667404006662,
                ),
                max_time: PositiveF64(
                    0.0 < 9091049.388289422,
                ),
                length: 934,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.876293165470583,
                ),
                max_time: PositiveF64(
                    0.0 < 5032503.696581001,
                ),
                length: 946,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8906479363461981,
                ),
                max_time: PositiveF64(
                    0.0 < 7518711.478522765,
                ),
                length: 844,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9053234113752631,
                ),
                max_time: PositiveF64(
                    0.0 < 7559528.244203416,
                ),
                length: 1160,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.9165598767077783,
                ),
                max_time: PositiveF64(
                    0.0 < 9089234.819414882,
                ),
                length: 847,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.980702305350976,
                ),
                max_time: PositiveF64(
                    0.0 < 9969391.208869223,
                ),
                length: 1185,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.07909018424689,
                ),
                max_time: PositiveF64(
                    0.0 < 8629061.238471251,
                ),
                length: 1084,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.09088650706812,
                ),
                max_time: PositiveF64(
                    0.0 < 11192822.202230886,
                ),
                length: 970,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.2913802180568286,
                ),
                max_time: PositiveF64(
                    0.0 < 9816532.293817941,
                ),
                length: 1017,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.4386039422566952,
                ),
                max_time: PositiveF64(
                    0.0 < 8880237.168860165,
                ),
                length: 1307,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6561381833862654,
                ),
                max_time: PositiveF64(
                    0.0 < 7831441.761550359,
                ),
                length: 1018,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.665711968749365,
                ),
                max_time: PositiveF64(
                    0.0 < 9434721.538464319,
                ),
                length: 1051,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.9930778274547607,
                ),
                max_time: PositiveF64(
                    0.0 < 6482628.292543766,
                ),
                length: 620,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 590ns
 - execution: 4.344008ms
 - cleanup: 91.512µs
INFO  The simulation resulted in a biodiversity of 31274 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :       124            32
 Used       :        38 (peak)  31.15 (ave)

============================================
