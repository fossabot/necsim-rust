# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 0.001,
        sample: 1.25e-06,
        seed: 16488124845355366434,

        algorithm: SkippingGillespie(parallelism_mode:Optimistic(delta_sync:3.2)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3512716[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-6-17.cx3.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Wed 12 May 09:33:46 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 0.001,
        sample: 1.25e-06,
        seed: 16488124845355366434,

        algorithm: SkippingGillespie(parallelism_mode:Optimistic(delta_sync:3.2)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3512716[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-6-17.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.00000125 <= 1.0,
        ),
        seed: 16488124845355366434,
        algorithm: SkippingGillespie(
            MonolithicArguments {
                parallelism_mode: Optimistic(
                    OptimisticParallelismMode {
                        delta_sync: PositiveF64(
                            0.0 < 3.2,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3512716[1].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffede254d28; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffede254d48; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3512716[1].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 5.180086723s
 - execution: 24.377588966s
 - cleanup: 1.553315ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 18494.872459759474 after 715908 steps.

# mpiexec: finished at Wed 12 May 09:34:21 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.8275077024643746,
                ),
                max_time: PositiveF64(
                    0.0 < 7416.077411816829,
                ),
                length: 161,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.218601375976285,
                ),
                max_time: PositiveF64(
                    0.0 < 9249.56523885196,
                ),
                length: 161,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1.6272291865354527,
                ),
                max_time: PositiveF64(
                    0.0 < 10890.311080320866,
                ),
                length: 209,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.06537174566634,
                ),
                max_time: PositiveF64(
                    0.0 < 15154.862371780886,
                ),
                length: 153,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.810366794089913,
                ),
                max_time: PositiveF64(
                    0.0 < 12856.311872468832,
                ),
                length: 144,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2.977064848481331,
                ),
                max_time: PositiveF64(
                    0.0 < 8304.546850710207,
                ),
                length: 153,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.6960626252120354,
                ),
                max_time: PositiveF64(
                    0.0 < 7612.328595337162,
                ),
                length: 165,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.7819369160396583,
                ),
                max_time: PositiveF64(
                    0.0 < 10423.859123275797,
                ),
                length: 165,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.307026237453802,
                ),
                max_time: PositiveF64(
                    0.0 < 11694.94876852915,
                ),
                length: 182,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 5.037310270735736,
                ),
                max_time: PositiveF64(
                    0.0 < 9548.114531226876,
                ),
                length: 166,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 5.528370687839884,
                ),
                max_time: PositiveF64(
                    0.0 < 10512.384450448339,
                ),
                length: 171,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 5.5572573179904134,
                ),
                max_time: PositiveF64(
                    0.0 < 12136.864669480197,
                ),
                length: 192,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 6.128391647074533,
                ),
                max_time: PositiveF64(
                    0.0 < 8693.437517409435,
                ),
                length: 137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 6.87208422705524,
                ),
                max_time: PositiveF64(
                    0.0 < 9712.481111997738,
                ),
                length: 168,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 7.6809774575693694,
                ),
                max_time: PositiveF64(
                    0.0 < 12942.252428987294,
                ),
                length: 186,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 8.507184652591585,
                ),
                max_time: PositiveF64(
                    0.0 < 13568.788800122318,
                ),
                length: 180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 8.959703249418416,
                ),
                max_time: PositiveF64(
                    0.0 < 15004.390437102642,
                ),
                length: 169,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 9.24683794649029,
                ),
                max_time: PositiveF64(
                    0.0 < 15515.342121174413,
                ),
                length: 132,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 10.937918447583247,
                ),
                max_time: PositiveF64(
                    0.0 < 11933.84149509409,
                ),
                length: 148,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 13.70707097908231,
                ),
                max_time: PositiveF64(
                    0.0 < 18494.872459759474,
                ),
                length: 176,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 13.727322785413504,
                ),
                max_time: PositiveF64(
                    0.0 < 11253.714369168745,
                ),
                length: 155,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 14.356986989634667,
                ),
                max_time: PositiveF64(
                    0.0 < 8775.030959468322,
                ),
                length: 159,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 15.68770535156664,
                ),
                max_time: PositiveF64(
                    0.0 < 11488.13603858092,
                ),
                length: 148,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 16.940038452859742,
                ),
                max_time: PositiveF64(
                    0.0 < 9667.466456953764,
                ),
                length: 174,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 18.627547743165263,
                ),
                max_time: PositiveF64(
                    0.0 < 8762.954588172135,
                ),
                length: 106,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 19.710483598756568,
                ),
                max_time: PositiveF64(
                    0.0 < 13511.221789281699,
                ),
                length: 160,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 20.357666041031894,
                ),
                max_time: PositiveF64(
                    0.0 < 10449.58680272389,
                ),
                length: 176,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 25.11723324135921,
                ),
                max_time: PositiveF64(
                    0.0 < 10248.716348208132,
                ),
                length: 228,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 26.158535669061994,
                ),
                max_time: PositiveF64(
                    0.0 < 12103.131300131887,
                ),
                length: 140,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 26.91935553727138,
                ),
                max_time: PositiveF64(
                    0.0 < 7824.422089491077,
                ),
                length: 171,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 36.43931070115077,
                ),
                max_time: PositiveF64(
                    0.0 < 9266.34623025798,
                ),
                length: 158,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 49.221830694891295,
                ),
                max_time: PositiveF64(
                    0.0 < 8752.37264700103,
                ),
                length: 176,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 570ns
 - execution: 1.107812ms
 - cleanup: 11.31µs
INFO  The simulation resulted in a biodiversity of 5269 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         8 (peak)  28.30 (ave)

============================================
