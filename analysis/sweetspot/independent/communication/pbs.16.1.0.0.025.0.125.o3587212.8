# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 14626328623652091667,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3587212[8].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 16 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-7-17.cx3.hpc.ic.ac.uk:16
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 12:05:55 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 14626328623652091667,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3587212[8].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-7-17.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 14626328623652091667,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.125 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3587212[8].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcb9e408f8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcb9e40918; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3587212[8].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 16 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.962532995s
 - execution: 5.870447026s
 - cleanup: 60.810958ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 37.242706204172144 after 105304286 steps.

# mpiexec: finished at Fri 21 May 12:06:16 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000001423027168323543,
                ),
                max_time: PositiveF64(
                    0.0 < 30.567134737252605,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000020331051842070735,
                ),
                max_time: PositiveF64(
                    0.0 < 31.557155990439046,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000002412451016731154,
                ),
                max_time: PositiveF64(
                    0.0 < 26.641822455863256,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000002689020894841576,
                ),
                max_time: PositiveF64(
                    0.0 < 26.58849464885352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008292963288303312,
                ),
                max_time: PositiveF64(
                    0.0 < 29.944565718498744,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009035474535235011,
                ),
                max_time: PositiveF64(
                    0.0 < 29.227760024228164,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009069290402008434,
                ),
                max_time: PositiveF64(
                    0.0 < 29.997039447816526,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010008123912941258,
                ),
                max_time: PositiveF64(
                    0.0 < 26.799773561371126,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000015447130657930686,
                ),
                max_time: PositiveF64(
                    0.0 < 26.98555580279459,
                ),
                length: 573711,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002002804419531934,
                ),
                max_time: PositiveF64(
                    0.0 < 28.451268853335247,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002796603607024828,
                ),
                max_time: PositiveF64(
                    0.0 < 26.622051692440184,
                ),
                length: 584371,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002970335466478957,
                ),
                max_time: PositiveF64(
                    0.0 < 25.64311338331802,
                ),
                length: 598335,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003652358718242432,
                ),
                max_time: PositiveF64(
                    0.0 < 31.5126988931797,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000037266087826726135,
                ),
                max_time: PositiveF64(
                    0.0 < 28.111515716201065,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000038603866714392865,
                ),
                max_time: PositiveF64(
                    0.0 < 28.248088904459536,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000043778241920477967,
                ),
                max_time: PositiveF64(
                    0.0 < 30.229960440452757,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000046798348724008676,
                ),
                max_time: PositiveF64(
                    0.0 < 29.03309114472112,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004868997499629657,
                ),
                max_time: PositiveF64(
                    0.0 < 27.629538698312363,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000567218070568476,
                ),
                max_time: PositiveF64(
                    0.0 < 27.422582735868417,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006304306768289969,
                ),
                max_time: PositiveF64(
                    0.0 < 26.862415092905422,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006469125965469225,
                ),
                max_time: PositiveF64(
                    0.0 < 30.568836183021283,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007033250853938355,
                ),
                max_time: PositiveF64(
                    0.0 < 27.931684313997405,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007756609257669744,
                ),
                max_time: PositiveF64(
                    0.0 < 29.163089361910878,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007773330684690549,
                ),
                max_time: PositiveF64(
                    0.0 < 30.279690081852955,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008019236136247443,
                ),
                max_time: PositiveF64(
                    0.0 < 30.411931971978767,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000931397233228104,
                ),
                max_time: PositiveF64(
                    0.0 < 29.42406928736903,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009349327190211199,
                ),
                max_time: PositiveF64(
                    0.0 < 27.119793864593163,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000941437015566926,
                ),
                max_time: PositiveF64(
                    0.0 < 37.242706204172144,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009784793889022758,
                ),
                max_time: PositiveF64(
                    0.0 < 27.56380756604546,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009890815247382,
                ),
                max_time: PositiveF64(
                    0.0 < 28.111997688007044,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010109913051170594,
                ),
                max_time: PositiveF64(
                    0.0 < 27.6552804222076,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010188231516772284,
                ),
                max_time: PositiveF64(
                    0.0 < 26.761985095264173,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010432863242759716,
                ),
                max_time: PositiveF64(
                    0.0 < 32.56328977627917,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001165708794492737,
                ),
                max_time: PositiveF64(
                    0.0 < 30.06397105511725,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011692239779148572,
                ),
                max_time: PositiveF64(
                    0.0 < 30.472190445781493,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011885036124703596,
                ),
                max_time: PositiveF64(
                    0.0 < 30.867925723423454,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011910305655615794,
                ),
                max_time: PositiveF64(
                    0.0 < 28.47633104626242,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012269962174071836,
                ),
                max_time: PositiveF64(
                    0.0 < 29.408256410038426,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012283149242175995,
                ),
                max_time: PositiveF64(
                    0.0 < 25.565963916271016,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001239037017986,
                ),
                max_time: PositiveF64(
                    0.0 < 25.84401849367606,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013370826312808504,
                ),
                max_time: PositiveF64(
                    0.0 < 27.309629583085343,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013720223593360892,
                ),
                max_time: PositiveF64(
                    0.0 < 27.817782731169135,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014412794263618522,
                ),
                max_time: PositiveF64(
                    0.0 < 29.133456664806374,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014913034251939905,
                ),
                max_time: PositiveF64(
                    0.0 < 27.56411311461075,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001510800859694239,
                ),
                max_time: PositiveF64(
                    0.0 < 26.76832126079869,
                ),
                length: 578913,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015246009255065474,
                ),
                max_time: PositiveF64(
                    0.0 < 28.39314028648885,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015522165097703322,
                ),
                max_time: PositiveF64(
                    0.0 < 30.015431212361623,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016504118099947007,
                ),
                max_time: PositiveF64(
                    0.0 < 28.184659065950505,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016636031979766486,
                ),
                max_time: PositiveF64(
                    0.0 < 27.046417134230616,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016840736924428334,
                ),
                max_time: PositiveF64(
                    0.0 < 29.827251996873635,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016890703105620908,
                ),
                max_time: PositiveF64(
                    0.0 < 25.18278181407837,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017253956724472275,
                ),
                max_time: PositiveF64(
                    0.0 < 26.365807319149944,
                ),
                length: 339683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001735868395413842,
                ),
                max_time: PositiveF64(
                    0.0 < 29.433600167414365,
                ),
                length: 581305,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017368421087460284,
                ),
                max_time: PositiveF64(
                    0.0 < 24.728312785317875,
                ),
                length: 575084,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018943993645992308,
                ),
                max_time: PositiveF64(
                    0.0 < 27.178072250459095,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001925797134538776,
                ),
                max_time: PositiveF64(
                    0.0 < 27.789663425288317,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001949560557434893,
                ),
                max_time: PositiveF64(
                    0.0 < 28.324431302941406,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001987259032887323,
                ),
                max_time: PositiveF64(
                    0.0 < 33.98960126153617,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020046871229695284,
                ),
                max_time: PositiveF64(
                    0.0 < 26.06671817857403,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020156276003824303,
                ),
                max_time: PositiveF64(
                    0.0 < 26.26133419629358,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002038521229874579,
                ),
                max_time: PositiveF64(
                    0.0 < 27.65617286448911,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020709313275357744,
                ),
                max_time: PositiveF64(
                    0.0 < 29.91302038949128,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020927915420076992,
                ),
                max_time: PositiveF64(
                    0.0 < 29.08063190589209,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021075759609745504,
                ),
                max_time: PositiveF64(
                    0.0 < 27.609243933763693,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021578493919482966,
                ),
                max_time: PositiveF64(
                    0.0 < 30.363433203587782,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021959753235267776,
                ),
                max_time: PositiveF64(
                    0.0 < 27.99021280681665,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022061049403943045,
                ),
                max_time: PositiveF64(
                    0.0 < 25.352887036446585,
                ),
                length: 914183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022176527833539517,
                ),
                max_time: PositiveF64(
                    0.0 < 31.236622800760188,
                ),
                length: 587070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002256921501908593,
                ),
                max_time: PositiveF64(
                    0.0 < 30.474809635453255,
                ),
                length: 587984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000230664910366718,
                ),
                max_time: PositiveF64(
                    0.0 < 27.86728621588928,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023833519202653974,
                ),
                max_time: PositiveF64(
                    0.0 < 28.75196913154166,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024636941817202107,
                ),
                max_time: PositiveF64(
                    0.0 < 26.127138023221057,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002471613672061501,
                ),
                max_time: PositiveF64(
                    0.0 < 26.469051828687974,
                ),
                length: 620588,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024766276859877756,
                ),
                max_time: PositiveF64(
                    0.0 < 25.972396764035555,
                ),
                length: 560360,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002552520291243532,
                ),
                max_time: PositiveF64(
                    0.0 < 26.481776798322812,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002573362886948427,
                ),
                max_time: PositiveF64(
                    0.0 < 26.42223192133705,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002622687443609717,
                ),
                max_time: PositiveF64(
                    0.0 < 27.361564403675494,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026907730488190396,
                ),
                max_time: PositiveF64(
                    0.0 < 31.323957984182066,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027206124919576524,
                ),
                max_time: PositiveF64(
                    0.0 < 30.358569531989133,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002820285776583553,
                ),
                max_time: PositiveF64(
                    0.0 < 26.815541367074616,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028718687344886362,
                ),
                max_time: PositiveF64(
                    0.0 < 26.58458111910127,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002990782996814545,
                ),
                max_time: PositiveF64(
                    0.0 < 30.067666151529767,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030209865853336737,
                ),
                max_time: PositiveF64(
                    0.0 < 31.169193888883125,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003050213346345032,
                ),
                max_time: PositiveF64(
                    0.0 < 31.754610258833207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030691812422101172,
                ),
                max_time: PositiveF64(
                    0.0 < 29.521668864489108,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031746489861927962,
                ),
                max_time: PositiveF64(
                    0.0 < 25.548056210529037,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032094552229744444,
                ),
                max_time: PositiveF64(
                    0.0 < 28.81311056041804,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032302076044543604,
                ),
                max_time: PositiveF64(
                    0.0 < 32.692242230389375,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032910036543154497,
                ),
                max_time: PositiveF64(
                    0.0 < 32.91216868497754,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003315999550779214,
                ),
                max_time: PositiveF64(
                    0.0 < 28.31903241199319,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003712161619484622,
                ),
                max_time: PositiveF64(
                    0.0 < 27.251483311493423,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000037157212887106716,
                ),
                max_time: PositiveF64(
                    0.0 < 26.908711172393673,
                ),
                length: 435396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003827668450528954,
                ),
                max_time: PositiveF64(
                    0.0 < 28.51720485466959,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003833916259743386,
                ),
                max_time: PositiveF64(
                    0.0 < 28.829725023709827,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003865900983501813,
                ),
                max_time: PositiveF64(
                    0.0 < 26.22494798559899,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004016487411828695,
                ),
                max_time: PositiveF64(
                    0.0 < 24.834893146076276,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004070130026068153,
                ),
                max_time: PositiveF64(
                    0.0 < 28.242915135069353,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004360423694893534,
                ),
                max_time: PositiveF64(
                    0.0 < 32.309713609287684,
                ),
                length: 552197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004369412925642191,
                ),
                max_time: PositiveF64(
                    0.0 < 28.715002314106645,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004540405854625007,
                ),
                max_time: PositiveF64(
                    0.0 < 25.625605672280933,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000045743279897259015,
                ),
                max_time: PositiveF64(
                    0.0 < 32.255706888655915,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004799653843812202,
                ),
                max_time: PositiveF64(
                    0.0 < 26.73961504668782,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004938628884454399,
                ),
                max_time: PositiveF64(
                    0.0 < 25.699581098303383,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005362022854615844,
                ),
                max_time: PositiveF64(
                    0.0 < 34.95963575003428,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005455149446054186,
                ),
                max_time: PositiveF64(
                    0.0 < 28.650378559015675,
                ),
                length: 583463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005541329764768843,
                ),
                max_time: PositiveF64(
                    0.0 < 29.648114975906253,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005729126247855376,
                ),
                max_time: PositiveF64(
                    0.0 < 25.54418381469016,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006120641005413763,
                ),
                max_time: PositiveF64(
                    0.0 < 30.11947399132808,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000643884739331968,
                ),
                max_time: PositiveF64(
                    0.0 < 27.60875844829826,
                ),
                length: 631643,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000070179254721414175,
                ),
                max_time: PositiveF64(
                    0.0 < 28.92217071885096,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000074270058242342785,
                ),
                max_time: PositiveF64(
                    0.0 < 27.359269368874735,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008214732428457605,
                ),
                max_time: PositiveF64(
                    0.0 < 27.98725573494187,
                ),
                length: 1000000,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.14µs
 - execution: 29.805699381s
 - cleanup: 170.105µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        32            16
 Used       :         7 (peak)  14.76 (ave)

============================================
