# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 18347782170268073122,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.25)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519964[10].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-109-17-3.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:25:00 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 18347782170268073122,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.25)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519964[10].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-109-17-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.01 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.0025 <= 1.0,
        ),
        seed: 18347782170268073122,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.25 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519964[10].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc217ba4c8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc217ba4e8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519964[10].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 4.555149412s
 - execution: 17.846159431s
 - cleanup: 14.126638ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 3145.9392104979897 after 983028853 steps.

# mpiexec: finished at Thu 13 May 18:25:28 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000654027014809766,
                ),
                max_time: PositiveF64(
                    0.0 < 2339.6768104276084,
                ),
                length: 284430,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000809665774531565,
                ),
                max_time: PositiveF64(
                    0.0 < 2468.0982589896903,
                ),
                length: 310932,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00009013907861760151,
                ),
                max_time: PositiveF64(
                    0.0 < 2309.9246744218217,
                ),
                length: 308264,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00011258284227683157,
                ),
                max_time: PositiveF64(
                    0.0 < 2302.242815186318,
                ),
                length: 304516,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00012010025261965929,
                ),
                max_time: PositiveF64(
                    0.0 < 2435.9915343091848,
                ),
                length: 362743,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0001353233027751033,
                ),
                max_time: PositiveF64(
                    0.0 < 2410.43422655781,
                ),
                length: 317183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00016629470718454442,
                ),
                max_time: PositiveF64(
                    0.0 < 2342.8813523157746,
                ),
                length: 300728,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00019465674541696565,
                ),
                max_time: PositiveF64(
                    0.0 < 2894.0795027059585,
                ),
                length: 307681,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00020759824360339074,
                ),
                max_time: PositiveF64(
                    0.0 < 2979.9134257097808,
                ),
                length: 323175,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0002504407573686307,
                ),
                max_time: PositiveF64(
                    0.0 < 2462.1375117795187,
                ),
                length: 328176,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0002945413298116595,
                ),
                max_time: PositiveF64(
                    0.0 < 2933.488203456983,
                ),
                length: 311073,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00034149354544377175,
                ),
                max_time: PositiveF64(
                    0.0 < 2950.2205711755805,
                ),
                length: 304444,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004155857147608577,
                ),
                max_time: PositiveF64(
                    0.0 < 2459.7392010241574,
                ),
                length: 300008,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005022829634501735,
                ),
                max_time: PositiveF64(
                    0.0 < 2714.376332429755,
                ),
                length: 294697,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005477053845975854,
                ),
                max_time: PositiveF64(
                    0.0 < 2618.8313221280464,
                ),
                length: 305239,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005513457430009194,
                ),
                max_time: PositiveF64(
                    0.0 < 2385.609964227619,
                ),
                length: 309459,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005543420719753001,
                ),
                max_time: PositiveF64(
                    0.0 < 2526.323832430428,
                ),
                length: 314597,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000637785080538078,
                ),
                max_time: PositiveF64(
                    0.0 < 2183.401939681766,
                ),
                length: 300352,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007115159727580367,
                ),
                max_time: PositiveF64(
                    0.0 < 2902.7973826306716,
                ),
                length: 318638,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007518152289159863,
                ),
                max_time: PositiveF64(
                    0.0 < 3145.9392104979897,
                ),
                length: 305089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007662762619523034,
                ),
                max_time: PositiveF64(
                    0.0 < 2513.2096322377283,
                ),
                length: 293602,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0008056422255053874,
                ),
                max_time: PositiveF64(
                    0.0 < 3022.5301383796664,
                ),
                length: 281575,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0008731643312306914,
                ),
                max_time: PositiveF64(
                    0.0 < 2547.148771477702,
                ),
                length: 303879,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0008731652658564015,
                ),
                max_time: PositiveF64(
                    0.0 < 2561.2098919223454,
                ),
                length: 303400,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009039616906691972,
                ),
                max_time: PositiveF64(
                    0.0 < 2796.076625260085,
                ),
                length: 308994,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009369832610053863,
                ),
                max_time: PositiveF64(
                    0.0 < 2424.2657540498517,
                ),
                length: 290565,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0011247913375356244,
                ),
                max_time: PositiveF64(
                    0.0 < 2542.5956385012983,
                ),
                length: 316884,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0013463108147970804,
                ),
                max_time: PositiveF64(
                    0.0 < 2442.3429146271947,
                ),
                length: 291137,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0019655067192672626,
                ),
                max_time: PositiveF64(
                    0.0 < 2942.4160980658635,
                ),
                length: 304540,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0019660310804642256,
                ),
                max_time: PositiveF64(
                    0.0 < 2722.5422729246084,
                ),
                length: 295976,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0026065297545743715,
                ),
                max_time: PositiveF64(
                    0.0 < 2650.7537418935453,
                ),
                length: 324972,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.002643373286428663,
                ),
                max_time: PositiveF64(
                    0.0 < 2663.91529757667,
                ),
                length: 314896,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 777ns
 - execution: 2.130957004s
 - cleanup: 34.069µs
INFO  The simulation resulted in a biodiversity of 9338965 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         8 (peak)  28.87 (ave)

============================================
