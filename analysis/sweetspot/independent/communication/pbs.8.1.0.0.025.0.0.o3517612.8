# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 16775229094711074908,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517612[8].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 8 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-134-4-6.cx1.hpc.ic.ac.uk:8
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 10:04:36 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 16775229094711074908,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517612[8].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-134-4-6.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 16775229094711074908,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517612[8].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffecc967218; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffecc967238; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517612[8].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 8 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 11.329979021s
 - execution: 11.770732659s
 - cleanup: 52.087116ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 36.64306310891369 after 105304286 steps.

# mpiexec: finished at Thu 13 May 10:05:02 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000060797344936247555,
                ),
                max_time: PositiveF64(
                    0.0 < 28.196066163304756,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000013332439596780432,
                ),
                max_time: PositiveF64(
                    0.0 < 26.934852640911984,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000004726320612657986,
                ),
                max_time: PositiveF64(
                    0.0 < 27.64035595998141,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006473072494683763,
                ),
                max_time: PositiveF64(
                    0.0 < 28.644129931836204,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008015413804907112,
                ),
                max_time: PositiveF64(
                    0.0 < 27.45318419838194,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012327920156929295,
                ),
                max_time: PositiveF64(
                    0.0 < 26.264874654309093,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013505643187139427,
                ),
                max_time: PositiveF64(
                    0.0 < 27.191990975472734,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018054674338907617,
                ),
                max_time: PositiveF64(
                    0.0 < 29.263043338820903,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018600361806342391,
                ),
                max_time: PositiveF64(
                    0.0 < 25.84844682659673,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000020270518957810069,
                ),
                max_time: PositiveF64(
                    0.0 < 27.998903988120745,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000022332248383882813,
                ),
                max_time: PositiveF64(
                    0.0 < 31.48250176382376,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000022957683726287925,
                ),
                max_time: PositiveF64(
                    0.0 < 28.878145931075252,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000024017440231061116,
                ),
                max_time: PositiveF64(
                    0.0 < 29.298673363792286,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000025239183659708786,
                ),
                max_time: PositiveF64(
                    0.0 < 28.410814192329266,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002577612562282283,
                ),
                max_time: PositiveF64(
                    0.0 < 27.518957116381088,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000328567726914919,
                ),
                max_time: PositiveF64(
                    0.0 < 36.25317515282803,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000033272856803101547,
                ),
                max_time: PositiveF64(
                    0.0 < 26.009704649554063,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003417570210162424,
                ),
                max_time: PositiveF64(
                    0.0 < 29.954669083706705,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000037125045787567146,
                ),
                max_time: PositiveF64(
                    0.0 < 27.620928299408497,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000403757717537534,
                ),
                max_time: PositiveF64(
                    0.0 < 30.78331123420289,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004329116418122503,
                ),
                max_time: PositiveF64(
                    0.0 < 26.803514307342216,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000044721020886484553,
                ),
                max_time: PositiveF64(
                    0.0 < 32.13249402436307,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005147944906469526,
                ),
                max_time: PositiveF64(
                    0.0 < 33.878631428074605,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005432427430118736,
                ),
                max_time: PositiveF64(
                    0.0 < 27.980951562716356,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005757813875684192,
                ),
                max_time: PositiveF64(
                    0.0 < 29.990091674329513,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005950439976865063,
                ),
                max_time: PositiveF64(
                    0.0 < 26.471050303683676,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006110372643974848,
                ),
                max_time: PositiveF64(
                    0.0 < 26.306895074388493,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006143481898202019,
                ),
                max_time: PositiveF64(
                    0.0 < 28.582347634569075,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006354223058835373,
                ),
                max_time: PositiveF64(
                    0.0 < 24.89640211266294,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006429286758535824,
                ),
                max_time: PositiveF64(
                    0.0 < 34.00748594859983,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007016966485640097,
                ),
                max_time: PositiveF64(
                    0.0 < 29.57322929856953,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008442553831033983,
                ),
                max_time: PositiveF64(
                    0.0 < 31.267536686347928,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009285422697402623,
                ),
                max_time: PositiveF64(
                    0.0 < 29.474448263182023,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009353313717985756,
                ),
                max_time: PositiveF64(
                    0.0 < 27.304472660010024,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009430223701922813,
                ),
                max_time: PositiveF64(
                    0.0 < 29.388257648902503,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010065923389257492,
                ),
                max_time: PositiveF64(
                    0.0 < 27.94003005980681,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010226274810287705,
                ),
                max_time: PositiveF64(
                    0.0 < 28.334108085623612,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010295782343350268,
                ),
                max_time: PositiveF64(
                    0.0 < 29.320549384018047,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010575738990104,
                ),
                max_time: PositiveF64(
                    0.0 < 31.764379326357542,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011244459335868484,
                ),
                max_time: PositiveF64(
                    0.0 < 27.552497394346062,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012629144113818214,
                ),
                max_time: PositiveF64(
                    0.0 < 29.485066011910877,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000132067620145504,
                ),
                max_time: PositiveF64(
                    0.0 < 31.758520234186214,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013239995141911542,
                ),
                max_time: PositiveF64(
                    0.0 < 26.99556389877397,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001327908710213599,
                ),
                max_time: PositiveF64(
                    0.0 < 26.38641815795523,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013525191003282977,
                ),
                max_time: PositiveF64(
                    0.0 < 28.196846063865337,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001353545774351872,
                ),
                max_time: PositiveF64(
                    0.0 < 26.39376315865849,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001369760680991483,
                ),
                max_time: PositiveF64(
                    0.0 < 27.784790430040832,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013968602913250194,
                ),
                max_time: PositiveF64(
                    0.0 < 27.517519989935884,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014014752977575817,
                ),
                max_time: PositiveF64(
                    0.0 < 29.551551986309484,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014054046376665852,
                ),
                max_time: PositiveF64(
                    0.0 < 29.1129248263541,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014284563479294299,
                ),
                max_time: PositiveF64(
                    0.0 < 26.947839280219753,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001428758492350024,
                ),
                max_time: PositiveF64(
                    0.0 < 28.894976074665824,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014431622569199831,
                ),
                max_time: PositiveF64(
                    0.0 < 28.767716180282562,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014472807480236938,
                ),
                max_time: PositiveF64(
                    0.0 < 28.977219362304076,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014486103741551126,
                ),
                max_time: PositiveF64(
                    0.0 < 28.63772733448659,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014864846981099689,
                ),
                max_time: PositiveF64(
                    0.0 < 27.742217605565045,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014906794343350072,
                ),
                max_time: PositiveF64(
                    0.0 < 30.309980917583612,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014907688231091676,
                ),
                max_time: PositiveF64(
                    0.0 < 28.576299458864053,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015225317337441702,
                ),
                max_time: PositiveF64(
                    0.0 < 29.15626176135656,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016944722597278528,
                ),
                max_time: PositiveF64(
                    0.0 < 29.98137688641318,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001695889683406282,
                ),
                max_time: PositiveF64(
                    0.0 < 28.866027416185194,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001733779664281343,
                ),
                max_time: PositiveF64(
                    0.0 < 32.32050766924041,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017661181378469948,
                ),
                max_time: PositiveF64(
                    0.0 < 25.521767164630973,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017779846628318552,
                ),
                max_time: PositiveF64(
                    0.0 < 24.986960456728067,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017976267588371009,
                ),
                max_time: PositiveF64(
                    0.0 < 27.27081702657891,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019370768217230605,
                ),
                max_time: PositiveF64(
                    0.0 < 32.000666281911585,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021236994646178786,
                ),
                max_time: PositiveF64(
                    0.0 < 29.671653358664866,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002163515002984173,
                ),
                max_time: PositiveF64(
                    0.0 < 28.362117749884632,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021848554043746304,
                ),
                max_time: PositiveF64(
                    0.0 < 27.485569074544088,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022525632240033566,
                ),
                max_time: PositiveF64(
                    0.0 < 28.723372038249842,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023167789314770815,
                ),
                max_time: PositiveF64(
                    0.0 < 25.597266145405065,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002344152933153598,
                ),
                max_time: PositiveF64(
                    0.0 < 29.078909430772676,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023628963269350933,
                ),
                max_time: PositiveF64(
                    0.0 < 28.78076888222968,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023809077034919746,
                ),
                max_time: PositiveF64(
                    0.0 < 24.35000893078221,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002436129298566403,
                ),
                max_time: PositiveF64(
                    0.0 < 30.14938273228596,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024477826446323014,
                ),
                max_time: PositiveF64(
                    0.0 < 25.185833804079127,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024558754163628294,
                ),
                max_time: PositiveF64(
                    0.0 < 28.614805079438575,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024726377356731888,
                ),
                max_time: PositiveF64(
                    0.0 < 26.306881936880252,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002493783002044392,
                ),
                max_time: PositiveF64(
                    0.0 < 36.64306310891369,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002520351020385281,
                ),
                max_time: PositiveF64(
                    0.0 < 26.759742555386808,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025290359170759835,
                ),
                max_time: PositiveF64(
                    0.0 < 29.070269579171132,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002531149797535548,
                ),
                max_time: PositiveF64(
                    0.0 < 27.65428451986178,
                ),
                length: 971326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025402738035307237,
                ),
                max_time: PositiveF64(
                    0.0 < 24.897539288754352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025501224351631713,
                ),
                max_time: PositiveF64(
                    0.0 < 26.31194961608827,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025715220247635173,
                ),
                max_time: PositiveF64(
                    0.0 < 31.158003032841933,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026282986964609734,
                ),
                max_time: PositiveF64(
                    0.0 < 30.81156290095479,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000270149269065989,
                ),
                max_time: PositiveF64(
                    0.0 < 24.252505492838083,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028267100471435214,
                ),
                max_time: PositiveF64(
                    0.0 < 26.749643955670052,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003088915791482627,
                ),
                max_time: PositiveF64(
                    0.0 < 27.39062337211177,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032079970621601284,
                ),
                max_time: PositiveF64(
                    0.0 < 31.170343150508387,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003291806677796494,
                ),
                max_time: PositiveF64(
                    0.0 < 30.846728349135542,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033401925006448785,
                ),
                max_time: PositiveF64(
                    0.0 < 29.901204498074176,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033760256554216106,
                ),
                max_time: PositiveF64(
                    0.0 < 30.220471193638186,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003486795389084918,
                ),
                max_time: PositiveF64(
                    0.0 < 31.896875804742937,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036788958807099092,
                ),
                max_time: PositiveF64(
                    0.0 < 25.804028375950338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036854183493861825,
                ),
                max_time: PositiveF64(
                    0.0 < 29.079084354026882,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036895771965417268,
                ),
                max_time: PositiveF64(
                    0.0 < 30.8323677021697,
                ),
                length: 495488,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004153397174799789,
                ),
                max_time: PositiveF64(
                    0.0 < 26.883496081540372,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004317896828975876,
                ),
                max_time: PositiveF64(
                    0.0 < 31.92377664217105,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004646923776052692,
                ),
                max_time: PositiveF64(
                    0.0 < 25.69465856036194,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005084857804815712,
                ),
                max_time: PositiveF64(
                    0.0 < 34.93123179814053,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005154708533627872,
                ),
                max_time: PositiveF64(
                    0.0 < 21.90682222286285,
                ),
                length: 55984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005698009315491248,
                ),
                max_time: PositiveF64(
                    0.0 < 27.95495025807756,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006052555349134181,
                ),
                max_time: PositiveF64(
                    0.0 < 25.4769201071738,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006261857816991512,
                ),
                max_time: PositiveF64(
                    0.0 < 29.382938242872136,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006712925221252775,
                ),
                max_time: PositiveF64(
                    0.0 < 23.302023144495703,
                ),
                length: 170533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006960486177431946,
                ),
                max_time: PositiveF64(
                    0.0 < 26.702621473823736,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007286624671698494,
                ),
                max_time: PositiveF64(
                    0.0 < 26.123887462971986,
                ),
                length: 172355,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000013547087490406451,
                ),
                max_time: PositiveF64(
                    0.0 < 25.1783614196555,
                ),
                length: 135444,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000026162167438836814,
                ),
                max_time: PositiveF64(
                    0.0 < 22.068939400474363,
                ),
                length: 125908,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00002798013380045372,
                ),
                max_time: PositiveF64(
                    0.0 < 21.999529801608798,
                ),
                length: 177248,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 814ns
 - execution: 35.024239922s
 - cleanup: 56.838µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             8
 Used       :        11 (peak)   6.57 (ave)

============================================
