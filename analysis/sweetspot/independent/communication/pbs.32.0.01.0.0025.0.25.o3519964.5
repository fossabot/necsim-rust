# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 13736152577527724687,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.25)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519964[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-100-4-3.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:24:59 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 13736152577527724687,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.25)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519964[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-100-4-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.01 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.0025 <= 1.0,
        ),
        seed: 13736152577527724687,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.25 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519964[5].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fffa1880628; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fffa1880648; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519964[5].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 4.930960663s
 - execution: 17.427436406s
 - cleanup: 4.514528ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 3029.808683796907 after 982755034 steps.

# mpiexec: finished at Thu 13 May 18:25:25 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00003664151435961438,
                ),
                max_time: PositiveF64(
                    0.0 < 2782.67341122049,
                ),
                length: 316744,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00003826526695366317,
                ),
                max_time: PositiveF64(
                    0.0 < 2867.599478179345,
                ),
                length: 303992,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00003936510027419127,
                ),
                max_time: PositiveF64(
                    0.0 < 2751.9524335189262,
                ),
                length: 293651,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00006953772778123257,
                ),
                max_time: PositiveF64(
                    0.0 < 2405.5103487959886,
                ),
                length: 310700,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00010522253169470419,
                ),
                max_time: PositiveF64(
                    0.0 < 2650.5402245638056,
                ),
                length: 299302,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00010998962486241659,
                ),
                max_time: PositiveF64(
                    0.0 < 2289.133688613485,
                ),
                length: 301276,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00012465728126437314,
                ),
                max_time: PositiveF64(
                    0.0 < 2785.075131782997,
                ),
                length: 290277,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00013219721594293077,
                ),
                max_time: PositiveF64(
                    0.0 < 2629.4246962300053,
                ),
                length: 295941,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00015159355575083966,
                ),
                max_time: PositiveF64(
                    0.0 < 2567.100797796295,
                ),
                length: 304492,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00016848474503616817,
                ),
                max_time: PositiveF64(
                    0.0 < 3029.808683796907,
                ),
                length: 301737,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0001722640866796965,
                ),
                max_time: PositiveF64(
                    0.0 < 2325.264118611895,
                ),
                length: 291072,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000183769949124446,
                ),
                max_time: PositiveF64(
                    0.0 < 2767.490969499291,
                ),
                length: 325207,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0001968826459458617,
                ),
                max_time: PositiveF64(
                    0.0 < 2793.671621438333,
                ),
                length: 326862,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00028967627632880966,
                ),
                max_time: PositiveF64(
                    0.0 < 2396.054568463144,
                ),
                length: 308213,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00041395497757668043,
                ),
                max_time: PositiveF64(
                    0.0 < 3020.13555441582,
                ),
                length: 317749,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004194228095194541,
                ),
                max_time: PositiveF64(
                    0.0 < 2377.3936972529,
                ),
                length: 307305,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00042226304121095737,
                ),
                max_time: PositiveF64(
                    0.0 < 2409.8581450333486,
                ),
                length: 317869,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00044507780215474746,
                ),
                max_time: PositiveF64(
                    0.0 < 2611.444021306657,
                ),
                length: 314626,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00046461623793819795,
                ),
                max_time: PositiveF64(
                    0.0 < 2583.7385744044086,
                ),
                length: 315470,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00047455882020208673,
                ),
                max_time: PositiveF64(
                    0.0 < 2514.84769020131,
                ),
                length: 284054,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004962238198513713,
                ),
                max_time: PositiveF64(
                    0.0 < 2609.406163126166,
                ),
                length: 280722,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005604314984439251,
                ),
                max_time: PositiveF64(
                    0.0 < 2599.7347248769534,
                ),
                length: 322041,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005780523205228816,
                ),
                max_time: PositiveF64(
                    0.0 < 2681.955015959752,
                ),
                length: 310554,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006505797970626781,
                ),
                max_time: PositiveF64(
                    0.0 < 2799.765019320903,
                ),
                length: 303227,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006905895214992519,
                ),
                max_time: PositiveF64(
                    0.0 < 2560.2465527212034,
                ),
                length: 304547,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007905755118983726,
                ),
                max_time: PositiveF64(
                    0.0 < 2548.254410904067,
                ),
                length: 294486,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0008468891091478747,
                ),
                max_time: PositiveF64(
                    0.0 < 2532.0561696303785,
                ),
                length: 309062,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009599881633939877,
                ),
                max_time: PositiveF64(
                    0.0 < 2747.8418753421793,
                ),
                length: 310197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.001104768088254493,
                ),
                max_time: PositiveF64(
                    0.0 < 2558.6681577364297,
                ),
                length: 304193,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0020865702389369356,
                ),
                max_time: PositiveF64(
                    0.0 < 2850.8850903544035,
                ),
                length: 361966,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0021398279229342676,
                ),
                max_time: PositiveF64(
                    0.0 < 2910.121550362479,
                ),
                length: 304480,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0023549528400904074,
                ),
                max_time: PositiveF64(
                    0.0 < 2424.4625289289393,
                ),
                length: 305118,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 622ns
 - execution: 2.35718177s
 - cleanup: 31.076µs
INFO  The simulation resulted in a biodiversity of 9338588 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         2 (peak)  29.26 (ave)

============================================
