# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 15093411858939201882,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.75)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519959[9].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-6-16.cx3.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:15:55 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 15093411858939201882,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.75)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519959[9].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-6-16.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 15093411858939201882,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.75 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519959[9].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcc5354d28; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcc5354d48; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519959[9].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 12.614127857s
 - execution: 4.595310225s
 - cleanup: 86.547501ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 35.52386025105909 after 105304286 steps.

# mpiexec: finished at Thu 13 May 18:16:19 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000001577418196063718,
                ),
                max_time: PositiveF64(
                    0.0 < 28.198329601271787,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000009109875076518392,
                ),
                max_time: PositiveF64(
                    0.0 < 26.698173330964163,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000013503612672494114,
                ),
                max_time: PositiveF64(
                    0.0 < 28.61793733551973,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008053747002634282,
                ),
                max_time: PositiveF64(
                    0.0 < 27.975175008716207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011582561049161555,
                ),
                max_time: PositiveF64(
                    0.0 < 28.363151508235763,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001227864193653616,
                ),
                max_time: PositiveF64(
                    0.0 < 26.43526788770388,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013851442381973555,
                ),
                max_time: PositiveF64(
                    0.0 < 26.00689158048953,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000016369436028895734,
                ),
                max_time: PositiveF64(
                    0.0 < 30.930041514945977,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001839441901574368,
                ),
                max_time: PositiveF64(
                    0.0 < 27.667544814967485,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001891196413361662,
                ),
                max_time: PositiveF64(
                    0.0 < 29.585214945213497,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021709110953338495,
                ),
                max_time: PositiveF64(
                    0.0 < 26.962610244696457,
                ),
                length: 286977,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002278607391659193,
                ),
                max_time: PositiveF64(
                    0.0 < 30.134966512107887,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002632936874080727,
                ),
                max_time: PositiveF64(
                    0.0 < 32.263193515362794,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000027012814235449767,
                ),
                max_time: PositiveF64(
                    0.0 < 28.75329282451891,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002903629575667921,
                ),
                max_time: PositiveF64(
                    0.0 < 27.54306543482198,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000032516279085959,
                ),
                max_time: PositiveF64(
                    0.0 < 27.337486704660485,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000040004873330667934,
                ),
                max_time: PositiveF64(
                    0.0 < 28.45771018171929,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004261207198208439,
                ),
                max_time: PositiveF64(
                    0.0 < 26.153869942666667,
                ),
                length: 220334,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004803132636066465,
                ),
                max_time: PositiveF64(
                    0.0 < 32.90880506166383,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004852176882508275,
                ),
                max_time: PositiveF64(
                    0.0 < 26.01060537922216,
                ),
                length: 281180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005421915191816673,
                ),
                max_time: PositiveF64(
                    0.0 < 25.70655992602689,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005626841922956594,
                ),
                max_time: PositiveF64(
                    0.0 < 28.284331066478664,
                ),
                length: 472100,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005826569365874334,
                ),
                max_time: PositiveF64(
                    0.0 < 29.305241202952477,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005962961174832415,
                ),
                max_time: PositiveF64(
                    0.0 < 27.542341553952973,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006177749900526663,
                ),
                max_time: PositiveF64(
                    0.0 < 30.31035342527567,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006409595232348408,
                ),
                max_time: PositiveF64(
                    0.0 < 29.301957288711158,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006951823017242731,
                ),
                max_time: PositiveF64(
                    0.0 < 29.310143409924493,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007193156598139794,
                ),
                max_time: PositiveF64(
                    0.0 < 25.23565041855308,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007436208157574065,
                ),
                max_time: PositiveF64(
                    0.0 < 27.638460998105586,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007571731100441959,
                ),
                max_time: PositiveF64(
                    0.0 < 31.27904154365913,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007822105435595361,
                ),
                max_time: PositiveF64(
                    0.0 < 29.642879843292747,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007885848335442702,
                ),
                max_time: PositiveF64(
                    0.0 < 32.135362106218,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007903073648285464,
                ),
                max_time: PositiveF64(
                    0.0 < 29.0922865924713,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007904472290598541,
                ),
                max_time: PositiveF64(
                    0.0 < 26.968170487230815,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008139816159991042,
                ),
                max_time: PositiveF64(
                    0.0 < 35.52386025105909,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008741588472527262,
                ),
                max_time: PositiveF64(
                    0.0 < 29.64586035324027,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008837074150225277,
                ),
                max_time: PositiveF64(
                    0.0 < 30.630100538535643,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009179401128101006,
                ),
                max_time: PositiveF64(
                    0.0 < 28.194868302121897,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009610892995337572,
                ),
                max_time: PositiveF64(
                    0.0 < 26.906897803397776,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009760458269392203,
                ),
                max_time: PositiveF64(
                    0.0 < 21.463963117423013,
                ),
                length: 44329,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009859848829063544,
                ),
                max_time: PositiveF64(
                    0.0 < 29.954113498955685,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010523766955095049,
                ),
                max_time: PositiveF64(
                    0.0 < 31.532820722063377,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011072325004080064,
                ),
                max_time: PositiveF64(
                    0.0 < 26.01905470055328,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001121310774232498,
                ),
                max_time: PositiveF64(
                    0.0 < 28.73650761620043,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011284306394854227,
                ),
                max_time: PositiveF64(
                    0.0 < 28.241350222081824,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001205204200882548,
                ),
                max_time: PositiveF64(
                    0.0 < 25.642161839602675,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001225133641757914,
                ),
                max_time: PositiveF64(
                    0.0 < 26.80449543650999,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013096823370251087,
                ),
                max_time: PositiveF64(
                    0.0 < 26.65020604968959,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013140573704162328,
                ),
                max_time: PositiveF64(
                    0.0 < 27.92486356304551,
                ),
                length: 616326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013195407974619933,
                ),
                max_time: PositiveF64(
                    0.0 < 28.461949457634887,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013220143857406441,
                ),
                max_time: PositiveF64(
                    0.0 < 25.51374372490484,
                ),
                length: 273284,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013310915880637708,
                ),
                max_time: PositiveF64(
                    0.0 < 34.412688004958426,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000133442910971171,
                ),
                max_time: PositiveF64(
                    0.0 < 26.421553165728685,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013457616221401736,
                ),
                max_time: PositiveF64(
                    0.0 < 27.100629552677415,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013468452003673193,
                ),
                max_time: PositiveF64(
                    0.0 < 31.008705408504852,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013494481324038965,
                ),
                max_time: PositiveF64(
                    0.0 < 26.915851650656446,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001460745958081766,
                ),
                max_time: PositiveF64(
                    0.0 < 26.434996810632118,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001473722210654227,
                ),
                max_time: PositiveF64(
                    0.0 < 28.353046184647013,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000154245903244421,
                ),
                max_time: PositiveF64(
                    0.0 < 28.260374168456067,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015476901324418257,
                ),
                max_time: PositiveF64(
                    0.0 < 23.404079396931074,
                ),
                length: 280317,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015795009111752023,
                ),
                max_time: PositiveF64(
                    0.0 < 26.857144112501512,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015882825135649092,
                ),
                max_time: PositiveF64(
                    0.0 < 27.819734599993254,
                ),
                length: 295354,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001591066619566206,
                ),
                max_time: PositiveF64(
                    0.0 < 30.056815240029124,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015989873569655089,
                ),
                max_time: PositiveF64(
                    0.0 < 28.640700032056547,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016369513636260713,
                ),
                max_time: PositiveF64(
                    0.0 < 25.180828307610888,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001702462391339754,
                ),
                max_time: PositiveF64(
                    0.0 < 27.980834265363256,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017073715880000506,
                ),
                max_time: PositiveF64(
                    0.0 < 28.707952987293403,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017676898786400663,
                ),
                max_time: PositiveF64(
                    0.0 < 28.27722675930234,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017701171853290454,
                ),
                max_time: PositiveF64(
                    0.0 < 30.57607997093197,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001784899426315878,
                ),
                max_time: PositiveF64(
                    0.0 < 24.144911505555037,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001872885238007882,
                ),
                max_time: PositiveF64(
                    0.0 < 32.146399789064205,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018940581508752885,
                ),
                max_time: PositiveF64(
                    0.0 < 26.008760049588616,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019270588005881883,
                ),
                max_time: PositiveF64(
                    0.0 < 28.65212706489097,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019978219409355624,
                ),
                max_time: PositiveF64(
                    0.0 < 30.791999532568752,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002030255960849825,
                ),
                max_time: PositiveF64(
                    0.0 < 29.569709577805444,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021121017890202154,
                ),
                max_time: PositiveF64(
                    0.0 < 25.737188218750205,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021400412966721127,
                ),
                max_time: PositiveF64(
                    0.0 < 25.5009994180417,
                ),
                length: 217270,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021530135926872696,
                ),
                max_time: PositiveF64(
                    0.0 < 30.743602758568905,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021671269870293663,
                ),
                max_time: PositiveF64(
                    0.0 < 25.0327786000077,
                ),
                length: 433662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002272628620569872,
                ),
                max_time: PositiveF64(
                    0.0 < 29.451677119822367,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022782456840508836,
                ),
                max_time: PositiveF64(
                    0.0 < 25.69704069763025,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022860797582735515,
                ),
                max_time: PositiveF64(
                    0.0 < 25.715022709374303,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024280278582144987,
                ),
                max_time: PositiveF64(
                    0.0 < 31.137434119517955,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002489769602709302,
                ),
                max_time: PositiveF64(
                    0.0 < 30.055782263280918,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024905104153982727,
                ),
                max_time: PositiveF64(
                    0.0 < 30.95434955833019,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024951761315450405,
                ),
                max_time: PositiveF64(
                    0.0 < 32.573515106718254,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025104152345800657,
                ),
                max_time: PositiveF64(
                    0.0 < 28.552495402992236,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025273984713414244,
                ),
                max_time: PositiveF64(
                    0.0 < 27.87025840808953,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002564099325919056,
                ),
                max_time: PositiveF64(
                    0.0 < 25.81539149398691,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002740067368278698,
                ),
                max_time: PositiveF64(
                    0.0 < 28.66898771692555,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002831203498032675,
                ),
                max_time: PositiveF64(
                    0.0 < 29.796672383184884,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003011257112828236,
                ),
                max_time: PositiveF64(
                    0.0 < 23.989217806495514,
                ),
                length: 210432,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030251457289187655,
                ),
                max_time: PositiveF64(
                    0.0 < 24.3126860656838,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030412702559101668,
                ),
                max_time: PositiveF64(
                    0.0 < 25.531130689229027,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003083544208581923,
                ),
                max_time: PositiveF64(
                    0.0 < 28.03134277190334,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003511816554779834,
                ),
                max_time: PositiveF64(
                    0.0 < 28.435153638281655,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035532583744779522,
                ),
                max_time: PositiveF64(
                    0.0 < 33.936082029586146,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036143116652342933,
                ),
                max_time: PositiveF64(
                    0.0 < 29.66063854822903,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000039403582691166505,
                ),
                max_time: PositiveF64(
                    0.0 < 28.918065615782282,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004202663670405116,
                ),
                max_time: PositiveF64(
                    0.0 < 30.222525305906622,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000043001009167320525,
                ),
                max_time: PositiveF64(
                    0.0 < 24.039946927728487,
                ),
                length: 292119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000045092965980653155,
                ),
                max_time: PositiveF64(
                    0.0 < 27.6850900576158,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004856569038313996,
                ),
                max_time: PositiveF64(
                    0.0 < 26.494044044273963,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004968707096042468,
                ),
                max_time: PositiveF64(
                    0.0 < 28.971333081636807,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005117716223579372,
                ),
                max_time: PositiveF64(
                    0.0 < 27.467710523053192,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005387226821307323,
                ),
                max_time: PositiveF64(
                    0.0 < 23.79154037804377,
                ),
                length: 311358,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005455261152809143,
                ),
                max_time: PositiveF64(
                    0.0 < 23.904230689437078,
                ),
                length: 300125,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005475032172075345,
                ),
                max_time: PositiveF64(
                    0.0 < 30.98446278604659,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005503047834365393,
                ),
                max_time: PositiveF64(
                    0.0 < 30.52341849818926,
                ),
                length: 287076,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000060892267730872085,
                ),
                max_time: PositiveF64(
                    0.0 < 25.94583238237216,
                ),
                length: 292252,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006242077490725695,
                ),
                max_time: PositiveF64(
                    0.0 < 24.425825609965848,
                ),
                length: 369800,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006569850072579708,
                ),
                max_time: PositiveF64(
                    0.0 < 25.464272050145592,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006773879303589858,
                ),
                max_time: PositiveF64(
                    0.0 < 24.492813186391317,
                ),
                length: 281639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006846300542595607,
                ),
                max_time: PositiveF64(
                    0.0 < 32.765302884098176,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007711877283156365,
                ),
                max_time: PositiveF64(
                    0.0 < 27.89599828823661,
                ),
                length: 293394,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000086088364326109,
                ),
                max_time: PositiveF64(
                    0.0 < 24.097006043083667,
                ),
                length: 290024,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008640476087673488,
                ),
                max_time: PositiveF64(
                    0.0 < 29.275921482731036,
                ),
                length: 297274,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010172982947698195,
                ),
                max_time: PositiveF64(
                    0.0 < 22.081001277325853,
                ),
                length: 197981,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010769561102907943,
                ),
                max_time: PositiveF64(
                    0.0 < 27.732326927470694,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012620286888587184,
                ),
                max_time: PositiveF64(
                    0.0 < 26.552288885381206,
                ),
                length: 320818,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012731591258752228,
                ),
                max_time: PositiveF64(
                    0.0 < 26.17335668914775,
                ),
                length: 299770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014533346394118851,
                ),
                max_time: PositiveF64(
                    0.0 < 24.462533023289584,
                ),
                length: 224964,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000017174512436657352,
                ),
                max_time: PositiveF64(
                    0.0 < 33.605213459794804,
                ),
                length: 295925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001828565713596353,
                ),
                max_time: PositiveF64(
                    0.0 < 28.813203610070413,
                ),
                length: 363129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00002154762653278075,
                ),
                max_time: PositiveF64(
                    0.0 < 22.75220630273918,
                ),
                length: 292059,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000027659516666778128,
                ),
                max_time: PositiveF64(
                    0.0 < 24.139318444752305,
                ),
                length: 262173,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000031109758129310716,
                ),
                max_time: PositiveF64(
                    0.0 < 32.272525604868875,
                ),
                length: 297857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000032084115275388125,
                ),
                max_time: PositiveF64(
                    0.0 < 27.788669295953557,
                ),
                length: 102984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.14µs
 - execution: 29.963469502s
 - cleanup: 72.763µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        36 (peak)  25.52 (ave)

============================================
