# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 5136739282057013360,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519953[13].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-2-24.cx3.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:01:55 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 5136739282057013360,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519953[13].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-2-24.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 5136739282057013360,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519953[13].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffd8d743e38; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffd8d743e58; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519953[13].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 14.044550866s
 - execution: 5.630720856s
 - cleanup: 53.030276ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 39.48046854947905 after 105304286 steps.

# mpiexec: finished at Thu 13 May 18:02:24 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000006300099331113529,
                ),
                max_time: PositiveF64(
                    0.0 < 26.992754184816793,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000005218887544344852,
                ),
                max_time: PositiveF64(
                    0.0 < 27.67859724280615,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000016251567314107263,
                ),
                max_time: PositiveF64(
                    0.0 < 28.31922950733192,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000003817524657501181,
                ),
                max_time: PositiveF64(
                    0.0 < 28.13990600734929,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000057186891055938105,
                ),
                max_time: PositiveF64(
                    0.0 < 27.945789579699017,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006999247903483052,
                ),
                max_time: PositiveF64(
                    0.0 < 28.51530227853051,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007872373586348402,
                ),
                max_time: PositiveF64(
                    0.0 < 28.37674643439476,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010282475648715206,
                ),
                max_time: PositiveF64(
                    0.0 < 28.39164683931953,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010318254167751562,
                ),
                max_time: PositiveF64(
                    0.0 < 26.007251500717736,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000016864920016068652,
                ),
                max_time: PositiveF64(
                    0.0 < 27.50198912117501,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000017094471838063896,
                ),
                max_time: PositiveF64(
                    0.0 < 33.43178868012038,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000019786201177485196,
                ),
                max_time: PositiveF64(
                    0.0 < 28.646475599339958,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000025778731455039505,
                ),
                max_time: PositiveF64(
                    0.0 < 30.246582870019402,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002691484982109138,
                ),
                max_time: PositiveF64(
                    0.0 < 29.383075856003554,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002853142297420952,
                ),
                max_time: PositiveF64(
                    0.0 < 25.501855319831208,
                ),
                length: 295354,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000030804165801479044,
                ),
                max_time: PositiveF64(
                    0.0 < 33.6640894526139,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003388395719561288,
                ),
                max_time: PositiveF64(
                    0.0 < 24.83853835727964,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003552475047463588,
                ),
                max_time: PositiveF64(
                    0.0 < 30.06021100575584,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003693211209077063,
                ),
                max_time: PositiveF64(
                    0.0 < 30.03053647152207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000038053160733575453,
                ),
                max_time: PositiveF64(
                    0.0 < 25.933061735556436,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003978622864497794,
                ),
                max_time: PositiveF64(
                    0.0 < 29.297244519147043,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000041080347373823045,
                ),
                max_time: PositiveF64(
                    0.0 < 30.402761989325843,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004138874848402807,
                ),
                max_time: PositiveF64(
                    0.0 < 27.623397959445604,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004150178248285563,
                ),
                max_time: PositiveF64(
                    0.0 < 28.025504788894434,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004597518021842717,
                ),
                max_time: PositiveF64(
                    0.0 < 26.754092303768235,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000046211725807099313,
                ),
                max_time: PositiveF64(
                    0.0 < 26.94016409932648,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000047390709245753726,
                ),
                max_time: PositiveF64(
                    0.0 < 27.506343225268004,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004941857781326497,
                ),
                max_time: PositiveF64(
                    0.0 < 28.180863347807865,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005117703338886059,
                ),
                max_time: PositiveF64(
                    0.0 < 28.531646245403568,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005687162174528027,
                ),
                max_time: PositiveF64(
                    0.0 < 27.16256291406765,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005939391839460129,
                ),
                max_time: PositiveF64(
                    0.0 < 25.973529999252804,
                ),
                length: 280317,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000604291157113579,
                ),
                max_time: PositiveF64(
                    0.0 < 25.821302457775268,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006043152342427582,
                ),
                max_time: PositiveF64(
                    0.0 < 26.6465386125763,
                ),
                length: 293394,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006266125529563737,
                ),
                max_time: PositiveF64(
                    0.0 < 26.887150426097296,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006461590609796453,
                ),
                max_time: PositiveF64(
                    0.0 < 29.59193176492657,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006777869918095369,
                ),
                max_time: PositiveF64(
                    0.0 < 27.445575942556406,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000068261131525027,
                ),
                max_time: PositiveF64(
                    0.0 < 25.174149970559853,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000709417856681327,
                ),
                max_time: PositiveF64(
                    0.0 < 26.606128675739967,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007552108560737736,
                ),
                max_time: PositiveF64(
                    0.0 < 29.669896060358983,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007758980805072646,
                ),
                max_time: PositiveF64(
                    0.0 < 26.698943078326707,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007929302170417429,
                ),
                max_time: PositiveF64(
                    0.0 < 31.03518481488991,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008351196290057317,
                ),
                max_time: PositiveF64(
                    0.0 < 29.566504703289297,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008767223980132854,
                ),
                max_time: PositiveF64(
                    0.0 < 25.922330409850534,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008979581267443137,
                ),
                max_time: PositiveF64(
                    0.0 < 28.15732823298875,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000968043434024235,
                ),
                max_time: PositiveF64(
                    0.0 < 28.738185584845446,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009990992477781901,
                ),
                max_time: PositiveF64(
                    0.0 < 26.594488552572248,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010127134314474873,
                ),
                max_time: PositiveF64(
                    0.0 < 27.572545766233198,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010310716089256822,
                ),
                max_time: PositiveF64(
                    0.0 < 30.399825862204803,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010646406309322565,
                ),
                max_time: PositiveF64(
                    0.0 < 34.85784533196967,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001125858973549665,
                ),
                max_time: PositiveF64(
                    0.0 < 29.901628420647285,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012033507115760678,
                ),
                max_time: PositiveF64(
                    0.0 < 29.323991858095525,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012352893941081078,
                ),
                max_time: PositiveF64(
                    0.0 < 29.042282241806433,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012625309203651014,
                ),
                max_time: PositiveF64(
                    0.0 < 29.114798810003066,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001275004907763666,
                ),
                max_time: PositiveF64(
                    0.0 < 30.757138322173432,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001306446793247762,
                ),
                max_time: PositiveF64(
                    0.0 < 26.60995081957384,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001328460933480713,
                ),
                max_time: PositiveF64(
                    0.0 < 22.698545765232986,
                ),
                length: 220334,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013373950097372855,
                ),
                max_time: PositiveF64(
                    0.0 < 27.65167261706854,
                ),
                length: 433662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013548459268375446,
                ),
                max_time: PositiveF64(
                    0.0 < 24.82054554206063,
                ),
                length: 273284,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013812673679836074,
                ),
                max_time: PositiveF64(
                    0.0 < 25.48293541191823,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001481823983517927,
                ),
                max_time: PositiveF64(
                    0.0 < 33.503558754520895,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015462646774100364,
                ),
                max_time: PositiveF64(
                    0.0 < 26.10756639233766,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001668483940731047,
                ),
                max_time: PositiveF64(
                    0.0 < 33.24512987763325,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017634579993486277,
                ),
                max_time: PositiveF64(
                    0.0 < 25.534115036431693,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017649922767759563,
                ),
                max_time: PositiveF64(
                    0.0 < 30.59183143553379,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017781688343987412,
                ),
                max_time: PositiveF64(
                    0.0 < 29.878895805337425,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018339952734258702,
                ),
                max_time: PositiveF64(
                    0.0 < 26.641565229316015,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018479176999708358,
                ),
                max_time: PositiveF64(
                    0.0 < 28.287898012634017,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018518798347577636,
                ),
                max_time: PositiveF64(
                    0.0 < 32.649764776538305,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018631829123982868,
                ),
                max_time: PositiveF64(
                    0.0 < 30.118482685089933,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018673776336353143,
                ),
                max_time: PositiveF64(
                    0.0 < 27.53561332208143,
                ),
                length: 262173,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001870449117813422,
                ),
                max_time: PositiveF64(
                    0.0 < 27.02699175574068,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018851190375368532,
                ),
                max_time: PositiveF64(
                    0.0 < 30.377686571797135,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018940419965751687,
                ),
                max_time: PositiveF64(
                    0.0 < 38.14349914521371,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001917662103001483,
                ),
                max_time: PositiveF64(
                    0.0 < 30.047591399994516,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002026513149233633,
                ),
                max_time: PositiveF64(
                    0.0 < 39.48046854947905,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002130038830594483,
                ),
                max_time: PositiveF64(
                    0.0 < 34.543527560424764,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021863282967382602,
                ),
                max_time: PositiveF64(
                    0.0 < 25.316344014463628,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002214053879401323,
                ),
                max_time: PositiveF64(
                    0.0 < 27.342665353453004,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002235943812600727,
                ),
                max_time: PositiveF64(
                    0.0 < 25.65177598475482,
                ),
                length: 292119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023862386677730996,
                ),
                max_time: PositiveF64(
                    0.0 < 28.820606802196718,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002457082690643375,
                ),
                max_time: PositiveF64(
                    0.0 < 31.93383860784584,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024934582729119192,
                ),
                max_time: PositiveF64(
                    0.0 < 28.89724554305031,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002520021724905508,
                ),
                max_time: PositiveF64(
                    0.0 < 32.448247449250545,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025365765646268024,
                ),
                max_time: PositiveF64(
                    0.0 < 24.887899900728026,
                ),
                length: 197981,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002617495554191329,
                ),
                max_time: PositiveF64(
                    0.0 < 30.965804486293244,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002741698384434166,
                ),
                max_time: PositiveF64(
                    0.0 < 28.524706097329236,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028308445074176625,
                ),
                max_time: PositiveF64(
                    0.0 < 37.8154986894615,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000291761599519047,
                ),
                max_time: PositiveF64(
                    0.0 < 27.555247908559743,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003071110956376355,
                ),
                max_time: PositiveF64(
                    0.0 < 27.143160248923746,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003077815347585222,
                ),
                max_time: PositiveF64(
                    0.0 < 33.566926133444206,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031809614803313124,
                ),
                max_time: PositiveF64(
                    0.0 < 27.85057831495311,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032633877394827593,
                ),
                max_time: PositiveF64(
                    0.0 < 28.80711794268871,
                ),
                length: 295925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032690824858239154,
                ),
                max_time: PositiveF64(
                    0.0 < 27.701377023869345,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035330316139337015,
                ),
                max_time: PositiveF64(
                    0.0 < 25.326026958418623,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035411362139803337,
                ),
                max_time: PositiveF64(
                    0.0 < 27.234214414977238,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036100468209232517,
                ),
                max_time: PositiveF64(
                    0.0 < 28.347040959521376,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003810660368086527,
                ),
                max_time: PositiveF64(
                    0.0 < 28.036017560099864,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000038337892419026964,
                ),
                max_time: PositiveF64(
                    0.0 < 30.16033286973218,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003947674189208605,
                ),
                max_time: PositiveF64(
                    0.0 < 25.489755967019615,
                ),
                length: 472100,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000041181933932432635,
                ),
                max_time: PositiveF64(
                    0.0 < 25.88974594788033,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000416439700584581,
                ),
                max_time: PositiveF64(
                    0.0 < 28.146892925931333,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000417848828232481,
                ),
                max_time: PositiveF64(
                    0.0 < 26.025078113803666,
                ),
                length: 297857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000423478195565874,
                ),
                max_time: PositiveF64(
                    0.0 < 23.42732586282965,
                ),
                length: 299770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000043270632291148026,
                ),
                max_time: PositiveF64(
                    0.0 < 30.515911347447215,
                ),
                length: 287076,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004348262112041645,
                ),
                max_time: PositiveF64(
                    0.0 < 25.075537846950624,
                ),
                length: 616326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004402291199079311,
                ),
                max_time: PositiveF64(
                    0.0 < 29.102594996349737,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004706393109399354,
                ),
                max_time: PositiveF64(
                    0.0 < 27.71606163502394,
                ),
                length: 363129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004784138285529593,
                ),
                max_time: PositiveF64(
                    0.0 < 26.08678246476627,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004826955607994954,
                ),
                max_time: PositiveF64(
                    0.0 < 30.500318882000606,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000501414865627936,
                ),
                max_time: PositiveF64(
                    0.0 < 24.173802928584326,
                ),
                length: 311358,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005120636465960615,
                ),
                max_time: PositiveF64(
                    0.0 < 26.064754326933862,
                ),
                length: 300125,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005240905185111,
                ),
                max_time: PositiveF64(
                    0.0 < 26.088874962932557,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005359768524004771,
                ),
                max_time: PositiveF64(
                    0.0 < 23.44198084130528,
                ),
                length: 369800,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005563395419072581,
                ),
                max_time: PositiveF64(
                    0.0 < 26.563675150980124,
                ),
                length: 281180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006390276624801405,
                ),
                max_time: PositiveF64(
                    0.0 < 24.695518360578426,
                ),
                length: 292252,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006538767346186969,
                ),
                max_time: PositiveF64(
                    0.0 < 28.812291441492594,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007145908010597335,
                ),
                max_time: PositiveF64(
                    0.0 < 26.795840426038005,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007871219349087077,
                ),
                max_time: PositiveF64(
                    0.0 < 29.66277433247381,
                ),
                length: 286977,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009167859155445601,
                ),
                max_time: PositiveF64(
                    0.0 < 20.778877032392483,
                ),
                length: 102984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012197114529211017,
                ),
                max_time: PositiveF64(
                    0.0 < 23.18639418694891,
                ),
                length: 297274,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012866269136213582,
                ),
                max_time: PositiveF64(
                    0.0 < 26.741247172788363,
                ),
                length: 290024,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014395096785413397,
                ),
                max_time: PositiveF64(
                    0.0 < 23.32766083911595,
                ),
                length: 217270,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000015323935869393512,
                ),
                max_time: PositiveF64(
                    0.0 < 29.616107218315978,
                ),
                length: 292059,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000016451639181513933,
                ),
                max_time: PositiveF64(
                    0.0 < 27.96846329731079,
                ),
                length: 281639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000021204825090270774,
                ),
                max_time: PositiveF64(
                    0.0 < 26.095295105109418,
                ),
                length: 224964,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000021542993440260005,
                ),
                max_time: PositiveF64(
                    0.0 < 28.57946025656302,
                ),
                length: 320818,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00003208914242464056,
                ),
                max_time: PositiveF64(
                    0.0 < 27.34123206066162,
                ),
                length: 210432,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000057793847818288224,
                ),
                max_time: PositiveF64(
                    0.0 < 23.427771437358658,
                ),
                length: 44329,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.09µs
 - execution: 52.601070495s
 - cleanup: 106.163µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        35 (peak)  26.28 (ave)

============================================
