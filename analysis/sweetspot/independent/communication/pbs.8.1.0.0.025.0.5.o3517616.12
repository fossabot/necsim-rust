# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 7742071172614676656,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517616[12].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 8 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-134-5-19.cx1.hpc.ic.ac.uk:8
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 10:06:47 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 7742071172614676656,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517616[12].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-134-5-19.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 7742071172614676656,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.5 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517616[12].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffdaeb80658; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffdaeb80678; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517616[12].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 8 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.074168758s
 - execution: 11.396965978s
 - cleanup: 10.061598ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 40.14928364864012 after 105304286 steps.

# mpiexec: finished at Thu 13 May 10:07:11 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000002918061348111678,
                ),
                max_time: PositiveF64(
                    0.0 < 27.3518309690612,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000014649305934977264,
                ),
                max_time: PositiveF64(
                    0.0 < 31.456676527601758,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000057361660976695816,
                ),
                max_time: PositiveF64(
                    0.0 < 27.371841394787214,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006657167067602998,
                ),
                max_time: PositiveF64(
                    0.0 < 28.09739393179735,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008367018550226035,
                ),
                max_time: PositiveF64(
                    0.0 < 27.907801338664527,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008504620202520741,
                ),
                max_time: PositiveF64(
                    0.0 < 25.798595001392147,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008878446894344805,
                ),
                max_time: PositiveF64(
                    0.0 < 29.271170689915706,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000016297547367205567,
                ),
                max_time: PositiveF64(
                    0.0 < 29.003910480433703,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000017879701136314097,
                ),
                max_time: PositiveF64(
                    0.0 < 26.487720564620126,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000020980845089058064,
                ),
                max_time: PositiveF64(
                    0.0 < 27.11992212146486,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000022636544638743317,
                ),
                max_time: PositiveF64(
                    0.0 < 29.51390058808392,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002444138927359951,
                ),
                max_time: PositiveF64(
                    0.0 < 25.744753796242733,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000025388728369657443,
                ),
                max_time: PositiveF64(
                    0.0 < 38.50089087675319,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000030717289017934135,
                ),
                max_time: PositiveF64(
                    0.0 < 30.606483415100815,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003259656250476084,
                ),
                max_time: PositiveF64(
                    0.0 < 29.528757237791396,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000332733811336805,
                ),
                max_time: PositiveF64(
                    0.0 < 29.924872312653182,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000036790696461563854,
                ),
                max_time: PositiveF64(
                    0.0 < 33.154491008626955,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003750904886690165,
                ),
                max_time: PositiveF64(
                    0.0 < 29.23703117525338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000432585033072197,
                ),
                max_time: PositiveF64(
                    0.0 < 28.41223922068275,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004742819506575735,
                ),
                max_time: PositiveF64(
                    0.0 < 26.643963121627273,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005207203512824776,
                ),
                max_time: PositiveF64(
                    0.0 < 36.076246014974174,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000526185200966367,
                ),
                max_time: PositiveF64(
                    0.0 < 33.860656907475956,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005550055787173491,
                ),
                max_time: PositiveF64(
                    0.0 < 27.566415041260708,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000587450301181569,
                ),
                max_time: PositiveF64(
                    0.0 < 29.09092678412883,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006427608836845344,
                ),
                max_time: PositiveF64(
                    0.0 < 28.52315206152344,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006988276901598311,
                ),
                max_time: PositiveF64(
                    0.0 < 33.076433309738185,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007008501806682332,
                ),
                max_time: PositiveF64(
                    0.0 < 28.046776370701156,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007219504535860288,
                ),
                max_time: PositiveF64(
                    0.0 < 29.438229316748497,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008117863486978294,
                ),
                max_time: PositiveF64(
                    0.0 < 27.654582408456207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008283292102229112,
                ),
                max_time: PositiveF64(
                    0.0 < 30.86164936939619,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009537336020937204,
                ),
                max_time: PositiveF64(
                    0.0 < 28.762257129112974,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009801165140599366,
                ),
                max_time: PositiveF64(
                    0.0 < 25.19156432621959,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001017441052797441,
                ),
                max_time: PositiveF64(
                    0.0 < 27.956984230645354,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010231299055196708,
                ),
                max_time: PositiveF64(
                    0.0 < 28.625563801649708,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010310705034211054,
                ),
                max_time: PositiveF64(
                    0.0 < 27.958858395531703,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011168076935463844,
                ),
                max_time: PositiveF64(
                    0.0 < 27.28780329902996,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012075843849879142,
                ),
                max_time: PositiveF64(
                    0.0 < 32.643580048163955,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012494335047130711,
                ),
                max_time: PositiveF64(
                    0.0 < 29.491554048425673,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012597968965244455,
                ),
                max_time: PositiveF64(
                    0.0 < 26.478580078897316,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012620766642879033,
                ),
                max_time: PositiveF64(
                    0.0 < 27.313830696842864,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012637202997933805,
                ),
                max_time: PositiveF64(
                    0.0 < 30.768277617459233,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013039346943855001,
                ),
                max_time: PositiveF64(
                    0.0 < 29.51368107967252,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013309613428047484,
                ),
                max_time: PositiveF64(
                    0.0 < 25.518884880901606,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001338295928243749,
                ),
                max_time: PositiveF64(
                    0.0 < 28.083140263611334,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001365400879582701,
                ),
                max_time: PositiveF64(
                    0.0 < 36.38989223544888,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013667034418074486,
                ),
                max_time: PositiveF64(
                    0.0 < 29.959193595816636,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015097385291928944,
                ),
                max_time: PositiveF64(
                    0.0 < 24.78468510687921,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015184981527749386,
                ),
                max_time: PositiveF64(
                    0.0 < 30.09644995373517,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015658115459782351,
                ),
                max_time: PositiveF64(
                    0.0 < 32.70261337083042,
                ),
                length: 971326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015963620655923272,
                ),
                max_time: PositiveF64(
                    0.0 < 31.10515072241336,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016471101171866565,
                ),
                max_time: PositiveF64(
                    0.0 < 30.487078078010864,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016473029196273359,
                ),
                max_time: PositiveF64(
                    0.0 < 28.019921608830735,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016474526545739998,
                ),
                max_time: PositiveF64(
                    0.0 < 27.279370863326108,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016647870287878064,
                ),
                max_time: PositiveF64(
                    0.0 < 30.943709054146638,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017613736946753278,
                ),
                max_time: PositiveF64(
                    0.0 < 28.557277832500816,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018165152521065764,
                ),
                max_time: PositiveF64(
                    0.0 < 26.219090107361357,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018831966977495007,
                ),
                max_time: PositiveF64(
                    0.0 < 27.61183045252331,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019302452008984616,
                ),
                max_time: PositiveF64(
                    0.0 < 29.359979811008607,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020004272371920706,
                ),
                max_time: PositiveF64(
                    0.0 < 28.634868326181536,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000201907683183844,
                ),
                max_time: PositiveF64(
                    0.0 < 25.88453920274627,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002047249068048984,
                ),
                max_time: PositiveF64(
                    0.0 < 35.861912710850014,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002130670729016959,
                ),
                max_time: PositiveF64(
                    0.0 < 30.56618525013393,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022036059341146164,
                ),
                max_time: PositiveF64(
                    0.0 < 31.270394789625794,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002290204715871269,
                ),
                max_time: PositiveF64(
                    0.0 < 28.27963268067578,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023078875083237804,
                ),
                max_time: PositiveF64(
                    0.0 < 25.01411954274736,
                ),
                length: 172355,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002318684962365758,
                ),
                max_time: PositiveF64(
                    0.0 < 27.15991794212257,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023521810504911755,
                ),
                max_time: PositiveF64(
                    0.0 < 27.487741762851435,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002368206653002858,
                ),
                max_time: PositiveF64(
                    0.0 < 29.506920745558283,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000242917751691607,
                ),
                max_time: PositiveF64(
                    0.0 < 40.14928364864012,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024314564270322414,
                ),
                max_time: PositiveF64(
                    0.0 < 26.946115295222015,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002484334540586719,
                ),
                max_time: PositiveF64(
                    0.0 < 29.265685882976197,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025576273027239083,
                ),
                max_time: PositiveF64(
                    0.0 < 34.37404412842547,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025891125085553135,
                ),
                max_time: PositiveF64(
                    0.0 < 25.55035822992494,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002589924208706851,
                ),
                max_time: PositiveF64(
                    0.0 < 32.08933854813941,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002600343251002446,
                ),
                max_time: PositiveF64(
                    0.0 < 31.088459364460064,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026102846945041946,
                ),
                max_time: PositiveF64(
                    0.0 < 27.649032527671334,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026366300220903582,
                ),
                max_time: PositiveF64(
                    0.0 < 29.911890242545955,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002637998371690653,
                ),
                max_time: PositiveF64(
                    0.0 < 31.540307429906775,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002698582255156179,
                ),
                max_time: PositiveF64(
                    0.0 < 27.5548729211972,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027658329462831865,
                ),
                max_time: PositiveF64(
                    0.0 < 26.494144805120982,
                ),
                length: 495488,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029949663582495845,
                ),
                max_time: PositiveF64(
                    0.0 < 26.095244372532612,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003055355872749743,
                ),
                max_time: PositiveF64(
                    0.0 < 29.35981140082264,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003129446143057546,
                ),
                max_time: PositiveF64(
                    0.0 < 29.590802822348866,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003142495863805994,
                ),
                max_time: PositiveF64(
                    0.0 < 31.367849882966826,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032287512541362418,
                ),
                max_time: PositiveF64(
                    0.0 < 29.244077471741665,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003305165643674446,
                ),
                max_time: PositiveF64(
                    0.0 < 26.071163535860062,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003370348203024509,
                ),
                max_time: PositiveF64(
                    0.0 < 29.375285140383873,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003537712807144544,
                ),
                max_time: PositiveF64(
                    0.0 < 27.959352600883744,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035478524423870894,
                ),
                max_time: PositiveF64(
                    0.0 < 26.46225900495321,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003763952792223968,
                ),
                max_time: PositiveF64(
                    0.0 < 28.86033722350573,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003817273935280419,
                ),
                max_time: PositiveF64(
                    0.0 < 29.267339212304595,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000041949136667107645,
                ),
                max_time: PositiveF64(
                    0.0 < 32.827214040761696,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004235926392981426,
                ),
                max_time: PositiveF64(
                    0.0 < 29.45963126153527,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004579284650363391,
                ),
                max_time: PositiveF64(
                    0.0 < 29.130762861341207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004623001546300021,
                ),
                max_time: PositiveF64(
                    0.0 < 28.25569476769301,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004633906605100435,
                ),
                max_time: PositiveF64(
                    0.0 < 31.093283729844394,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005023546152671532,
                ),
                max_time: PositiveF64(
                    0.0 < 26.743990058970766,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005328199762233421,
                ),
                max_time: PositiveF64(
                    0.0 < 30.98010953119391,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000533317778383946,
                ),
                max_time: PositiveF64(
                    0.0 < 28.478394935343935,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005566146873692279,
                ),
                max_time: PositiveF64(
                    0.0 < 28.28257271738117,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000058404213101881375,
                ),
                max_time: PositiveF64(
                    0.0 < 34.59333225279728,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005934832486287345,
                ),
                max_time: PositiveF64(
                    0.0 < 28.420951146902137,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006841716457539615,
                ),
                max_time: PositiveF64(
                    0.0 < 25.564031361041145,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007446342432937403,
                ),
                max_time: PositiveF64(
                    0.0 < 29.484519797053828,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010988332356798303,
                ),
                max_time: PositiveF64(
                    0.0 < 37.7210884888866,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011024595502895362,
                ),
                max_time: PositiveF64(
                    0.0 < 24.403503298343573,
                ),
                length: 170533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011402354559986172,
                ),
                max_time: PositiveF64(
                    0.0 < 25.765726389636793,
                ),
                length: 125908,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000013036847403280483,
                ),
                max_time: PositiveF64(
                    0.0 < 32.191195843634276,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014490011437384709,
                ),
                max_time: PositiveF64(
                    0.0 < 23.37438063995794,
                ),
                length: 177248,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000018758031681553877,
                ),
                max_time: PositiveF64(
                    0.0 < 21.071160781497667,
                ),
                length: 135444,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00006298555147332685,
                ),
                max_time: PositiveF64(
                    0.0 < 29.17217661331521,
                ),
                length: 55984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 734ns
 - execution: 31.585469305s
 - cleanup: 44.501µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             8
 Used       :        12 (peak)   7.90 (ave)

============================================
