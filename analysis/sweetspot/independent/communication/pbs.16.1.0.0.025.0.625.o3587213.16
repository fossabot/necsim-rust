# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 9353509238702721138,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.625)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3587213[16].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 16 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-137-19-3.cx1.hpc.ic.ac.uk:16
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 21 May 12:05:56 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 9353509238702721138,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.625)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3587213[16].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-137-19-3.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 9353509238702721138,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.625 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3587213[16].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff80d1a238; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff80d1a258; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3587213[16].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 16 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 16.191298685s
 - execution: 11.348658632s
 - cleanup: 79.642511ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 38.75238093257443 after 105304286 steps.

# mpiexec: finished at Fri 21 May 12:06:29 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000031593339056001923,
                ),
                max_time: PositiveF64(
                    0.0 < 24.4160089689978,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000073141639966856076,
                ),
                max_time: PositiveF64(
                    0.0 < 30.361228192618338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000012315963249243111,
                ),
                max_time: PositiveF64(
                    0.0 < 29.802159379874283,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000003181293700693644,
                ),
                max_time: PositiveF64(
                    0.0 < 27.138561466529303,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000005966737992579851,
                ),
                max_time: PositiveF64(
                    0.0 < 29.05354692495027,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006937389884775769,
                ),
                max_time: PositiveF64(
                    0.0 < 30.597554992543834,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007010662966822068,
                ),
                max_time: PositiveF64(
                    0.0 < 27.33533536449518,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007345589719820467,
                ),
                max_time: PositiveF64(
                    0.0 < 25.712866167676406,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011749643508141006,
                ),
                max_time: PositiveF64(
                    0.0 < 34.24275504842781,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013263713544153788,
                ),
                max_time: PositiveF64(
                    0.0 < 25.01006970313897,
                ),
                length: 581305,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000014660786029629946,
                ),
                max_time: PositiveF64(
                    0.0 < 30.503349569451267,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000014751912608135243,
                ),
                max_time: PositiveF64(
                    0.0 < 27.91389034864226,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000015430530742044368,
                ),
                max_time: PositiveF64(
                    0.0 < 28.59899155242087,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002642052204793188,
                ),
                max_time: PositiveF64(
                    0.0 < 29.17083279267367,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000028935863871648593,
                ),
                max_time: PositiveF64(
                    0.0 < 31.93977713882148,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000030050276933479836,
                ),
                max_time: PositiveF64(
                    0.0 < 28.85117774327453,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003006195534172029,
                ),
                max_time: PositiveF64(
                    0.0 < 26.82946283297302,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000033779186642268755,
                ),
                max_time: PositiveF64(
                    0.0 < 25.171226805967702,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000035605048936959705,
                ),
                max_time: PositiveF64(
                    0.0 < 27.047065787928815,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003631945549864568,
                ),
                max_time: PositiveF64(
                    0.0 < 28.854650186484555,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003654671093533679,
                ),
                max_time: PositiveF64(
                    0.0 < 29.264802617719127,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000038655142003962695,
                ),
                max_time: PositiveF64(
                    0.0 < 27.828516698487753,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004005349119040602,
                ),
                max_time: PositiveF64(
                    0.0 < 35.30768053607001,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000407705860738794,
                ),
                max_time: PositiveF64(
                    0.0 < 28.370035177177407,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000042061163607609586,
                ),
                max_time: PositiveF64(
                    0.0 < 27.88286688496468,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004210273182869706,
                ),
                max_time: PositiveF64(
                    0.0 < 29.912088131840342,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004349125043434654,
                ),
                max_time: PositiveF64(
                    0.0 < 27.26796565376042,
                ),
                length: 914183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004950654305946323,
                ),
                max_time: PositiveF64(
                    0.0 < 31.54565554145977,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005031465608040797,
                ),
                max_time: PositiveF64(
                    0.0 < 28.128881576359746,
                ),
                length: 578913,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005096740168797353,
                ),
                max_time: PositiveF64(
                    0.0 < 26.50802186405322,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005206818526337642,
                ),
                max_time: PositiveF64(
                    0.0 < 29.674470081683886,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005350782583679603,
                ),
                max_time: PositiveF64(
                    0.0 < 33.293304116719355,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005481943077256801,
                ),
                max_time: PositiveF64(
                    0.0 < 24.63229387076028,
                ),
                length: 560360,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005630425081726287,
                ),
                max_time: PositiveF64(
                    0.0 < 25.715422589054555,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005930260613129512,
                ),
                max_time: PositiveF64(
                    0.0 < 38.75238093257443,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006129312443703405,
                ),
                max_time: PositiveF64(
                    0.0 < 31.839615638207466,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006189339579742992,
                ),
                max_time: PositiveF64(
                    0.0 < 27.04604334461888,
                ),
                length: 631643,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006207305341954239,
                ),
                max_time: PositiveF64(
                    0.0 < 28.98947048638807,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006286842899050349,
                ),
                max_time: PositiveF64(
                    0.0 < 25.577795001946516,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006417777884126785,
                ),
                max_time: PositiveF64(
                    0.0 < 27.056694978599957,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006673611921415024,
                ),
                max_time: PositiveF64(
                    0.0 < 29.552857712469887,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006866556584439465,
                ),
                max_time: PositiveF64(
                    0.0 < 27.849421545334888,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007403062865507515,
                ),
                max_time: PositiveF64(
                    0.0 < 25.798168465361965,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008193696962588426,
                ),
                max_time: PositiveF64(
                    0.0 < 28.10257766769888,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000899306674684297,
                ),
                max_time: PositiveF64(
                    0.0 < 30.227474350209555,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009176277002143074,
                ),
                max_time: PositiveF64(
                    0.0 < 31.15506836637021,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009433413036830096,
                ),
                max_time: PositiveF64(
                    0.0 < 26.435610248162757,
                ),
                length: 584371,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009445435131261171,
                ),
                max_time: PositiveF64(
                    0.0 < 25.65074228819438,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009584876545232213,
                ),
                max_time: PositiveF64(
                    0.0 < 26.977386714032843,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010171629835631357,
                ),
                max_time: PositiveF64(
                    0.0 < 26.174578400162307,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010543941567076054,
                ),
                max_time: PositiveF64(
                    0.0 < 25.001575596451943,
                ),
                length: 339683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010788222157276373,
                ),
                max_time: PositiveF64(
                    0.0 < 27.436639121728412,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001080168082479016,
                ),
                max_time: PositiveF64(
                    0.0 < 28.138893200026082,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011016928977425344,
                ),
                max_time: PositiveF64(
                    0.0 < 29.483838478666897,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001160190751525736,
                ),
                max_time: PositiveF64(
                    0.0 < 31.725158445103023,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011823389037268761,
                ),
                max_time: PositiveF64(
                    0.0 < 29.903283447752873,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011912744135589293,
                ),
                max_time: PositiveF64(
                    0.0 < 25.0915726468078,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012281296105087769,
                ),
                max_time: PositiveF64(
                    0.0 < 27.6688031583317,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012606063787279354,
                ),
                max_time: PositiveF64(
                    0.0 < 26.093915571855195,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001305631514014749,
                ),
                max_time: PositiveF64(
                    0.0 < 28.045079144041225,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013217251598751645,
                ),
                max_time: PositiveF64(
                    0.0 < 28.306597330918457,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013315664204593958,
                ),
                max_time: PositiveF64(
                    0.0 < 31.249723202305336,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014088047736726672,
                ),
                max_time: PositiveF64(
                    0.0 < 28.08633315566667,
                ),
                length: 587984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014872277370736597,
                ),
                max_time: PositiveF64(
                    0.0 < 28.25099108275814,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015284035817519914,
                ),
                max_time: PositiveF64(
                    0.0 < 30.408446400962855,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015297937072666912,
                ),
                max_time: PositiveF64(
                    0.0 < 29.344448565679528,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015407217976437515,
                ),
                max_time: PositiveF64(
                    0.0 < 30.45512811083336,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000156191915567927,
                ),
                max_time: PositiveF64(
                    0.0 < 26.155933066606902,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016627834975579958,
                ),
                max_time: PositiveF64(
                    0.0 < 30.57246585569683,
                ),
                length: 598335,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017760529072430309,
                ),
                max_time: PositiveF64(
                    0.0 < 29.481618407679093,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017858348383414935,
                ),
                max_time: PositiveF64(
                    0.0 < 24.90353287050436,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018487445965775784,
                ),
                max_time: PositiveF64(
                    0.0 < 28.814795052585755,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018758122680151423,
                ),
                max_time: PositiveF64(
                    0.0 < 26.438393874140054,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019043988155886815,
                ),
                max_time: PositiveF64(
                    0.0 < 24.620144203198894,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001913641328732396,
                ),
                max_time: PositiveF64(
                    0.0 < 29.8913002705161,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019704513898322062,
                ),
                max_time: PositiveF64(
                    0.0 < 33.301048810624785,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019736504511258524,
                ),
                max_time: PositiveF64(
                    0.0 < 27.039646484528856,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020056874946994263,
                ),
                max_time: PositiveF64(
                    0.0 < 30.952110971596348,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002031574331817776,
                ),
                max_time: PositiveF64(
                    0.0 < 30.39209732910447,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002032013406982891,
                ),
                max_time: PositiveF64(
                    0.0 < 27.668364828160197,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002187295046751636,
                ),
                max_time: PositiveF64(
                    0.0 < 28.5386304781367,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022545036604260105,
                ),
                max_time: PositiveF64(
                    0.0 < 28.35461337618085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024329085848706633,
                ),
                max_time: PositiveF64(
                    0.0 < 31.203442676576806,
                ),
                length: 573711,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024717961472076055,
                ),
                max_time: PositiveF64(
                    0.0 < 28.415392493028158,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002474214376990691,
                ),
                max_time: PositiveF64(
                    0.0 < 26.286136074528756,
                ),
                length: 552197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002488988249116364,
                ),
                max_time: PositiveF64(
                    0.0 < 29.569082356823895,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025830395891657254,
                ),
                max_time: PositiveF64(
                    0.0 < 29.11666782975816,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002636412478329575,
                ),
                max_time: PositiveF64(
                    0.0 < 25.577964830955594,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026797319788163243,
                ),
                max_time: PositiveF64(
                    0.0 < 31.438333297988276,
                ),
                length: 587070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002819787127683604,
                ),
                max_time: PositiveF64(
                    0.0 < 32.001175781400974,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028219823997033266,
                ),
                max_time: PositiveF64(
                    0.0 < 29.90786699796441,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028898343956695882,
                ),
                max_time: PositiveF64(
                    0.0 < 25.43159896023813,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002925490569516409,
                ),
                max_time: PositiveF64(
                    0.0 < 30.066058555676133,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029287194253102555,
                ),
                max_time: PositiveF64(
                    0.0 < 32.720322016997905,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029455138622624943,
                ),
                max_time: PositiveF64(
                    0.0 < 29.370098086416707,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003042093771332688,
                ),
                max_time: PositiveF64(
                    0.0 < 30.446294020664894,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003367571348167342,
                ),
                max_time: PositiveF64(
                    0.0 < 28.881010816877005,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003544263187382768,
                ),
                max_time: PositiveF64(
                    0.0 < 30.617086240088085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000038046123804202914,
                ),
                max_time: PositiveF64(
                    0.0 < 29.558162202885477,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004370730894709407,
                ),
                max_time: PositiveF64(
                    0.0 < 25.240342876774978,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004505022369594158,
                ),
                max_time: PositiveF64(
                    0.0 < 26.050326214591813,
                ),
                length: 583463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000468230578365425,
                ),
                max_time: PositiveF64(
                    0.0 < 26.900984396378927,
                ),
                length: 575084,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000049696449649916374,
                ),
                max_time: PositiveF64(
                    0.0 < 25.95471837683978,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005211807829474946,
                ),
                max_time: PositiveF64(
                    0.0 < 27.226103213483412,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005293597819255869,
                ),
                max_time: PositiveF64(
                    0.0 < 26.980907064615998,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005351555116828166,
                ),
                max_time: PositiveF64(
                    0.0 < 27.08694478954479,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005458749311459954,
                ),
                max_time: PositiveF64(
                    0.0 < 28.055876106882728,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005901270123676028,
                ),
                max_time: PositiveF64(
                    0.0 < 26.89006677187059,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006325298546883129,
                ),
                max_time: PositiveF64(
                    0.0 < 27.095961442259625,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006486588866594367,
                ),
                max_time: PositiveF64(
                    0.0 < 29.1649810590873,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006862003927299298,
                ),
                max_time: PositiveF64(
                    0.0 < 30.320545745755936,
                ),
                length: 620588,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001234414754525126,
                ),
                max_time: PositiveF64(
                    0.0 < 23.51575102777002,
                ),
                length: 435396,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.293µs
 - execution: 36.88502424s
 - cleanup: 69.898µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        32            16
 Used       :        18 (peak)  13.53 (ave)

============================================
