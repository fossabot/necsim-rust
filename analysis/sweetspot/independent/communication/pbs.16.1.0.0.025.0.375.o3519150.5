# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 9541460214079333531,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.375)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519150[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 16 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-2-24.cx3.hpc.ic.ac.uk:16
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 15:06:28 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 9541460214079333531,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.375)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519150[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-2-24.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 9541460214079333531,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.375 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519150[5].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc393637e8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc39363808; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519150[5].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 16 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 17.491813902s
 - execution: 13.167789696s
 - cleanup: 170.405131ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 37.06901440742039 after 105304286 steps.

# mpiexec: finished at Thu 13 May 15:07:05 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000005084896032014896,
                ),
                max_time: PositiveF64(
                    0.0 < 26.383638133691104,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006266156621359542,
                ),
                max_time: PositiveF64(
                    0.0 < 28.267207850912346,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006960145126910788,
                ),
                max_time: PositiveF64(
                    0.0 < 27.6067239993063,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008516566063487829,
                ),
                max_time: PositiveF64(
                    0.0 < 28.882128408560433,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010338340711291139,
                ),
                max_time: PositiveF64(
                    0.0 < 26.09312463974849,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013326222403353682,
                ),
                max_time: PositiveF64(
                    0.0 < 29.746977274877274,
                ),
                length: 914183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000014544194210097672,
                ),
                max_time: PositiveF64(
                    0.0 < 36.235680965063274,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018260872786113325,
                ),
                max_time: PositiveF64(
                    0.0 < 25.993237182221847,
                ),
                length: 575084,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000022429317708683172,
                ),
                max_time: PositiveF64(
                    0.0 < 28.78371913092881,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002620028813349329,
                ),
                max_time: PositiveF64(
                    0.0 < 29.63277994185617,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003007076548877663,
                ),
                max_time: PositiveF64(
                    0.0 < 27.318231417193765,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003217730329407864,
                ),
                max_time: PositiveF64(
                    0.0 < 28.97139025308771,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000032405574196259224,
                ),
                max_time: PositiveF64(
                    0.0 < 27.979937078099848,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003651001431737022,
                ),
                max_time: PositiveF64(
                    0.0 < 25.122484508090682,
                ),
                length: 581305,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000039437183546597865,
                ),
                max_time: PositiveF64(
                    0.0 < 28.7368944815541,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000039831850179306016,
                ),
                max_time: PositiveF64(
                    0.0 < 25.962351611407314,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000043485126582920586,
                ),
                max_time: PositiveF64(
                    0.0 < 26.72336850661228,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004581263102210187,
                ),
                max_time: PositiveF64(
                    0.0 < 24.727894747983626,
                ),
                length: 435396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000047035577988019384,
                ),
                max_time: PositiveF64(
                    0.0 < 28.968910453705984,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004755194762950943,
                ),
                max_time: PositiveF64(
                    0.0 < 35.4432756199543,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004866426842053961,
                ),
                max_time: PositiveF64(
                    0.0 < 27.595375683853813,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000573398627745636,
                ),
                max_time: PositiveF64(
                    0.0 < 30.907254086575932,
                ),
                length: 583463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006124156592957064,
                ),
                max_time: PositiveF64(
                    0.0 < 28.33110296753885,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006442368186143632,
                ),
                max_time: PositiveF64(
                    0.0 < 32.71013715958548,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006465267646249551,
                ),
                max_time: PositiveF64(
                    0.0 < 28.475383686826138,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006896794055299971,
                ),
                max_time: PositiveF64(
                    0.0 < 25.1382501166705,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006959916284965395,
                ),
                max_time: PositiveF64(
                    0.0 < 27.361318543425043,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007438818194760444,
                ),
                max_time: PositiveF64(
                    0.0 < 27.55888017214961,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007680771135776254,
                ),
                max_time: PositiveF64(
                    0.0 < 27.861467981806072,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007896522707939724,
                ),
                max_time: PositiveF64(
                    0.0 < 26.499402064517245,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007928509690446894,
                ),
                max_time: PositiveF64(
                    0.0 < 27.850233101116576,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008265427520193214,
                ),
                max_time: PositiveF64(
                    0.0 < 32.05913114607855,
                ),
                length: 620588,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008290136777056034,
                ),
                max_time: PositiveF64(
                    0.0 < 35.36079367944065,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008570565970811295,
                ),
                max_time: PositiveF64(
                    0.0 < 27.76923731638906,
                ),
                length: 584371,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008702891179934724,
                ),
                max_time: PositiveF64(
                    0.0 < 28.517153277494252,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000872677134999833,
                ),
                max_time: PositiveF64(
                    0.0 < 26.289173115521926,
                ),
                length: 598335,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009715971349688601,
                ),
                max_time: PositiveF64(
                    0.0 < 33.962289933151474,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009987359408936136,
                ),
                max_time: PositiveF64(
                    0.0 < 32.44590527504998,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010086994051139442,
                ),
                max_time: PositiveF64(
                    0.0 < 28.704908655361514,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001018193419577429,
                ),
                max_time: PositiveF64(
                    0.0 < 28.683364131672157,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010730382024592977,
                ),
                max_time: PositiveF64(
                    0.0 < 31.4528033963779,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001077601263499428,
                ),
                max_time: PositiveF64(
                    0.0 < 27.027665626206595,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011186802248430716,
                ),
                max_time: PositiveF64(
                    0.0 < 25.56164488537381,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011373074940146388,
                ),
                max_time: PositiveF64(
                    0.0 < 33.73470178300002,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011460679191777068,
                ),
                max_time: PositiveF64(
                    0.0 < 29.95249507683583,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012771057975036193,
                ),
                max_time: PositiveF64(
                    0.0 < 32.62457279249646,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013110772953406347,
                ),
                max_time: PositiveF64(
                    0.0 < 27.658243720164236,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013188106467998395,
                ),
                max_time: PositiveF64(
                    0.0 < 27.972230070190328,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013348435012883186,
                ),
                max_time: PositiveF64(
                    0.0 < 31.37483258389034,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013383033614644546,
                ),
                max_time: PositiveF64(
                    0.0 < 31.96438427768352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013595124809251402,
                ),
                max_time: PositiveF64(
                    0.0 < 32.510962589766024,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014156492678107924,
                ),
                max_time: PositiveF64(
                    0.0 < 27.794849923702458,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014691229893726288,
                ),
                max_time: PositiveF64(
                    0.0 < 26.42525951614931,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015119992011203287,
                ),
                max_time: PositiveF64(
                    0.0 < 25.53427622448411,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015161001426511334,
                ),
                max_time: PositiveF64(
                    0.0 < 28.54166287693114,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015740119022056298,
                ),
                max_time: PositiveF64(
                    0.0 < 27.029672672795797,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016032069535820703,
                ),
                max_time: PositiveF64(
                    0.0 < 26.180501740043837,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001606493637007489,
                ),
                max_time: PositiveF64(
                    0.0 < 25.147432412643024,
                ),
                length: 552197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016207303774051773,
                ),
                max_time: PositiveF64(
                    0.0 < 29.76329956287465,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017027794371737848,
                ),
                max_time: PositiveF64(
                    0.0 < 26.63907745958106,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017142368774480943,
                ),
                max_time: PositiveF64(
                    0.0 < 31.683177050803927,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018791053527089652,
                ),
                max_time: PositiveF64(
                    0.0 < 25.76997203201416,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001986065596426556,
                ),
                max_time: PositiveF64(
                    0.0 < 28.20063596077247,
                ),
                length: 631643,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019899015279989385,
                ),
                max_time: PositiveF64(
                    0.0 < 27.92268480664913,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002070387255526107,
                ),
                max_time: PositiveF64(
                    0.0 < 27.961760696376807,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021314421475016054,
                ),
                max_time: PositiveF64(
                    0.0 < 27.50493125684246,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022925098172588143,
                ),
                max_time: PositiveF64(
                    0.0 < 29.934201224371666,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025405760747942985,
                ),
                max_time: PositiveF64(
                    0.0 < 28.988820449671074,
                ),
                length: 560360,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002617644613289727,
                ),
                max_time: PositiveF64(
                    0.0 < 31.413120849485896,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026466433239447085,
                ),
                max_time: PositiveF64(
                    0.0 < 28.18748606480588,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002696230625154339,
                ),
                max_time: PositiveF64(
                    0.0 < 28.57627947700049,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027430486140844756,
                ),
                max_time: PositiveF64(
                    0.0 < 29.401004049087312,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002756302483752915,
                ),
                max_time: PositiveF64(
                    0.0 < 30.22935736888051,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027614077241500112,
                ),
                max_time: PositiveF64(
                    0.0 < 33.54886536736656,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028602194077076426,
                ),
                max_time: PositiveF64(
                    0.0 < 24.810668835767945,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002900365062563637,
                ),
                max_time: PositiveF64(
                    0.0 < 29.492365357758125,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002999627964350715,
                ),
                max_time: PositiveF64(
                    0.0 < 31.951529478828732,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000331778232054436,
                ),
                max_time: PositiveF64(
                    0.0 < 26.574667608618793,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003343048519399705,
                ),
                max_time: PositiveF64(
                    0.0 < 32.46644031878802,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003354188180815232,
                ),
                max_time: PositiveF64(
                    0.0 < 29.325577477181668,
                ),
                length: 587984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033570565025065058,
                ),
                max_time: PositiveF64(
                    0.0 < 26.424003188460944,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035258274716509774,
                ),
                max_time: PositiveF64(
                    0.0 < 26.950065478338566,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003544208365402479,
                ),
                max_time: PositiveF64(
                    0.0 < 29.289262730425456,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035472542425640796,
                ),
                max_time: PositiveF64(
                    0.0 < 27.86835560938163,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036311445233971895,
                ),
                max_time: PositiveF64(
                    0.0 < 29.844064179495327,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000039094943327100395,
                ),
                max_time: PositiveF64(
                    0.0 < 27.688812550973758,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004185013930679826,
                ),
                max_time: PositiveF64(
                    0.0 < 29.031618551535026,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000042037397485206185,
                ),
                max_time: PositiveF64(
                    0.0 < 29.02282108207297,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004369696917083665,
                ),
                max_time: PositiveF64(
                    0.0 < 28.41806687176338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004465770701012062,
                ),
                max_time: PositiveF64(
                    0.0 < 37.06901440742039,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000045079216798304955,
                ),
                max_time: PositiveF64(
                    0.0 < 31.902189333832073,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004625752196008026,
                ),
                max_time: PositiveF64(
                    0.0 < 27.256357876711697,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000046292905439559995,
                ),
                max_time: PositiveF64(
                    0.0 < 29.482977925233037,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004817516156829793,
                ),
                max_time: PositiveF64(
                    0.0 < 29.768340027455494,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004883729406990334,
                ),
                max_time: PositiveF64(
                    0.0 < 23.844504241260186,
                ),
                length: 339683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004923455274030708,
                ),
                max_time: PositiveF64(
                    0.0 < 28.30903769708167,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004953455016720731,
                ),
                max_time: PositiveF64(
                    0.0 < 28.881641256074325,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005189597757360165,
                ),
                max_time: PositiveF64(
                    0.0 < 27.760822778467848,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005356490294927685,
                ),
                max_time: PositiveF64(
                    0.0 < 30.834731802944944,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005700450359247267,
                ),
                max_time: PositiveF64(
                    0.0 < 28.779162764574863,
                ),
                length: 587070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005839439204680108,
                ),
                max_time: PositiveF64(
                    0.0 < 28.630337479089327,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005903826773567822,
                ),
                max_time: PositiveF64(
                    0.0 < 28.11477845392785,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006158696781721762,
                ),
                max_time: PositiveF64(
                    0.0 < 27.543670580574265,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006556595331108639,
                ),
                max_time: PositiveF64(
                    0.0 < 28.245286177028362,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000661974692645062,
                ),
                max_time: PositiveF64(
                    0.0 < 30.936897921932456,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000672348807656542,
                ),
                max_time: PositiveF64(
                    0.0 < 26.14258563860508,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000069130585969578995,
                ),
                max_time: PositiveF64(
                    0.0 < 31.940708438541805,
                ),
                length: 573711,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000781316693149181,
                ),
                max_time: PositiveF64(
                    0.0 < 26.799289424695996,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000786078322656536,
                ),
                max_time: PositiveF64(
                    0.0 < 28.72614533452934,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000902782114786671,
                ),
                max_time: PositiveF64(
                    0.0 < 29.38901372567619,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014932894061570057,
                ),
                max_time: PositiveF64(
                    0.0 < 32.01308287822087,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001527763293762696,
                ),
                max_time: PositiveF64(
                    0.0 < 25.310365413048565,
                ),
                length: 578913,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.22µs
 - execution: 55.734282442s
 - cleanup: 84.853µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        32            16
 Used       :         5 (peak)  14.75 (ave)

============================================
