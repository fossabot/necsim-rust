# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 4832965873327213595,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517279[11].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 4 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-133-1-10.cx1.hpc.ic.ac.uk:4
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 08:34:28 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 4832965873327213595,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517279[11].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-133-1-10.cx1.hpc.ic.ac.uk:0,1,2,3)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 4832965873327213595,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.875 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517279[11].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fffc3b55d68; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fffc3b55d88; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517279[11].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 4 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 9.178919776s
 - execution: 20.045546895s
 - cleanup: 66.977769ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 36.9328510501903 after 105304286 steps.

# mpiexec: finished at Thu 13 May 08:35:00 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000002660921261110616,
                ),
                max_time: PositiveF64(
                    0.0 < 29.078293385729207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000027546169789616215,
                ),
                max_time: PositiveF64(
                    0.0 < 31.880490410217345,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000040464388506578075,
                ),
                max_time: PositiveF64(
                    0.0 < 30.636966149704104,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007720670353039694,
                ),
                max_time: PositiveF64(
                    0.0 < 25.169545504988413,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000788879991886482,
                ),
                max_time: PositiveF64(
                    0.0 < 26.937299631074325,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008849245086706148,
                ),
                max_time: PositiveF64(
                    0.0 < 25.387739539555128,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009589128602272012,
                ),
                max_time: PositiveF64(
                    0.0 < 26.43593873288859,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001077431932561268,
                ),
                max_time: PositiveF64(
                    0.0 < 29.648992650295316,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011906972546826822,
                ),
                max_time: PositiveF64(
                    0.0 < 25.283196884064555,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012018120276735544,
                ),
                max_time: PositiveF64(
                    0.0 < 30.982758753032268,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012051920350586443,
                ),
                max_time: PositiveF64(
                    0.0 < 30.82891455779653,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012193335618970735,
                ),
                max_time: PositiveF64(
                    0.0 < 26.318269650615722,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000014384365337738458,
                ),
                max_time: PositiveF64(
                    0.0 < 26.93870683796781,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000014884026316996923,
                ),
                max_time: PositiveF64(
                    0.0 < 36.9328510501903,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000016780530576188113,
                ),
                max_time: PositiveF64(
                    0.0 < 35.38974499684678,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000017772360472179116,
                ),
                max_time: PositiveF64(
                    0.0 < 25.299439625322364,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001778360911308674,
                ),
                max_time: PositiveF64(
                    0.0 < 31.836188908370726,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000019694027686423254,
                ),
                max_time: PositiveF64(
                    0.0 < 31.44125266451428,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000019939820572467681,
                ),
                max_time: PositiveF64(
                    0.0 < 27.762051382646526,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000020463287342398218,
                ),
                max_time: PositiveF64(
                    0.0 < 24.613847165344808,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002380512389987821,
                ),
                max_time: PositiveF64(
                    0.0 < 28.554378382049887,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000024516200403112975,
                ),
                max_time: PositiveF64(
                    0.0 < 30.637404896104808,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000030200540596103664,
                ),
                max_time: PositiveF64(
                    0.0 < 27.777151856258882,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000037395417235019934,
                ),
                max_time: PositiveF64(
                    0.0 < 27.517925915066186,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003964875386341937,
                ),
                max_time: PositiveF64(
                    0.0 < 29.873654585933316,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004812021192623916,
                ),
                max_time: PositiveF64(
                    0.0 < 25.850003767654183,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005204339204034625,
                ),
                max_time: PositiveF64(
                    0.0 < 27.672901739249937,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005304910977166344,
                ),
                max_time: PositiveF64(
                    0.0 < 27.86859884537796,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005331011329601232,
                ),
                max_time: PositiveF64(
                    0.0 < 27.333525807396413,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005583614046122953,
                ),
                max_time: PositiveF64(
                    0.0 < 29.90766220625364,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005861070762058773,
                ),
                max_time: PositiveF64(
                    0.0 < 29.30244413435902,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006117022466334276,
                ),
                max_time: PositiveF64(
                    0.0 < 30.457406952296697,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006403036956204033,
                ),
                max_time: PositiveF64(
                    0.0 < 25.437829981881336,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006518151843271092,
                ),
                max_time: PositiveF64(
                    0.0 < 29.24659564542056,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006580569669734082,
                ),
                max_time: PositiveF64(
                    0.0 < 30.130632671649384,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006680741862497008,
                ),
                max_time: PositiveF64(
                    0.0 < 30.31929124821974,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006719364156748675,
                ),
                max_time: PositiveF64(
                    0.0 < 31.866110246110445,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007026989837233266,
                ),
                max_time: PositiveF64(
                    0.0 < 30.35576911621,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007203874916039688,
                ),
                max_time: PositiveF64(
                    0.0 < 33.01817558547957,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007734629334232856,
                ),
                max_time: PositiveF64(
                    0.0 < 28.802232069039533,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007792445128051995,
                ),
                max_time: PositiveF64(
                    0.0 < 26.576949524574864,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007874035937160961,
                ),
                max_time: PositiveF64(
                    0.0 < 32.69993532631712,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009360812072700675,
                ),
                max_time: PositiveF64(
                    0.0 < 25.880043197609485,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009363728695199747,
                ),
                max_time: PositiveF64(
                    0.0 < 27.681528369318897,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009365370751135416,
                ),
                max_time: PositiveF64(
                    0.0 < 27.65371369428753,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000962529764225728,
                ),
                max_time: PositiveF64(
                    0.0 < 34.44026517253669,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009753016791402835,
                ),
                max_time: PositiveF64(
                    0.0 < 30.2703596038111,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001021008791957101,
                ),
                max_time: PositiveF64(
                    0.0 < 36.55385904137041,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001026267817394455,
                ),
                max_time: PositiveF64(
                    0.0 < 34.86543718998433,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001041274891311339,
                ),
                max_time: PositiveF64(
                    0.0 < 29.604602469136942,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011358767015856586,
                ),
                max_time: PositiveF64(
                    0.0 < 29.05972753850921,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011678267619608107,
                ),
                max_time: PositiveF64(
                    0.0 < 29.551728731441504,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011735094621045938,
                ),
                max_time: PositiveF64(
                    0.0 < 30.302024815456292,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011779555950108822,
                ),
                max_time: PositiveF64(
                    0.0 < 27.128715196792864,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011788410039792474,
                ),
                max_time: PositiveF64(
                    0.0 < 27.526627592166008,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000118755846628682,
                ),
                max_time: PositiveF64(
                    0.0 < 31.30579793969001,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012009644842492229,
                ),
                max_time: PositiveF64(
                    0.0 < 32.45723652467082,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001240962075321761,
                ),
                max_time: PositiveF64(
                    0.0 < 30.303969541231943,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001389563468456867,
                ),
                max_time: PositiveF64(
                    0.0 < 31.041263265950878,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001430413614222914,
                ),
                max_time: PositiveF64(
                    0.0 < 28.91381184995842,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015224941574132345,
                ),
                max_time: PositiveF64(
                    0.0 < 29.134132047734443,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015639758796370806,
                ),
                max_time: PositiveF64(
                    0.0 < 30.234089406724742,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016478632583472042,
                ),
                max_time: PositiveF64(
                    0.0 < 31.07776856572514,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017073877936479853,
                ),
                max_time: PositiveF64(
                    0.0 < 28.306044762140466,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001747922429851112,
                ),
                max_time: PositiveF64(
                    0.0 < 25.15657771537945,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018087125139287785,
                ),
                max_time: PositiveF64(
                    0.0 < 27.86520147071945,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018254875469581044,
                ),
                max_time: PositiveF64(
                    0.0 < 29.41655605834395,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001861545395609454,
                ),
                max_time: PositiveF64(
                    0.0 < 27.659661584048795,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001898134112388039,
                ),
                max_time: PositiveF64(
                    0.0 < 31.425765350865117,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000195753648596364,
                ),
                max_time: PositiveF64(
                    0.0 < 28.08079920604293,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019635181874866348,
                ),
                max_time: PositiveF64(
                    0.0 < 27.484563140120855,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001978831100646339,
                ),
                max_time: PositiveF64(
                    0.0 < 32.149901243357256,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001988793370266695,
                ),
                max_time: PositiveF64(
                    0.0 < 28.527276251014044,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020028185523934816,
                ),
                max_time: PositiveF64(
                    0.0 < 28.268794426217283,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021158388263664563,
                ),
                max_time: PositiveF64(
                    0.0 < 27.221858173141822,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021166414920781307,
                ),
                max_time: PositiveF64(
                    0.0 < 28.784837976870577,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022303765839781775,
                ),
                max_time: PositiveF64(
                    0.0 < 29.0441677053226,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022556984330401875,
                ),
                max_time: PositiveF64(
                    0.0 < 27.83793043429158,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022731844381840283,
                ),
                max_time: PositiveF64(
                    0.0 < 28.41007596732867,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023010371166809485,
                ),
                max_time: PositiveF64(
                    0.0 < 31.70383923062945,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024014477509326504,
                ),
                max_time: PositiveF64(
                    0.0 < 26.41745229329739,
                ),
                length: 667843,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025359562874638364,
                ),
                max_time: PositiveF64(
                    0.0 < 25.623676722789064,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002539650038602126,
                ),
                max_time: PositiveF64(
                    0.0 < 30.33448904243273,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025968576031210056,
                ),
                max_time: PositiveF64(
                    0.0 < 32.54582776441512,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025984770690712367,
                ),
                max_time: PositiveF64(
                    0.0 < 29.901464104740434,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002612266633283955,
                ),
                max_time: PositiveF64(
                    0.0 < 25.976749510904224,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027427011331515594,
                ),
                max_time: PositiveF64(
                    0.0 < 26.508857768899404,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028673469831819176,
                ),
                max_time: PositiveF64(
                    0.0 < 26.90867132315156,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030902516534592195,
                ),
                max_time: PositiveF64(
                    0.0 < 26.13533238781377,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003242776021317173,
                ),
                max_time: PositiveF64(
                    0.0 < 26.967741986532214,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032530635243888106,
                ),
                max_time: PositiveF64(
                    0.0 < 26.06683949853132,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032800916632824695,
                ),
                max_time: PositiveF64(
                    0.0 < 26.522668949326317,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033994490150623946,
                ),
                max_time: PositiveF64(
                    0.0 < 25.02816128692531,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035784341251288154,
                ),
                max_time: PositiveF64(
                    0.0 < 30.421883185640976,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003738930126062634,
                ),
                max_time: PositiveF64(
                    0.0 < 29.151734306298085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003999745636362739,
                ),
                max_time: PositiveF64(
                    0.0 < 30.285024078878084,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004160199317815305,
                ),
                max_time: PositiveF64(
                    0.0 < 26.426465167166683,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000042092681393213205,
                ),
                max_time: PositiveF64(
                    0.0 < 27.9115113848577,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004421445692903703,
                ),
                max_time: PositiveF64(
                    0.0 < 31.156743694437104,
                ),
                length: 312692,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004604383040951454,
                ),
                max_time: PositiveF64(
                    0.0 < 28.23393012247545,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004713999718075623,
                ),
                max_time: PositiveF64(
                    0.0 < 27.23775577375264,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000052697618074804,
                ),
                max_time: PositiveF64(
                    0.0 < 26.947940828742226,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005606875359831509,
                ),
                max_time: PositiveF64(
                    0.0 < 26.111803264285722,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005739137855509391,
                ),
                max_time: PositiveF64(
                    0.0 < 33.29911801459677,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008145905858736313,
                ),
                max_time: PositiveF64(
                    0.0 < 31.46205413365759,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008672480171501018,
                ),
                max_time: PositiveF64(
                    0.0 < 27.194365248229786,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001708365702235426,
                ),
                max_time: PositiveF64(
                    0.0 < 34.35042433216753,
                ),
                length: 296441,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00015458110696781047,
                ),
                max_time: PositiveF64(
                    0.0 < 19.733384132500472,
                ),
                length: 27310,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 792ns
 - execution: 32.81370108s
 - cleanup: 34.852µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             4
 Used       :         7 (peak)   3.61 (ave)

============================================
