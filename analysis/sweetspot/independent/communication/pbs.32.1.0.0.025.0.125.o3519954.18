# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 2729642376567591746,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519954[18].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-100-14-2.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:06:03 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 2729642376567591746,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519954[18].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-100-14-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 2729642376567591746,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.125 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519954[18].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffe6dd6bb68; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffe6dd6bb88; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519954[18].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 14.820260491s
 - execution: 6.452798417s
 - cleanup: 43.732998ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 40.36793655197859 after 105304286 steps.

# mpiexec: finished at Thu 13 May 18:06:29 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000022012326683640282,
                ),
                max_time: PositiveF64(
                    0.0 < 29.52451176972863,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000034189314435106866,
                ),
                max_time: PositiveF64(
                    0.0 < 29.309873163048085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007346986130585265,
                ),
                max_time: PositiveF64(
                    0.0 < 26.729083085912798,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012921219566530695,
                ),
                max_time: PositiveF64(
                    0.0 < 25.67995609865187,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013448653746195305,
                ),
                max_time: PositiveF64(
                    0.0 < 32.04286556874468,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001529587004278632,
                ),
                max_time: PositiveF64(
                    0.0 < 28.673792727969783,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018476750546225773,
                ),
                max_time: PositiveF64(
                    0.0 < 31.642034360675964,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002447093647162113,
                ),
                max_time: PositiveF64(
                    0.0 < 27.0804264902017,
                ),
                length: 363129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000025007988652125945,
                ),
                max_time: PositiveF64(
                    0.0 < 31.77380482544017,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000025549298315885594,
                ),
                max_time: PositiveF64(
                    0.0 < 28.726177350666234,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002630237055933904,
                ),
                max_time: PositiveF64(
                    0.0 < 29.62418110717333,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002725744263631924,
                ),
                max_time: PositiveF64(
                    0.0 < 28.612919139431888,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000028120889061789,
                ),
                max_time: PositiveF64(
                    0.0 < 30.714473031782525,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002879516577958263,
                ),
                max_time: PositiveF64(
                    0.0 < 28.35833152692426,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000290610480957465,
                ),
                max_time: PositiveF64(
                    0.0 < 37.80542856441794,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000029767841469574563,
                ),
                max_time: PositiveF64(
                    0.0 < 29.547680224432572,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000031798198130150723,
                ),
                max_time: PositiveF64(
                    0.0 < 25.97201598034875,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000034073173199589135,
                ),
                max_time: PositiveF64(
                    0.0 < 29.059543943748146,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003511671339828659,
                ),
                max_time: PositiveF64(
                    0.0 < 29.13811956208139,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000353417348997187,
                ),
                max_time: PositiveF64(
                    0.0 < 27.554831106635568,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000361177125984824,
                ),
                max_time: PositiveF64(
                    0.0 < 26.92736644789982,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003880107141140954,
                ),
                max_time: PositiveF64(
                    0.0 < 28.688168413669676,
                ),
                length: 616326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003899941347640379,
                ),
                max_time: PositiveF64(
                    0.0 < 29.205558355643756,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000039710226662492687,
                ),
                max_time: PositiveF64(
                    0.0 < 30.93079933525167,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000039791460820781666,
                ),
                max_time: PositiveF64(
                    0.0 < 28.14743839119822,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004022178234919238,
                ),
                max_time: PositiveF64(
                    0.0 < 29.458153042883488,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004075405049541736,
                ),
                max_time: PositiveF64(
                    0.0 < 29.883793846027196,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000042072674760751383,
                ),
                max_time: PositiveF64(
                    0.0 < 29.761180394319105,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000043597055521260586,
                ),
                max_time: PositiveF64(
                    0.0 < 25.63191992944823,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004633557573741065,
                ),
                max_time: PositiveF64(
                    0.0 < 27.05863890136788,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004927909910690254,
                ),
                max_time: PositiveF64(
                    0.0 < 32.65534127666902,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005008000988904193,
                ),
                max_time: PositiveF64(
                    0.0 < 26.53639119034693,
                ),
                length: 217270,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005402638894591583,
                ),
                max_time: PositiveF64(
                    0.0 < 27.018674691408705,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005413576889545801,
                ),
                max_time: PositiveF64(
                    0.0 < 26.90488169357287,
                ),
                length: 295354,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005688010634719021,
                ),
                max_time: PositiveF64(
                    0.0 < 34.547853678106215,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005697871763299389,
                ),
                max_time: PositiveF64(
                    0.0 < 32.21233488106018,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005785350434828196,
                ),
                max_time: PositiveF64(
                    0.0 < 25.010950157633246,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006244016456657953,
                ),
                max_time: PositiveF64(
                    0.0 < 28.62516330509626,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006309490965805686,
                ),
                max_time: PositiveF64(
                    0.0 < 26.898791363902674,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006911979916202071,
                ),
                max_time: PositiveF64(
                    0.0 < 30.29797503067137,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007063320248135163,
                ),
                max_time: PositiveF64(
                    0.0 < 28.575704288308078,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007077867433813445,
                ),
                max_time: PositiveF64(
                    0.0 < 27.265721117150612,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007529905954317684,
                ),
                max_time: PositiveF64(
                    0.0 < 25.97697167451272,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007616506972341064,
                ),
                max_time: PositiveF64(
                    0.0 < 27.757565355494936,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007988759231913889,
                ),
                max_time: PositiveF64(
                    0.0 < 36.285817739499656,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008294519310281245,
                ),
                max_time: PositiveF64(
                    0.0 < 31.127804034728722,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000887019963313751,
                ),
                max_time: PositiveF64(
                    0.0 < 26.022199939548095,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009009097629020246,
                ),
                max_time: PositiveF64(
                    0.0 < 26.2590501470715,
                ),
                length: 287076,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010230065319860593,
                ),
                max_time: PositiveF64(
                    0.0 < 27.170327916085114,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001056465437909715,
                ),
                max_time: PositiveF64(
                    0.0 < 27.77293933033521,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001065704722524874,
                ),
                max_time: PositiveF64(
                    0.0 < 27.618093587668294,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010753364185212,
                ),
                max_time: PositiveF64(
                    0.0 < 31.39704715897333,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010892788906979867,
                ),
                max_time: PositiveF64(
                    0.0 < 31.67096690656061,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011725305401610875,
                ),
                max_time: PositiveF64(
                    0.0 < 24.97706551996387,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011849299902388921,
                ),
                max_time: PositiveF64(
                    0.0 < 29.663692664802305,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001245320221665569,
                ),
                max_time: PositiveF64(
                    0.0 < 33.92360739287203,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013038906029883002,
                ),
                max_time: PositiveF64(
                    0.0 < 32.85200052894947,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013070503568357594,
                ),
                max_time: PositiveF64(
                    0.0 < 30.52947516792672,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001347344392721439,
                ),
                max_time: PositiveF64(
                    0.0 < 29.35950684199487,
                ),
                length: 292252,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013529595807582062,
                ),
                max_time: PositiveF64(
                    0.0 < 28.25771546240623,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013927894695897614,
                ),
                max_time: PositiveF64(
                    0.0 < 29.344695566694412,
                ),
                length: 300125,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001399747078245639,
                ),
                max_time: PositiveF64(
                    0.0 < 25.255717281641687,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001432785972921291,
                ),
                max_time: PositiveF64(
                    0.0 < 35.67158180797304,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014597217604106483,
                ),
                max_time: PositiveF64(
                    0.0 < 28.92654034422881,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014992120492274275,
                ),
                max_time: PositiveF64(
                    0.0 < 26.243359254475635,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015047908874521454,
                ),
                max_time: PositiveF64(
                    0.0 < 29.878220276097892,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015149726245722306,
                ),
                max_time: PositiveF64(
                    0.0 < 24.073685771559173,
                ),
                length: 320818,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016529615357030458,
                ),
                max_time: PositiveF64(
                    0.0 < 32.01078372491605,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017109105071577702,
                ),
                max_time: PositiveF64(
                    0.0 < 22.32465704191562,
                ),
                length: 299770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017956914921679612,
                ),
                max_time: PositiveF64(
                    0.0 < 25.89765086313868,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018206662921738115,
                ),
                max_time: PositiveF64(
                    0.0 < 29.526950058273,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018283191166590385,
                ),
                max_time: PositiveF64(
                    0.0 < 28.670749873497535,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001897218481483609,
                ),
                max_time: PositiveF64(
                    0.0 < 29.27675532082411,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019584590860155515,
                ),
                max_time: PositiveF64(
                    0.0 < 26.174738884668542,
                ),
                length: 297857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020282261942172752,
                ),
                max_time: PositiveF64(
                    0.0 < 24.34170061782551,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020381985607609288,
                ),
                max_time: PositiveF64(
                    0.0 < 30.96163038422544,
                ),
                length: 295925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020958592217290573,
                ),
                max_time: PositiveF64(
                    0.0 < 28.6749340732936,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002162513358106022,
                ),
                max_time: PositiveF64(
                    0.0 < 30.11731713080513,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002220107148120931,
                ),
                max_time: PositiveF64(
                    0.0 < 30.85072265216075,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002247670434218918,
                ),
                max_time: PositiveF64(
                    0.0 < 28.481414620118507,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000236787563973051,
                ),
                max_time: PositiveF64(
                    0.0 < 40.36793655197859,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024007925353286552,
                ),
                max_time: PositiveF64(
                    0.0 < 30.44615066743111,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024545153157196076,
                ),
                max_time: PositiveF64(
                    0.0 < 26.659937574698173,
                ),
                length: 281639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002471931606629063,
                ),
                max_time: PositiveF64(
                    0.0 < 24.835520499116733,
                ),
                length: 297274,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026546956000128574,
                ),
                max_time: PositiveF64(
                    0.0 < 26.24032343582954,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027430394855532114,
                ),
                max_time: PositiveF64(
                    0.0 < 26.253580386873274,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027513751282848276,
                ),
                max_time: PositiveF64(
                    0.0 < 25.528818272257926,
                ),
                length: 369800,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002774824034157408,
                ),
                max_time: PositiveF64(
                    0.0 < 30.691400631049667,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002847325911436993,
                ),
                max_time: PositiveF64(
                    0.0 < 27.447761915390654,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029238535395603726,
                ),
                max_time: PositiveF64(
                    0.0 < 26.40562575634697,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029816215410538582,
                ),
                max_time: PositiveF64(
                    0.0 < 29.233928342966465,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002988308246409943,
                ),
                max_time: PositiveF64(
                    0.0 < 28.940799762937385,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031550686380166226,
                ),
                max_time: PositiveF64(
                    0.0 < 30.45450833404862,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031885822199262392,
                ),
                max_time: PositiveF64(
                    0.0 < 27.094189549880937,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033888601405629437,
                ),
                max_time: PositiveF64(
                    0.0 < 26.651021731173312,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000034961711817271812,
                ),
                max_time: PositiveF64(
                    0.0 < 27.590700322088843,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035060368100414685,
                ),
                max_time: PositiveF64(
                    0.0 < 23.791251666335175,
                ),
                length: 210432,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035841910425715717,
                ),
                max_time: PositiveF64(
                    0.0 < 26.054222520159954,
                ),
                length: 433662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003720042497379339,
                ),
                max_time: PositiveF64(
                    0.0 < 26.582856083867377,
                ),
                length: 286977,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004146135124949435,
                ),
                max_time: PositiveF64(
                    0.0 < 33.62204364218173,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004231621222594573,
                ),
                max_time: PositiveF64(
                    0.0 < 24.44744146008737,
                ),
                length: 292119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004243534051928677,
                ),
                max_time: PositiveF64(
                    0.0 < 24.831275410205485,
                ),
                length: 311358,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004246418234821192,
                ),
                max_time: PositiveF64(
                    0.0 < 24.460592355551476,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004418217125767843,
                ),
                max_time: PositiveF64(
                    0.0 < 30.34347212684264,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004532822244773804,
                ),
                max_time: PositiveF64(
                    0.0 < 27.950246085493603,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004870401029977156,
                ),
                max_time: PositiveF64(
                    0.0 < 26.745864118403063,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005079899728088755,
                ),
                max_time: PositiveF64(
                    0.0 < 29.49052515036872,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000051850559337762725,
                ),
                max_time: PositiveF64(
                    0.0 < 25.302418993716632,
                ),
                length: 472100,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005276756289973594,
                ),
                max_time: PositiveF64(
                    0.0 < 26.853247793341094,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005294510935505148,
                ),
                max_time: PositiveF64(
                    0.0 < 21.707325551913538,
                ),
                length: 220334,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000530202951293246,
                ),
                max_time: PositiveF64(
                    0.0 < 27.222998540068687,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005486799494192063,
                ),
                max_time: PositiveF64(
                    0.0 < 31.547310178588216,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000054896210374688614,
                ),
                max_time: PositiveF64(
                    0.0 < 29.373909358443207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000057891102375751124,
                ),
                max_time: PositiveF64(
                    0.0 < 28.779778944294215,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005850750968983132,
                ),
                max_time: PositiveF64(
                    0.0 < 25.385043126801918,
                ),
                length: 290024,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000626917016327555,
                ),
                max_time: PositiveF64(
                    0.0 < 24.75312971472775,
                ),
                length: 292059,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007082274725844773,
                ),
                max_time: PositiveF64(
                    0.0 < 18.7632708274202,
                ),
                length: 44329,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007564595502773663,
                ),
                max_time: PositiveF64(
                    0.0 < 29.082501898600263,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008018785694619002,
                ),
                max_time: PositiveF64(
                    0.0 < 29.147885895250486,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000895844544018809,
                ),
                max_time: PositiveF64(
                    0.0 < 26.748147310049035,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010368203456900815,
                ),
                max_time: PositiveF64(
                    0.0 < 27.656974261173378,
                ),
                length: 224964,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012175555567095486,
                ),
                max_time: PositiveF64(
                    0.0 < 29.187227128801236,
                ),
                length: 197981,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012211120761496108,
                ),
                max_time: PositiveF64(
                    0.0 < 24.81374890770728,
                ),
                length: 280317,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014414829312137112,
                ),
                max_time: PositiveF64(
                    0.0 < 23.481134017227546,
                ),
                length: 262173,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000016038683907371176,
                ),
                max_time: PositiveF64(
                    0.0 < 25.309134160029515,
                ),
                length: 293394,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000016146123587579275,
                ),
                max_time: PositiveF64(
                    0.0 < 24.041274352626214,
                ),
                length: 281180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000194326668079281,
                ),
                max_time: PositiveF64(
                    0.0 < 30.32664280198182,
                ),
                length: 273284,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00005992352141076518,
                ),
                max_time: PositiveF64(
                    0.0 < 21.55519474316754,
                ),
                length: 102984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.025µs
 - execution: 35.467037604s
 - cleanup: 39.996µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        37 (peak)  30.32 (ave)

============================================
