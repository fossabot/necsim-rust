# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 13427420625205856587,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3520400[7].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-104-8-2.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 19:05:49 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 13427420625205856587,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3520400[7].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-104-8-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.01 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.0025 <= 1.0,
        ),
        seed: 13427420625205856587,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.875 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3520400[7].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffd88961bf8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffd88961c18; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3520400[7].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 3.577463088s
 - execution: 12.817099964s
 - cleanup: 6.742815ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 3275.9303619701977 after 983532213 steps.

# mpiexec: finished at Thu 13 May 19:06:08 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000028341351946126192,
                ),
                max_time: PositiveF64(
                    0.0 < 2500.097039315106,
                ),
                length: 301479,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00004239378116915882,
                ),
                max_time: PositiveF64(
                    0.0 < 2446.0200208577603,
                ),
                length: 308046,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000048450645961928274,
                ),
                max_time: PositiveF64(
                    0.0 < 2040.551287255014,
                ),
                length: 307804,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00006384639540557568,
                ),
                max_time: PositiveF64(
                    0.0 < 2903.406162625187,
                ),
                length: 363031,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00007805506639979587,
                ),
                max_time: PositiveF64(
                    0.0 < 2515.353360639861,
                ),
                length: 302899,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00008195768098684386,
                ),
                max_time: PositiveF64(
                    0.0 < 2907.0342596953997,
                ),
                length: 304687,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00011531349577542649,
                ),
                max_time: PositiveF64(
                    0.0 < 2731.4985198626937,
                ),
                length: 304092,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0001250742259706339,
                ),
                max_time: PositiveF64(
                    0.0 < 2403.1576342513777,
                ),
                length: 282819,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0001546295463161762,
                ),
                max_time: PositiveF64(
                    0.0 < 2235.1782926867054,
                ),
                length: 304229,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00015804563809729277,
                ),
                max_time: PositiveF64(
                    0.0 < 2646.4392193573585,
                ),
                length: 293547,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00021818961385811075,
                ),
                max_time: PositiveF64(
                    0.0 < 2959.1046610957706,
                ),
                length: 305000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0002839777492544271,
                ),
                max_time: PositiveF64(
                    0.0 < 2502.224203477512,
                ),
                length: 310889,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00031611092398020624,
                ),
                max_time: PositiveF64(
                    0.0 < 2745.8186216609643,
                ),
                length: 322078,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00032125516578079827,
                ),
                max_time: PositiveF64(
                    0.0 < 2786.188408675032,
                ),
                length: 291389,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00032756271850675756,
                ),
                max_time: PositiveF64(
                    0.0 < 2687.1140089107157,
                ),
                length: 315083,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000355450792131895,
                ),
                max_time: PositiveF64(
                    0.0 < 2498.638899247398,
                ),
                length: 295952,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00041581857056938176,
                ),
                max_time: PositiveF64(
                    0.0 < 2963.63218531441,
                ),
                length: 304429,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00048101427734759117,
                ),
                max_time: PositiveF64(
                    0.0 < 2501.070716093098,
                ),
                length: 309623,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004977197532449185,
                ),
                max_time: PositiveF64(
                    0.0 < 2437.4986222710213,
                ),
                length: 309960,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006033978783318017,
                ),
                max_time: PositiveF64(
                    0.0 < 2442.0650469098427,
                ),
                length: 298683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006102214239220305,
                ),
                max_time: PositiveF64(
                    0.0 < 3275.9303619701977,
                ),
                length: 281229,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006533815160536527,
                ),
                max_time: PositiveF64(
                    0.0 < 2492.917765011987,
                ),
                length: 301881,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007021762322773073,
                ),
                max_time: PositiveF64(
                    0.0 < 2355.2118022097047,
                ),
                length: 325035,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007666081940527203,
                ),
                max_time: PositiveF64(
                    0.0 < 2726.662403824753,
                ),
                length: 318246,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0008057509866327139,
                ),
                max_time: PositiveF64(
                    0.0 < 2702.396313200889,
                ),
                length: 314128,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009872255665313578,
                ),
                max_time: PositiveF64(
                    0.0 < 2528.7636579715913,
                ),
                length: 318368,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009982857655888022,
                ),
                max_time: PositiveF64(
                    0.0 < 2321.651248449944,
                ),
                length: 303920,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0011689157269270667,
                ),
                max_time: PositiveF64(
                    0.0 < 2465.1780312626647,
                ),
                length: 328639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0011876056364168441,
                ),
                max_time: PositiveF64(
                    0.0 < 2820.0066556060547,
                ),
                length: 288337,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.001240432917490042,
                ),
                max_time: PositiveF64(
                    0.0 < 2527.166701143457,
                ),
                length: 317476,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0012602093392144464,
                ),
                max_time: PositiveF64(
                    0.0 < 2581.6416675358278,
                ),
                length: 293646,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0019366239932819274,
                ),
                max_time: PositiveF64(
                    0.0 < 2422.202585917196,
                ),
                length: 311019,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 381ns
 - execution: 1.657198021s
 - cleanup: 39.099µs
INFO  The simulation resulted in a biodiversity of 9337758 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         2 (peak)  26.27 (ave)

============================================
