# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 13558175018866640058,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.625)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3786574[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-109-11-4.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Fri 18 Jun 13:45:55 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 13558175018866640058,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.625)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3786574[1].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-109-11-4.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value 0.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.000025 <= 1.0,
        ),
        seed: 13558175018866640058,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.625 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3786574[1].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc58d302d8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc58d302f8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3786574[1].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 5.664685773s
 - execution: 3200.359948989s
 - cleanup: 2.32434ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 15655267.62377683 after 63836286044 steps.

# mpiexec: finished at Fri 18 Jun 14:39:25 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.5957653965447294,
                ),
                max_time: PositiveF64(
                    0.0 < 6640647.682200976,
                ),
                length: 742,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 20.72797387877456,
                ),
                max_time: PositiveF64(
                    0.0 < 7672901.444235715,
                ),
                length: 3239,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 66.7755282873668,
                ),
                max_time: PositiveF64(
                    0.0 < 8379776.7679082975,
                ),
                length: 1156,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 69.30983230308642,
                ),
                max_time: PositiveF64(
                    0.0 < 6138709.418843018,
                ),
                length: 2985,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 73.45441674283242,
                ),
                max_time: PositiveF64(
                    0.0 < 15655267.62377683,
                ),
                length: 1064,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 121.56868133352008,
                ),
                max_time: PositiveF64(
                    0.0 < 10334017.667338498,
                ),
                length: 734,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 141.5110124148077,
                ),
                max_time: PositiveF64(
                    0.0 < 10515902.717192201,
                ),
                length: 1153,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 147.455383797793,
                ),
                max_time: PositiveF64(
                    0.0 < 8259767.566426155,
                ),
                length: 2204,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 201.08784718986968,
                ),
                max_time: PositiveF64(
                    0.0 < 9436118.339217303,
                ),
                length: 1481,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 223.38266800044212,
                ),
                max_time: PositiveF64(
                    0.0 < 11995810.479476191,
                ),
                length: 2075,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 247.75547510942036,
                ),
                max_time: PositiveF64(
                    0.0 < 6450385.913706066,
                ),
                length: 806,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 265.53431923284234,
                ),
                max_time: PositiveF64(
                    0.0 < 8129406.185373368,
                ),
                length: 783,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 269.4320632797972,
                ),
                max_time: PositiveF64(
                    0.0 < 5533324.173638285,
                ),
                length: 971,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 328.9079418853015,
                ),
                max_time: PositiveF64(
                    0.0 < 4722337.608497596,
                ),
                length: 2021,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 329.7204827772373,
                ),
                max_time: PositiveF64(
                    0.0 < 10215166.193832256,
                ),
                length: 1956,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 389.5841114033215,
                ),
                max_time: PositiveF64(
                    0.0 < 13875286.162246242,
                ),
                length: 1521,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 423.5489016005642,
                ),
                max_time: PositiveF64(
                    0.0 < 10355469.691675615,
                ),
                length: 7140,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 427.3472198512478,
                ),
                max_time: PositiveF64(
                    0.0 < 7664676.844703323,
                ),
                length: 617,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 429.21337025214893,
                ),
                max_time: PositiveF64(
                    0.0 < 9842782.041207183,
                ),
                length: 2789,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 434.5679444365941,
                ),
                max_time: PositiveF64(
                    0.0 < 7994377.309764057,
                ),
                length: 2285,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 445.9686018329061,
                ),
                max_time: PositiveF64(
                    0.0 < 9310159.32274649,
                ),
                length: 2393,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 448.3078484441699,
                ),
                max_time: PositiveF64(
                    0.0 < 9652110.25714626,
                ),
                length: 3041,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 463.5725024652787,
                ),
                max_time: PositiveF64(
                    0.0 < 11628068.734464599,
                ),
                length: 2647,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 495.9336752659125,
                ),
                max_time: PositiveF64(
                    0.0 < 6866083.5043652505,
                ),
                length: 932,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 551.844081672686,
                ),
                max_time: PositiveF64(
                    0.0 < 5185494.6581475455,
                ),
                length: 4254,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 578.3683076916942,
                ),
                max_time: PositiveF64(
                    0.0 < 10983331.123583753,
                ),
                length: 3537,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 702.5265175120919,
                ),
                max_time: PositiveF64(
                    0.0 < 13676826.936618544,
                ),
                length: 4154,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 912.6560113427257,
                ),
                max_time: PositiveF64(
                    0.0 < 10177375.649253346,
                ),
                length: 1139,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1482.299115698728,
                ),
                max_time: PositiveF64(
                    0.0 < 10247746.491735883,
                ),
                length: 1433,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1492.4002960080293,
                ),
                max_time: PositiveF64(
                    0.0 < 10443686.95786182,
                ),
                length: 2793,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2163.381010217294,
                ),
                max_time: PositiveF64(
                    0.0 < 4512630.633083659,
                ),
                length: 640,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2747.7395136099226,
                ),
                max_time: PositiveF64(
                    0.0 < 5568117.894334231,
                ),
                length: 1492,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 634ns
 - execution: 8.906453ms
 - cleanup: 13.797µs
INFO  The simulation resulted in a biodiversity of 8180 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        11 (peak)  32.01 (ave)

============================================
