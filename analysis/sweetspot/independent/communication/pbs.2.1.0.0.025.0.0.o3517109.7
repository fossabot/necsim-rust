# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 16859348778246311281,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517109[7].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 2 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-131-5-12.cx1.hpc.ic.ac.uk:2
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 07:24:24 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 16859348778246311281,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517109[7].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-131-5-12.cx1.hpc.ic.ac.uk:0,1)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 16859348778246311281,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517109[7].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff67a31118; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff67a31138; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517109[7].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 2 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 8.718692104s
 - execution: 37.431423842s
 - cleanup: 23.979381ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 41.33375053426821 after 105304286 steps.

# mpiexec: finished at Thu 13 May 07:25:13 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000019430387854235676,
                ),
                max_time: PositiveF64(
                    0.0 < 28.47543015889077,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000004017121607580165,
                ),
                max_time: PositiveF64(
                    0.0 < 30.001722354503787,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000004352759735981593,
                ),
                max_time: PositiveF64(
                    0.0 < 29.373573075945526,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000005261597768591031,
                ),
                max_time: PositiveF64(
                    0.0 < 29.954684048240768,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000005957282528390451,
                ),
                max_time: PositiveF64(
                    0.0 < 30.487144266135893,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006155769588511717,
                ),
                max_time: PositiveF64(
                    0.0 < 31.120860445226917,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009600166578360714,
                ),
                max_time: PositiveF64(
                    0.0 < 27.890793509188025,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009789553057082401,
                ),
                max_time: PositiveF64(
                    0.0 < 28.572037060812487,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012707857599547623,
                ),
                max_time: PositiveF64(
                    0.0 < 31.157214768894818,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018440295429522635,
                ),
                max_time: PositiveF64(
                    0.0 < 30.221416144946517,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000019041891424764756,
                ),
                max_time: PositiveF64(
                    0.0 < 30.71660878369091,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021308676656506265,
                ),
                max_time: PositiveF64(
                    0.0 < 28.091680753301493,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000023334610882441709,
                ),
                max_time: PositiveF64(
                    0.0 < 24.99513971459884,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000024118482683244125,
                ),
                max_time: PositiveF64(
                    0.0 < 28.576274773921185,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002643571328508898,
                ),
                max_time: PositiveF64(
                    0.0 < 26.28982599269583,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026661741064915034,
                ),
                max_time: PositiveF64(
                    0.0 < 32.93514378844161,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002697761547487687,
                ),
                max_time: PositiveF64(
                    0.0 < 25.70041974944764,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000028376227340087823,
                ),
                max_time: PositiveF64(
                    0.0 < 26.336326684077594,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002909629037706196,
                ),
                max_time: PositiveF64(
                    0.0 < 32.05234088108052,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003177849583479997,
                ),
                max_time: PositiveF64(
                    0.0 < 27.15841462989467,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000034106430152336387,
                ),
                max_time: PositiveF64(
                    0.0 < 31.729505954337345,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000035364375094992795,
                ),
                max_time: PositiveF64(
                    0.0 < 26.137299929206335,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000037361472388086625,
                ),
                max_time: PositiveF64(
                    0.0 < 28.34753931568187,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000039479765179262216,
                ),
                max_time: PositiveF64(
                    0.0 < 26.689389435457876,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004371378148348981,
                ),
                max_time: PositiveF64(
                    0.0 < 27.86971367908076,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004905860359616376,
                ),
                max_time: PositiveF64(
                    0.0 < 30.02177390976527,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006189900908504242,
                ),
                max_time: PositiveF64(
                    0.0 < 29.1489512476879,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006234311653030566,
                ),
                max_time: PositiveF64(
                    0.0 < 29.23577237370441,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007380591288130844,
                ),
                max_time: PositiveF64(
                    0.0 < 31.709058344497016,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007619197059383076,
                ),
                max_time: PositiveF64(
                    0.0 < 30.944880767659633,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008094429501670497,
                ),
                max_time: PositiveF64(
                    0.0 < 30.570363640518398,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008127879258523762,
                ),
                max_time: PositiveF64(
                    0.0 < 28.835360263414245,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008680002699934519,
                ),
                max_time: PositiveF64(
                    0.0 < 28.54103438233085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008727029951471899,
                ),
                max_time: PositiveF64(
                    0.0 < 26.520936615675144,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000921427201761027,
                ),
                max_time: PositiveF64(
                    0.0 < 31.52258823205296,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009229137815092159,
                ),
                max_time: PositiveF64(
                    0.0 < 29.979707027933177,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009487315924538997,
                ),
                max_time: PositiveF64(
                    0.0 < 25.286298399019408,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009659287683594364,
                ),
                max_time: PositiveF64(
                    0.0 < 29.992757257641806,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009849572926712291,
                ),
                max_time: PositiveF64(
                    0.0 < 41.33375053426821,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009954968155367894,
                ),
                max_time: PositiveF64(
                    0.0 < 28.67013865161995,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010122546878488237,
                ),
                max_time: PositiveF64(
                    0.0 < 29.842851703083305,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001036628960449093,
                ),
                max_time: PositiveF64(
                    0.0 < 26.39069557968657,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011172783753732318,
                ),
                max_time: PositiveF64(
                    0.0 < 29.224892859008875,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001139817168982482,
                ),
                max_time: PositiveF64(
                    0.0 < 25.256407945658278,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011463728680216612,
                ),
                max_time: PositiveF64(
                    0.0 < 29.178955038998367,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012023941356464896,
                ),
                max_time: PositiveF64(
                    0.0 < 28.926796871804203,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001391300983866195,
                ),
                max_time: PositiveF64(
                    0.0 < 26.152016215941792,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001535218066561761,
                ),
                max_time: PositiveF64(
                    0.0 < 29.903817852483186,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016022206461574484,
                ),
                max_time: PositiveF64(
                    0.0 < 26.592904474249877,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001622714256577229,
                ),
                max_time: PositiveF64(
                    0.0 < 28.664787877276552,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016525331281158628,
                ),
                max_time: PositiveF64(
                    0.0 < 27.474921767740256,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001658989922104226,
                ),
                max_time: PositiveF64(
                    0.0 < 26.18008907801962,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016668859961765925,
                ),
                max_time: PositiveF64(
                    0.0 < 28.6184990510974,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017831204110474452,
                ),
                max_time: PositiveF64(
                    0.0 < 28.20523511732516,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019070434809087544,
                ),
                max_time: PositiveF64(
                    0.0 < 28.793130659818825,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019176395363307286,
                ),
                max_time: PositiveF64(
                    0.0 < 29.080656672716387,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019569254872120467,
                ),
                max_time: PositiveF64(
                    0.0 < 28.133559508455185,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020615525442302385,
                ),
                max_time: PositiveF64(
                    0.0 < 29.159051562115827,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002073688798454043,
                ),
                max_time: PositiveF64(
                    0.0 < 28.47395807778274,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002145611640858025,
                ),
                max_time: PositiveF64(
                    0.0 < 27.155059631697952,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002146664752344929,
                ),
                max_time: PositiveF64(
                    0.0 < 26.531359885414815,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002175714697294495,
                ),
                max_time: PositiveF64(
                    0.0 < 25.17912268224488,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002466709244364207,
                ),
                max_time: PositiveF64(
                    0.0 < 25.29865520260771,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002473361932764373,
                ),
                max_time: PositiveF64(
                    0.0 < 26.306512851995706,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025112426499385165,
                ),
                max_time: PositiveF64(
                    0.0 < 28.854982498780615,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025888997884360165,
                ),
                max_time: PositiveF64(
                    0.0 < 29.15138829019897,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026198233865626364,
                ),
                max_time: PositiveF64(
                    0.0 < 25.69172175548494,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002627318479164753,
                ),
                max_time: PositiveF64(
                    0.0 < 25.85246168786093,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026447391240913554,
                ),
                max_time: PositiveF64(
                    0.0 < 30.146985946375395,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002872791543540032,
                ),
                max_time: PositiveF64(
                    0.0 < 26.548793913855096,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030366829692485275,
                ),
                max_time: PositiveF64(
                    0.0 < 25.527633462347104,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030790268498726014,
                ),
                max_time: PositiveF64(
                    0.0 < 29.077658216363712,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003120599854911088,
                ),
                max_time: PositiveF64(
                    0.0 < 26.133862549842235,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003165434950547219,
                ),
                max_time: PositiveF64(
                    0.0 < 40.45884149938402,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033058412474140653,
                ),
                max_time: PositiveF64(
                    0.0 < 27.362377913493443,
                ),
                length: 695153,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033925043668725507,
                ),
                max_time: PositiveF64(
                    0.0 < 28.697026242401545,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000037405995120809443,
                ),
                max_time: PositiveF64(
                    0.0 < 31.910455077529186,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000037495834337430978,
                ),
                max_time: PositiveF64(
                    0.0 < 28.590240781455716,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000038031315249820175,
                ),
                max_time: PositiveF64(
                    0.0 < 33.096457830864026,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003894885339805754,
                ),
                max_time: PositiveF64(
                    0.0 < 27.032050962233217,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003901455592481007,
                ),
                max_time: PositiveF64(
                    0.0 < 31.123310415974036,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004033459074792578,
                ),
                max_time: PositiveF64(
                    0.0 < 26.32417303865178,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000041329940256296105,
                ),
                max_time: PositiveF64(
                    0.0 < 30.38710268443826,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004175505831927051,
                ),
                max_time: PositiveF64(
                    0.0 < 27.743448886999026,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004299464463342062,
                ),
                max_time: PositiveF64(
                    0.0 < 27.275413098134234,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004367139206651327,
                ),
                max_time: PositiveF64(
                    0.0 < 28.060705439286746,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004512948167945119,
                ),
                max_time: PositiveF64(
                    0.0 < 24.78808061016807,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004520153707165964,
                ),
                max_time: PositiveF64(
                    0.0 < 27.087664926280365,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000045548533936234925,
                ),
                max_time: PositiveF64(
                    0.0 < 30.637931318210416,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004597565634034684,
                ),
                max_time: PositiveF64(
                    0.0 < 27.460346955349117,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004913519263682886,
                ),
                max_time: PositiveF64(
                    0.0 < 30.34132628304645,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004930852026130417,
                ),
                max_time: PositiveF64(
                    0.0 < 27.08366663199304,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005046646575079805,
                ),
                max_time: PositiveF64(
                    0.0 < 29.014018752502466,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005166642099430074,
                ),
                max_time: PositiveF64(
                    0.0 < 28.93532445756186,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005551005403114928,
                ),
                max_time: PositiveF64(
                    0.0 < 27.87499399355735,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000057987968257733336,
                ),
                max_time: PositiveF64(
                    0.0 < 36.22570079376536,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006081368862653758,
                ),
                max_time: PositiveF64(
                    0.0 < 26.071152306926063,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006082329091772198,
                ),
                max_time: PositiveF64(
                    0.0 < 28.282511092338233,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000659219476090156,
                ),
                max_time: PositiveF64(
                    0.0 < 25.62585222865816,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006868394684111934,
                ),
                max_time: PositiveF64(
                    0.0 < 27.678283257912394,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006886303027808793,
                ),
                max_time: PositiveF64(
                    0.0 < 25.88802817684102,
                ),
                length: 609133,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007634806256928695,
                ),
                max_time: PositiveF64(
                    0.0 < 29.066471656667886,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007928861725237102,
                ),
                max_time: PositiveF64(
                    0.0 < 26.74068532696104,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008764286070217508,
                ),
                max_time: PositiveF64(
                    0.0 < 26.573685726073432,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000937744752294023,
                ),
                max_time: PositiveF64(
                    0.0 < 28.498761554001454,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010606014929637197,
                ),
                max_time: PositiveF64(
                    0.0 < 31.37504195313866,
                ),
                length: 1000000,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 910ns
 - execution: 30.741766909s
 - cleanup: 33.437µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             2
 Used       :         4 (peak)   2.00 (ave)

============================================
