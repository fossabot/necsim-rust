# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 16344584847132746356,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780154[37].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-132-4-14.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 17 Jun 20:51:06 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 16344584847132746356,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780154[37].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-132-4-14.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value 0.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.000025 <= 1.0,
        ),
        seed: 16344584847132746356,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3780154[37].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffe7c255368; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffe7c255388; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3780154[37].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 2.705897244s
 - execution: 1608.504864957s
 - cleanup: 1.923618ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 18742358.059610292 after 80327222413 steps.

# mpiexec: finished at Thu 17 Jun 21:18:03 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 3.696286425418211,
                ),
                max_time: PositiveF64(
                    0.0 < 8524458.182640191,
                ),
                length: 1860,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 34.11289503420025,
                ),
                max_time: PositiveF64(
                    0.0 < 16601598.634882942,
                ),
                length: 2112,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 100.05284228605747,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2899,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 107.90770726786968,
                ),
                max_time: PositiveF64(
                    0.0 < 16601598.634882942,
                ),
                length: 2094,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 133.4264908252437,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2891,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 141.15702441753763,
                ),
                max_time: PositiveF64(
                    0.0 < 8524458.182640191,
                ),
                length: 2024,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 170.90136918565736,
                ),
                max_time: PositiveF64(
                    0.0 < 9821230.192432435,
                ),
                length: 2062,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 197.96036336689974,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2389,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 203.03989122951518,
                ),
                max_time: PositiveF64(
                    0.0 < 9821230.192432435,
                ),
                length: 1884,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 229.08113686608377,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2807,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 232.96972335177517,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2826,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 252.29424165919255,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2885,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 259.18935157394014,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2818,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 295.9735640883687,
                ),
                max_time: PositiveF64(
                    0.0 < 7066844.728227461,
                ),
                length: 747,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 350.2386678066114,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2980,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 358.07756984978016,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 1545,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 367.12048366274973,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2655,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 459.5866328100578,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2573,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 482.9338915146985,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2821,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 520.6078880436448,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2755,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 546.8567362396029,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2829,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 597.522570908339,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2962,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 601.2679311173816,
                ),
                max_time: PositiveF64(
                    0.0 < 9821230.192432435,
                ),
                length: 1559,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 641.5940774363562,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2542,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 651.6998332805956,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2876,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 696.4430237955414,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2720,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 716.9417022484923,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2909,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1187.4637165390259,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2572,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1232.6642195986456,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2916,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1254.6559695655042,
                ),
                max_time: PositiveF64(
                    0.0 < 9821230.192432435,
                ),
                length: 2308,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1546.5077946704992,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2896,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1943.905222740698,
                ),
                max_time: PositiveF64(
                    0.0 < 18742358.059610292,
                ),
                length: 2825,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 658ns
 - execution: 16.613035ms
 - cleanup: 25.777µs
INFO  The simulation resulted in a biodiversity of 8193 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         1 (peak)  31.94 (ave)

============================================
