# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 4281286105488795037,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780162[28].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-109-19-1.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 17 Jun 22:25:43 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 4281286105488795037,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780162[28].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-109-19-1.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value 0.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.000025 <= 1.0,
        ),
        seed: 4281286105488795037,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 1 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3780162[28].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffe1dcff868; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffe1dcff888; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3780162[28].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 3.300324767s
 - execution: 3283.926607976s
 - cleanup: 2.15398ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 14644558.197636902 after 68811386861 steps.

# mpiexec: finished at Thu 17 Jun 23:20:36 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 18.57055782330424,
                ),
                max_time: PositiveF64(
                    0.0 < 7882821.24057639,
                ),
                length: 4728,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 26.971991841730443,
                ),
                max_time: PositiveF64(
                    0.0 < 13106077.547526771,
                ),
                length: 834,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 45.04495045755824,
                ),
                max_time: PositiveF64(
                    0.0 < 8348892.832089565,
                ),
                length: 2979,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 72.23195941285577,
                ),
                max_time: PositiveF64(
                    0.0 < 10011333.284765773,
                ),
                length: 7136,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 73.81289614853118,
                ),
                max_time: PositiveF64(
                    0.0 < 9298878.183952782,
                ),
                length: 1482,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 92.14683367911076,
                ),
                max_time: PositiveF64(
                    0.0 < 7809432.235043445,
                ),
                length: 1461,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 99.58909634901426,
                ),
                max_time: PositiveF64(
                    0.0 < 14644558.197636902,
                ),
                length: 1004,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 116.63931998880324,
                ),
                max_time: PositiveF64(
                    0.0 < 6606399.387813581,
                ),
                length: 1057,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 135.58251584830165,
                ),
                max_time: PositiveF64(
                    0.0 < 4609754.534691855,
                ),
                length: 803,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 186.7927481074217,
                ),
                max_time: PositiveF64(
                    0.0 < 9261297.53282473,
                ),
                length: 1770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 193.18113175439063,
                ),
                max_time: PositiveF64(
                    0.0 < 8634675.926458713,
                ),
                length: 2999,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 213.33938759142708,
                ),
                max_time: PositiveF64(
                    0.0 < 10087767.743938953,
                ),
                length: 2553,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 232.74145478188032,
                ),
                max_time: PositiveF64(
                    0.0 < 13404343.109515697,
                ),
                length: 2145,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 311.46260585016734,
                ),
                max_time: PositiveF64(
                    0.0 < 2996525.8852206073,
                ),
                length: 763,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 321.364715791509,
                ),
                max_time: PositiveF64(
                    0.0 < 9809386.616489476,
                ),
                length: 978,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 388.4075559796718,
                ),
                max_time: PositiveF64(
                    0.0 < 8995181.513280133,
                ),
                length: 2636,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 393.47621716392916,
                ),
                max_time: PositiveF64(
                    0.0 < 6472562.320630128,
                ),
                length: 1405,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 420.5058481417709,
                ),
                max_time: PositiveF64(
                    0.0 < 9950710.759400986,
                ),
                length: 3318,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 494.96838585794956,
                ),
                max_time: PositiveF64(
                    0.0 < 10893271.05442926,
                ),
                length: 2166,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 528.8502679107215,
                ),
                max_time: PositiveF64(
                    0.0 < 5639261.080902043,
                ),
                length: 700,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 538.5945619856108,
                ),
                max_time: PositiveF64(
                    0.0 < 8898459.951692738,
                ),
                length: 853,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 601.1613409053812,
                ),
                max_time: PositiveF64(
                    0.0 < 8717888.480402337,
                ),
                length: 2121,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 927.0300802365668,
                ),
                max_time: PositiveF64(
                    0.0 < 10395374.761844479,
                ),
                length: 2563,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1088.8931676913714,
                ),
                max_time: PositiveF64(
                    0.0 < 6129027.926854128,
                ),
                length: 1164,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1169.905871651217,
                ),
                max_time: PositiveF64(
                    0.0 < 8545096.969321165,
                ),
                length: 3949,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1474.9256203386276,
                ),
                max_time: PositiveF64(
                    0.0 < 10312767.627068946,
                ),
                length: 3687,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1511.1049264919666,
                ),
                max_time: PositiveF64(
                    0.0 < 9859663.62659679,
                ),
                length: 2847,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1609.3486800214364,
                ),
                max_time: PositiveF64(
                    0.0 < 7301809.808973936,
                ),
                length: 867,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1943.600514369324,
                ),
                max_time: PositiveF64(
                    0.0 < 10413275.904888336,
                ),
                length: 336,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2242.547830445963,
                ),
                max_time: PositiveF64(
                    0.0 < 4798051.252146815,
                ),
                length: 3737,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2391.1580364576994,
                ),
                max_time: PositiveF64(
                    0.0 < 7743702.596625345,
                ),
                length: 1292,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2650.6755375988096,
                ),
                max_time: PositiveF64(
                    0.0 < 8591952.930938696,
                ),
                length: 1416,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 648ns
 - execution: 9.1122ms
 - cleanup: 13.269µs
INFO  The simulation resulted in a biodiversity of 8139 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        15 (peak)  32.00 (ave)

============================================
