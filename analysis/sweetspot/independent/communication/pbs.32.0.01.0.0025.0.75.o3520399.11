# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 10048543133188109043,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.75)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3520399[11].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-100-19-2.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 19:05:48 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 10048543133188109043,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.75)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3520399[11].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-100-19-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.01 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.0025 <= 1.0,
        ),
        seed: 10048543133188109043,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.75 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3520399[11].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffeac026d98; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffeac026db8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3520399[11].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 4.491563677s
 - execution: 17.681298208s
 - cleanup: 14.160713ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 3325.9001825262953 after 983204182 steps.

# mpiexec: finished at Thu 13 May 19:06:16 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001257875942545228,
                ),
                max_time: PositiveF64(
                    0.0 < 2588.6372153933103,
                ),
                length: 317487,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000015318508892747662,
                ),
                max_time: PositiveF64(
                    0.0 < 2401.3652930132703,
                ),
                length: 314633,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000027625059471625413,
                ),
                max_time: PositiveF64(
                    0.0 < 2727.498320971904,
                ),
                length: 325452,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00003708511834649153,
                ),
                max_time: PositiveF64(
                    0.0 < 2776.288445274041,
                ),
                length: 298927,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000835958339553966,
                ),
                max_time: PositiveF64(
                    0.0 < 2394.996386823768,
                ),
                length: 315345,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00010539977772422437,
                ),
                max_time: PositiveF64(
                    0.0 < 2391.032969795114,
                ),
                length: 304721,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00011598900802434198,
                ),
                max_time: PositiveF64(
                    0.0 < 2414.324255375896,
                ),
                length: 310847,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00013978972802169976,
                ),
                max_time: PositiveF64(
                    0.0 < 2880.466992433281,
                ),
                length: 293974,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00017736429527459574,
                ),
                max_time: PositiveF64(
                    0.0 < 3113.55410605612,
                ),
                length: 294564,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00019217777793040236,
                ),
                max_time: PositiveF64(
                    0.0 < 2330.4376134071044,
                ),
                length: 310707,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00022418631850457116,
                ),
                max_time: PositiveF64(
                    0.0 < 2359.9185186133927,
                ),
                length: 301174,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00022580880735645348,
                ),
                max_time: PositiveF64(
                    0.0 < 2129.6255990331265,
                ),
                length: 303895,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00024341150818951718,
                ),
                max_time: PositiveF64(
                    0.0 < 2329.812674409941,
                ),
                length: 288290,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00039174284109183555,
                ),
                max_time: PositiveF64(
                    0.0 < 2931.1861040800422,
                ),
                length: 309258,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0003940836904189893,
                ),
                max_time: PositiveF64(
                    0.0 < 2411.588224756662,
                ),
                length: 291445,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004106864294284307,
                ),
                max_time: PositiveF64(
                    0.0 < 2426.9893059506117,
                ),
                length: 304317,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004620716179529194,
                ),
                max_time: PositiveF64(
                    0.0 < 2544.768527341782,
                ),
                length: 316259,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000482051754605306,
                ),
                max_time: PositiveF64(
                    0.0 < 2884.2548840369245,
                ),
                length: 322425,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005006471884574926,
                ),
                max_time: PositiveF64(
                    0.0 < 3325.9001825262953,
                ),
                length: 317448,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005431323662802301,
                ),
                max_time: PositiveF64(
                    0.0 < 2638.5918196929765,
                ),
                length: 308187,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005809456919311784,
                ),
                max_time: PositiveF64(
                    0.0 < 2836.2769387837675,
                ),
                length: 363721,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000598363578545591,
                ),
                max_time: PositiveF64(
                    0.0 < 2611.118180924111,
                ),
                length: 303378,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006803832374729923,
                ),
                max_time: PositiveF64(
                    0.0 < 2159.0354333034115,
                ),
                length: 327987,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006856284011544367,
                ),
                max_time: PositiveF64(
                    0.0 < 2516.253656771739,
                ),
                length: 308385,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007093740941796489,
                ),
                max_time: PositiveF64(
                    0.0 < 2347.848787580917,
                ),
                length: 303577,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009882147192077917,
                ),
                max_time: PositiveF64(
                    0.0 < 2622.448663324236,
                ),
                length: 304205,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0011182838340609291,
                ),
                max_time: PositiveF64(
                    0.0 < 2623.424154589772,
                ),
                length: 309192,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.001148127435207924,
                ),
                max_time: PositiveF64(
                    0.0 < 2260.806375625243,
                ),
                length: 282566,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0012208901496119084,
                ),
                max_time: PositiveF64(
                    0.0 < 2481.522213248453,
                ),
                length: 304267,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.001309150533613801,
                ),
                max_time: PositiveF64(
                    0.0 < 2259.8050892676392,
                ),
                length: 281380,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0015249475896281228,
                ),
                max_time: PositiveF64(
                    0.0 < 2749.3316178178184,
                ),
                length: 301125,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0016201104935745225,
                ),
                max_time: PositiveF64(
                    0.0 < 2406.290241457973,
                ),
                length: 296497,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 435ns
 - execution: 2.413911172s
 - cleanup: 35.598µs
INFO  The simulation resulted in a biodiversity of 9337904 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         3 (peak)  28.89 (ave)

============================================
