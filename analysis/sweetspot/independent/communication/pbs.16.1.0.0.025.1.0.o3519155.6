# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 17376786845452544392,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519155[6].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 16 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-109-15-2.cx1.hpc.ic.ac.uk:16
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 15:07:50 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 17376786845452544392,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:1.0)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519155[6].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-109-15-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 17376786845452544392,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 1 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519155[6].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc8d7355e8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc8d735608; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519155[6].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 16 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 23.20962267s
 - execution: 9.262933423s
 - cleanup: 52.409028ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 42.001240099589616 after 105304286 steps.

# mpiexec: finished at Thu 13 May 15:08:28 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000000004607036974135781,
                ),
                max_time: PositiveF64(
                    0.0 < 30.1889224415564,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000008630781367369167,
                ),
                max_time: PositiveF64(
                    0.0 < 28.855843435487643,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000068376116435509,
                ),
                max_time: PositiveF64(
                    0.0 < 31.364621097510962,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007549776803728037,
                ),
                max_time: PositiveF64(
                    0.0 < 27.190451792749727,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008071172785673042,
                ),
                max_time: PositiveF64(
                    0.0 < 24.254497520337154,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009381684623610553,
                ),
                max_time: PositiveF64(
                    0.0 < 27.126416242943357,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001607653296598066,
                ),
                max_time: PositiveF64(
                    0.0 < 26.276706395961206,
                ),
                length: 435396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018323450590163048,
                ),
                max_time: PositiveF64(
                    0.0 < 24.97071463980052,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000019189737687774766,
                ),
                max_time: PositiveF64(
                    0.0 < 30.638584075117752,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021657456467094605,
                ),
                max_time: PositiveF64(
                    0.0 < 24.727110867789882,
                ),
                length: 584371,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002698849493887323,
                ),
                max_time: PositiveF64(
                    0.0 < 24.85267224774394,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000030574890536039234,
                ),
                max_time: PositiveF64(
                    0.0 < 26.899301964811126,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003167121789826588,
                ),
                max_time: PositiveF64(
                    0.0 < 28.512156519522183,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000032223945095610773,
                ),
                max_time: PositiveF64(
                    0.0 < 31.850304323124156,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000336126697864092,
                ),
                max_time: PositiveF64(
                    0.0 < 27.507533805373072,
                ),
                length: 598335,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000038772935972986033,
                ),
                max_time: PositiveF64(
                    0.0 < 28.65800510667349,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004091555977359107,
                ),
                max_time: PositiveF64(
                    0.0 < 30.60017430755734,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004255658711538324,
                ),
                max_time: PositiveF64(
                    0.0 < 27.090730033834735,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000437872931524641,
                ),
                max_time: PositiveF64(
                    0.0 < 34.329936483547215,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004450274931899756,
                ),
                max_time: PositiveF64(
                    0.0 < 33.08060591883607,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000044892412814911964,
                ),
                max_time: PositiveF64(
                    0.0 < 24.897232116393052,
                ),
                length: 552197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004698392017110642,
                ),
                max_time: PositiveF64(
                    0.0 < 25.881639125992134,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004945170636871943,
                ),
                max_time: PositiveF64(
                    0.0 < 27.906165213266224,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004954661830813833,
                ),
                max_time: PositiveF64(
                    0.0 < 26.238914516588284,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005257050653129092,
                ),
                max_time: PositiveF64(
                    0.0 < 28.911791971511054,
                ),
                length: 560360,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005262170615916162,
                ),
                max_time: PositiveF64(
                    0.0 < 27.753858978393325,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005313899664738386,
                ),
                max_time: PositiveF64(
                    0.0 < 27.78609028087548,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005718734219506416,
                ),
                max_time: PositiveF64(
                    0.0 < 28.166078444610505,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005821000909067564,
                ),
                max_time: PositiveF64(
                    0.0 < 31.924669619571986,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000626586425245268,
                ),
                max_time: PositiveF64(
                    0.0 < 27.978885496958288,
                ),
                length: 578913,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000642755296487163,
                ),
                max_time: PositiveF64(
                    0.0 < 28.49303727696128,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006818480760562018,
                ),
                max_time: PositiveF64(
                    0.0 < 28.21544612061727,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007086103265274701,
                ),
                max_time: PositiveF64(
                    0.0 < 31.12476179200071,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007186762859823226,
                ),
                max_time: PositiveF64(
                    0.0 < 29.596170437093768,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007435872917405106,
                ),
                max_time: PositiveF64(
                    0.0 < 26.71045660317006,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007439633781247679,
                ),
                max_time: PositiveF64(
                    0.0 < 31.94741298341604,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007515339051078485,
                ),
                max_time: PositiveF64(
                    0.0 < 28.914138159929408,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008330317322058356,
                ),
                max_time: PositiveF64(
                    0.0 < 42.001240099589616,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008337953294468292,
                ),
                max_time: PositiveF64(
                    0.0 < 27.735721199337707,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008508098647830309,
                ),
                max_time: PositiveF64(
                    0.0 < 27.949076594542053,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008890013750151304,
                ),
                max_time: PositiveF64(
                    0.0 < 31.251292459528422,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000893909139765281,
                ),
                max_time: PositiveF64(
                    0.0 < 27.388887165549196,
                ),
                length: 914183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008989525657199238,
                ),
                max_time: PositiveF64(
                    0.0 < 26.107525160208684,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009019038257895851,
                ),
                max_time: PositiveF64(
                    0.0 < 28.043090345059497,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000977426023451855,
                ),
                max_time: PositiveF64(
                    0.0 < 28.862982633983236,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010165927580296774,
                ),
                max_time: PositiveF64(
                    0.0 < 26.86662466998312,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010631936633864747,
                ),
                max_time: PositiveF64(
                    0.0 < 28.619432100309382,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010687828941313704,
                ),
                max_time: PositiveF64(
                    0.0 < 30.46915409863138,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001097254766768696,
                ),
                max_time: PositiveF64(
                    0.0 < 27.494114447348164,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011423069803950803,
                ),
                max_time: PositiveF64(
                    0.0 < 31.116732400430767,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012048653996732384,
                ),
                max_time: PositiveF64(
                    0.0 < 33.63294037001905,
                ),
                length: 620588,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001364083999921828,
                ),
                max_time: PositiveF64(
                    0.0 < 30.061496679429183,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014546601379006319,
                ),
                max_time: PositiveF64(
                    0.0 < 40.15658038314649,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015740438275013702,
                ),
                max_time: PositiveF64(
                    0.0 < 30.290894870948822,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015839668024431042,
                ),
                max_time: PositiveF64(
                    0.0 < 30.438726905820076,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001615002166721613,
                ),
                max_time: PositiveF64(
                    0.0 < 25.36081724567977,
                ),
                length: 575084,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000170309210012487,
                ),
                max_time: PositiveF64(
                    0.0 < 34.45902201279726,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017339202718069657,
                ),
                max_time: PositiveF64(
                    0.0 < 31.339748618232903,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017491178952444564,
                ),
                max_time: PositiveF64(
                    0.0 < 26.663439272729764,
                ),
                length: 339683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001864013968733147,
                ),
                max_time: PositiveF64(
                    0.0 < 27.79171222041786,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001955752419735557,
                ),
                max_time: PositiveF64(
                    0.0 < 26.66895742682862,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019687325486517082,
                ),
                max_time: PositiveF64(
                    0.0 < 28.463044832983492,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019704731210601345,
                ),
                max_time: PositiveF64(
                    0.0 < 27.79383234485923,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020251216384381543,
                ),
                max_time: PositiveF64(
                    0.0 < 27.795188148197553,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020946197601401373,
                ),
                max_time: PositiveF64(
                    0.0 < 25.109534314096624,
                ),
                length: 583463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021167992997339624,
                ),
                max_time: PositiveF64(
                    0.0 < 28.378900814925284,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002175538165727353,
                ),
                max_time: PositiveF64(
                    0.0 < 24.429780573982626,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002293602179292975,
                ),
                max_time: PositiveF64(
                    0.0 < 27.229606074176118,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002327717407990537,
                ),
                max_time: PositiveF64(
                    0.0 < 32.83199689306227,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023386219169529987,
                ),
                max_time: PositiveF64(
                    0.0 < 30.536121343578934,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024202740492307306,
                ),
                max_time: PositiveF64(
                    0.0 < 27.486940746015215,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002458895578816289,
                ),
                max_time: PositiveF64(
                    0.0 < 27.061823508368338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002485724119316579,
                ),
                max_time: PositiveF64(
                    0.0 < 24.394814855940687,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026101661695920875,
                ),
                max_time: PositiveF64(
                    0.0 < 39.17637398709881,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027140472347308986,
                ),
                max_time: PositiveF64(
                    0.0 < 29.964380546086492,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028271249538636134,
                ),
                max_time: PositiveF64(
                    0.0 < 26.676072835763506,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029288855507569878,
                ),
                max_time: PositiveF64(
                    0.0 < 28.56801094743314,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003004873885548154,
                ),
                max_time: PositiveF64(
                    0.0 < 31.02744139150235,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030095969227872388,
                ),
                max_time: PositiveF64(
                    0.0 < 27.958683844892263,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030260184399888423,
                ),
                max_time: PositiveF64(
                    0.0 < 27.644031666528864,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030987939156346123,
                ),
                max_time: PositiveF64(
                    0.0 < 32.123428577000496,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031346595602554927,
                ),
                max_time: PositiveF64(
                    0.0 < 28.755491816279726,
                ),
                length: 587070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003183591773536776,
                ),
                max_time: PositiveF64(
                    0.0 < 27.131853973510584,
                ),
                length: 581305,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031875694284089207,
                ),
                max_time: PositiveF64(
                    0.0 < 25.989861787654203,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032943646002814297,
                ),
                max_time: PositiveF64(
                    0.0 < 25.76411008826956,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003465906427690957,
                ),
                max_time: PositiveF64(
                    0.0 < 30.00293122005713,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003477559654685436,
                ),
                max_time: PositiveF64(
                    0.0 < 28.699883983997694,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003584408597434585,
                ),
                max_time: PositiveF64(
                    0.0 < 25.263689772736537,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003652425257516523,
                ),
                max_time: PositiveF64(
                    0.0 < 27.653736195279343,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003659721442006436,
                ),
                max_time: PositiveF64(
                    0.0 < 31.084396153795055,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036838979125541904,
                ),
                max_time: PositiveF64(
                    0.0 < 25.96945591629587,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000037042162220890518,
                ),
                max_time: PositiveF64(
                    0.0 < 26.16447558524871,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003787605053484633,
                ),
                max_time: PositiveF64(
                    0.0 < 28.274025021578986,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000038349899550427224,
                ),
                max_time: PositiveF64(
                    0.0 < 26.641631310414166,
                ),
                length: 631643,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003921843668708291,
                ),
                max_time: PositiveF64(
                    0.0 < 30.124357573458184,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004023738178204894,
                ),
                max_time: PositiveF64(
                    0.0 < 23.684894617896745,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000042947554590444526,
                ),
                max_time: PositiveF64(
                    0.0 < 31.858750385390266,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004312459127298052,
                ),
                max_time: PositiveF64(
                    0.0 < 32.750568749266144,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004317555768185155,
                ),
                max_time: PositiveF64(
                    0.0 < 27.453817308780067,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004732439956023349,
                ),
                max_time: PositiveF64(
                    0.0 < 26.86477179493092,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004824053694285624,
                ),
                max_time: PositiveF64(
                    0.0 < 31.124874204469364,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004937083291356448,
                ),
                max_time: PositiveF64(
                    0.0 < 29.578938507687912,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004985756212882997,
                ),
                max_time: PositiveF64(
                    0.0 < 31.176460388550304,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000052272524947438725,
                ),
                max_time: PositiveF64(
                    0.0 < 31.89402950555285,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005687469706028292,
                ),
                max_time: PositiveF64(
                    0.0 < 29.52186382038075,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000057853126281259826,
                ),
                max_time: PositiveF64(
                    0.0 < 30.426000170113614,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006118900570950547,
                ),
                max_time: PositiveF64(
                    0.0 < 33.31490859375605,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006437130007919123,
                ),
                max_time: PositiveF64(
                    0.0 < 26.57458246460738,
                ),
                length: 587984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007490886505256977,
                ),
                max_time: PositiveF64(
                    0.0 < 27.347931804186054,
                ),
                length: 573711,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000954661553254077,
                ),
                max_time: PositiveF64(
                    0.0 < 27.597874752085016,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010883717155019124,
                ),
                max_time: PositiveF64(
                    0.0 < 28.73606592074406,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011145059005679414,
                ),
                max_time: PositiveF64(
                    0.0 < 28.89465953820317,
                ),
                length: 1000000,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.135µs
 - execution: 34.15532376s
 - cleanup: 42.288µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        32            16
 Used       :        20 (peak)  14.75 (ave)

============================================
