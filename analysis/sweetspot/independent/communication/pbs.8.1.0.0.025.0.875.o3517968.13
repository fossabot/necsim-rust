# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 7408950802048783851,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517968[13].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 8 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-131-5-12.cx1.hpc.ic.ac.uk:8
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 10:47:33 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 7408950802048783851,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517968[13].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-131-5-12.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 7408950802048783851,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.875 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517968[13].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffecd21aac8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffecd21aae8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517968[13].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 8 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 9.309576229s
 - execution: 10.534309194s
 - cleanup: 35.197684ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 37.71562536169327 after 105304286 steps.

# mpiexec: finished at Thu 13 May 10:47:55 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000002941934085232134,
                ),
                max_time: PositiveF64(
                    0.0 < 27.080704863291057,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007228283832594329,
                ),
                max_time: PositiveF64(
                    0.0 < 28.518534557654753,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011626949736331937,
                ),
                max_time: PositiveF64(
                    0.0 < 27.93299494732352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000012455489084572946,
                ),
                max_time: PositiveF64(
                    0.0 < 35.145133267165,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000023502723878188192,
                ),
                max_time: PositiveF64(
                    0.0 < 29.604942246915872,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026399598673787494,
                ),
                max_time: PositiveF64(
                    0.0 < 32.61962912167333,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026691136439938035,
                ),
                max_time: PositiveF64(
                    0.0 < 26.05799348755674,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000028257583051249924,
                ),
                max_time: PositiveF64(
                    0.0 < 25.898915180991633,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000284714962717203,
                ),
                max_time: PositiveF64(
                    0.0 < 25.95814283287062,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000033174541946845437,
                ),
                max_time: PositiveF64(
                    0.0 < 31.602414489803206,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003354269714761493,
                ),
                max_time: PositiveF64(
                    0.0 < 26.202304998028275,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003777340931709894,
                ),
                max_time: PositiveF64(
                    0.0 < 35.51928692116916,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000038978462096883604,
                ),
                max_time: PositiveF64(
                    0.0 < 30.707993134620956,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004038614723200773,
                ),
                max_time: PositiveF64(
                    0.0 < 28.486143941978387,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000042807287714552444,
                ),
                max_time: PositiveF64(
                    0.0 < 32.260169588661824,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004398193920174265,
                ),
                max_time: PositiveF64(
                    0.0 < 28.015578858124396,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000044848962987842356,
                ),
                max_time: PositiveF64(
                    0.0 < 33.56250421452145,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000045270499987593027,
                ),
                max_time: PositiveF64(
                    0.0 < 27.63993256675115,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000045637543771848144,
                ),
                max_time: PositiveF64(
                    0.0 < 26.28087987233295,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004639118336702275,
                ),
                max_time: PositiveF64(
                    0.0 < 37.71562536169327,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004848193160822412,
                ),
                max_time: PositiveF64(
                    0.0 < 31.14314212009039,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004961887167809209,
                ),
                max_time: PositiveF64(
                    0.0 < 27.287149170883097,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005191069715748675,
                ),
                max_time: PositiveF64(
                    0.0 < 30.458628971054374,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005200936553650948,
                ),
                max_time: PositiveF64(
                    0.0 < 27.15005262595779,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005285568882573699,
                ),
                max_time: PositiveF64(
                    0.0 < 29.037135901116564,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000556610650626066,
                ),
                max_time: PositiveF64(
                    0.0 < 27.13616894450192,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000596384282514073,
                ),
                max_time: PositiveF64(
                    0.0 < 27.70894666103452,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006150546930094869,
                ),
                max_time: PositiveF64(
                    0.0 < 33.44285102146066,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006221898177227736,
                ),
                max_time: PositiveF64(
                    0.0 < 30.644864847976166,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006296076365819303,
                ),
                max_time: PositiveF64(
                    0.0 < 26.92689996066243,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006474135300083006,
                ),
                max_time: PositiveF64(
                    0.0 < 31.0395228054214,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006731862556286217,
                ),
                max_time: PositiveF64(
                    0.0 < 27.69080407991042,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006928178594711731,
                ),
                max_time: PositiveF64(
                    0.0 < 30.459691689453404,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007099638471563807,
                ),
                max_time: PositiveF64(
                    0.0 < 28.886375690195973,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007387931508229251,
                ),
                max_time: PositiveF64(
                    0.0 < 25.10721429157487,
                ),
                length: 495488,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000761044409713918,
                ),
                max_time: PositiveF64(
                    0.0 < 27.81989424616715,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000766505502403092,
                ),
                max_time: PositiveF64(
                    0.0 < 26.675231881057698,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007875495758313811,
                ),
                max_time: PositiveF64(
                    0.0 < 28.58938660736218,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008138953672132132,
                ),
                max_time: PositiveF64(
                    0.0 < 31.01507780632611,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008160830722303558,
                ),
                max_time: PositiveF64(
                    0.0 < 28.94261482044575,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008251030872430398,
                ),
                max_time: PositiveF64(
                    0.0 < 28.242179623292753,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009235018136322104,
                ),
                max_time: PositiveF64(
                    0.0 < 26.177025773867243,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009343496673586138,
                ),
                max_time: PositiveF64(
                    0.0 < 28.911866506609126,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001019174864225203,
                ),
                max_time: PositiveF64(
                    0.0 < 33.26928639643305,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010588448626225322,
                ),
                max_time: PositiveF64(
                    0.0 < 30.65667527349906,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010676852466029452,
                ),
                max_time: PositiveF64(
                    0.0 < 28.035436080626646,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011190939616656514,
                ),
                max_time: PositiveF64(
                    0.0 < 31.46969182525718,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011258791765555998,
                ),
                max_time: PositiveF64(
                    0.0 < 29.731839787957902,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011714055483946773,
                ),
                max_time: PositiveF64(
                    0.0 < 28.934241093834984,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011776753933157025,
                ),
                max_time: PositiveF64(
                    0.0 < 26.1691012456317,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012021658990502004,
                ),
                max_time: PositiveF64(
                    0.0 < 26.66784150981853,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000121995357676985,
                ),
                max_time: PositiveF64(
                    0.0 < 26.45086310299003,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012213690012141676,
                ),
                max_time: PositiveF64(
                    0.0 < 27.668414402456953,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012424652359732669,
                ),
                max_time: PositiveF64(
                    0.0 < 32.99961696920458,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001262877480090463,
                ),
                max_time: PositiveF64(
                    0.0 < 26.505508436013045,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012638300408984726,
                ),
                max_time: PositiveF64(
                    0.0 < 27.548366907866505,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012863363343940115,
                ),
                max_time: PositiveF64(
                    0.0 < 26.887415513026816,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012874716040500722,
                ),
                max_time: PositiveF64(
                    0.0 < 26.030769310225462,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013518842142956622,
                ),
                max_time: PositiveF64(
                    0.0 < 36.83150651775244,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013924158923095398,
                ),
                max_time: PositiveF64(
                    0.0 < 26.996595540233294,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001407406726439131,
                ),
                max_time: PositiveF64(
                    0.0 < 26.64620982346812,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014199722728203135,
                ),
                max_time: PositiveF64(
                    0.0 < 27.13917061965671,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014508264328805254,
                ),
                max_time: PositiveF64(
                    0.0 < 25.52731434981231,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015252948312727277,
                ),
                max_time: PositiveF64(
                    0.0 < 31.482463932377996,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015779731449283574,
                ),
                max_time: PositiveF64(
                    0.0 < 26.756585307944185,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017501030163957765,
                ),
                max_time: PositiveF64(
                    0.0 < 32.91483941842071,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001759200442263964,
                ),
                max_time: PositiveF64(
                    0.0 < 29.6199362606206,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001777797504765033,
                ),
                max_time: PositiveF64(
                    0.0 < 31.452978840267424,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018016794592345953,
                ),
                max_time: PositiveF64(
                    0.0 < 23.28655237236074,
                ),
                length: 135444,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018664173193072564,
                ),
                max_time: PositiveF64(
                    0.0 < 34.22690570860774,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018859494119172204,
                ),
                max_time: PositiveF64(
                    0.0 < 31.077452007848677,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018992944025852943,
                ),
                max_time: PositiveF64(
                    0.0 < 26.4778305527355,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019154897434869866,
                ),
                max_time: PositiveF64(
                    0.0 < 29.786350242789318,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001945833718874912,
                ),
                max_time: PositiveF64(
                    0.0 < 27.38690876962203,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021280680351232206,
                ),
                max_time: PositiveF64(
                    0.0 < 29.325179309811823,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002152991438186813,
                ),
                max_time: PositiveF64(
                    0.0 < 27.232182862959338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021696939400683846,
                ),
                max_time: PositiveF64(
                    0.0 < 31.789641810282333,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002190976906291109,
                ),
                max_time: PositiveF64(
                    0.0 < 26.48847372825314,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002210007582492679,
                ),
                max_time: PositiveF64(
                    0.0 < 28.229802092709587,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023049477701486687,
                ),
                max_time: PositiveF64(
                    0.0 < 26.321555957979918,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023189885395291654,
                ),
                max_time: PositiveF64(
                    0.0 < 26.902989169995017,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002357841859534915,
                ),
                max_time: PositiveF64(
                    0.0 < 28.831518637510154,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002471888988220261,
                ),
                max_time: PositiveF64(
                    0.0 < 30.0410926732809,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026163024349767916,
                ),
                max_time: PositiveF64(
                    0.0 < 24.19964706182396,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027439633679127162,
                ),
                max_time: PositiveF64(
                    0.0 < 25.599945459355162,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027493554574653523,
                ),
                max_time: PositiveF64(
                    0.0 < 28.719158313765618,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029214956240308787,
                ),
                max_time: PositiveF64(
                    0.0 < 28.71099452462805,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030054886038244355,
                ),
                max_time: PositiveF64(
                    0.0 < 32.46886440809519,
                ),
                length: 971326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030821354940480106,
                ),
                max_time: PositiveF64(
                    0.0 < 28.029363994806126,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031606025688302175,
                ),
                max_time: PositiveF64(
                    0.0 < 27.87350459673589,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032023747575937733,
                ),
                max_time: PositiveF64(
                    0.0 < 27.421475850511374,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035926765445948305,
                ),
                max_time: PositiveF64(
                    0.0 < 30.124589285068602,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000037215875356433337,
                ),
                max_time: PositiveF64(
                    0.0 < 26.37214325076559,
                ),
                length: 170533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000038074255342968044,
                ),
                max_time: PositiveF64(
                    0.0 < 26.30471338220171,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003858655763244734,
                ),
                max_time: PositiveF64(
                    0.0 < 32.247247168945194,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003878272289703499,
                ),
                max_time: PositiveF64(
                    0.0 < 30.57124617120511,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003981066731273408,
                ),
                max_time: PositiveF64(
                    0.0 < 27.834810151293837,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004277005570263448,
                ),
                max_time: PositiveF64(
                    0.0 < 28.49335023653987,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004345164946462088,
                ),
                max_time: PositiveF64(
                    0.0 < 33.02469403785268,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004606859389244544,
                ),
                max_time: PositiveF64(
                    0.0 < 30.458807478285188,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004650055275556841,
                ),
                max_time: PositiveF64(
                    0.0 < 27.74716258695317,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004965631857922759,
                ),
                max_time: PositiveF64(
                    0.0 < 29.809919543244767,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005156388497573605,
                ),
                max_time: PositiveF64(
                    0.0 < 28.808618786447944,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000578826410885247,
                ),
                max_time: PositiveF64(
                    0.0 < 31.273547193859052,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006221001348782895,
                ),
                max_time: PositiveF64(
                    0.0 < 29.645814403967947,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006279597743741316,
                ),
                max_time: PositiveF64(
                    0.0 < 23.54113598096214,
                ),
                length: 125908,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006647972813356162,
                ),
                max_time: PositiveF64(
                    0.0 < 28.300401686166023,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008424812245333424,
                ),
                max_time: PositiveF64(
                    0.0 < 29.518888291045826,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014199994162744645,
                ),
                max_time: PositiveF64(
                    0.0 < 26.903833534101523,
                ),
                length: 177248,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001604860601051028,
                ),
                max_time: PositiveF64(
                    0.0 < 22.37124064727542,
                ),
                length: 172355,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000383699648029423,
                ),
                max_time: PositiveF64(
                    0.0 < 22.05312610618257,
                ),
                length: 55984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 687ns
 - execution: 31.170579171s
 - cleanup: 34.48µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             8
 Used       :        12 (peak)   7.60 (ave)

============================================
