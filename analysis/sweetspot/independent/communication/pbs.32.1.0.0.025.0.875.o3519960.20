# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 13960231717462574851,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519960[20].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-104-13-4.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:22:07 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 13960231717462574851,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519960[20].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-104-13-4.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 13960231717462574851,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.875 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519960[20].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc9ede7e38; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc9ede7e58; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519960[20].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 12.632220831s
 - execution: 5.704438977s
 - cleanup: 60.042412ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 36.925566301964324 after 105304286 steps.

# mpiexec: finished at Thu 13 May 18:22:29 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000005799294655606246,
                ),
                max_time: PositiveF64(
                    0.0 < 30.714768524398764,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000015216513327143133,
                ),
                max_time: PositiveF64(
                    0.0 < 32.86382838309639,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007134218354964972,
                ),
                max_time: PositiveF64(
                    0.0 < 27.9007898662828,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007772061660915597,
                ),
                max_time: PositiveF64(
                    0.0 < 24.347010496165137,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002262404497077597,
                ),
                max_time: PositiveF64(
                    0.0 < 25.08066776080551,
                ),
                length: 363129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000022705949093149158,
                ),
                max_time: PositiveF64(
                    0.0 < 27.241744612955515,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000024953836830210463,
                ),
                max_time: PositiveF64(
                    0.0 < 25.20247745368846,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002658648501352445,
                ),
                max_time: PositiveF64(
                    0.0 < 29.676496959461602,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000027884334952155143,
                ),
                max_time: PositiveF64(
                    0.0 < 26.223668896618516,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002792561049069775,
                ),
                max_time: PositiveF64(
                    0.0 < 33.53694198964548,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000041961319668937236,
                ),
                max_time: PositiveF64(
                    0.0 < 28.424551904248894,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004261702146735047,
                ),
                max_time: PositiveF64(
                    0.0 < 27.941543862116603,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000045100342155324213,
                ),
                max_time: PositiveF64(
                    0.0 < 26.95705919229381,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004973044587242015,
                ),
                max_time: PositiveF64(
                    0.0 < 28.682590838901547,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005051016452317647,
                ),
                max_time: PositiveF64(
                    0.0 < 30.07165687661173,
                ),
                length: 224964,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005318366935735952,
                ),
                max_time: PositiveF64(
                    0.0 < 25.829033726249705,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005462817287416044,
                ),
                max_time: PositiveF64(
                    0.0 < 29.16235041654872,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005474551165174368,
                ),
                max_time: PositiveF64(
                    0.0 < 27.20754708433898,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005521948476250316,
                ),
                max_time: PositiveF64(
                    0.0 < 29.035205391529608,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005594617175086469,
                ),
                max_time: PositiveF64(
                    0.0 < 33.15218466341916,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006226192841851663,
                ),
                max_time: PositiveF64(
                    0.0 < 29.343260018850202,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006511162628508593,
                ),
                max_time: PositiveF64(
                    0.0 < 27.0538988725291,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007344307834111774,
                ),
                max_time: PositiveF64(
                    0.0 < 26.74068729916467,
                ),
                length: 472100,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007507573768217313,
                ),
                max_time: PositiveF64(
                    0.0 < 30.80731561162262,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000768017945351751,
                ),
                max_time: PositiveF64(
                    0.0 < 23.99382888463519,
                ),
                length: 300125,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007842994007023485,
                ),
                max_time: PositiveF64(
                    0.0 < 25.33882711532185,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007971074736379258,
                ),
                max_time: PositiveF64(
                    0.0 < 29.31559160963888,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008118125832679013,
                ),
                max_time: PositiveF64(
                    0.0 < 27.660352569566626,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008349311206301557,
                ),
                max_time: PositiveF64(
                    0.0 < 28.46159744195845,
                ),
                length: 281639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008374212934203484,
                ),
                max_time: PositiveF64(
                    0.0 < 28.374201716623052,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000839653349349323,
                ),
                max_time: PositiveF64(
                    0.0 < 27.286713427690398,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008603058693212873,
                ),
                max_time: PositiveF64(
                    0.0 < 28.13937079215984,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000866127895515767,
                ),
                max_time: PositiveF64(
                    0.0 < 26.46422267689256,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008667331236056341,
                ),
                max_time: PositiveF64(
                    0.0 < 27.001341137026273,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008979851739976397,
                ),
                max_time: PositiveF64(
                    0.0 < 25.686463063628047,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000098150985450296,
                ),
                max_time: PositiveF64(
                    0.0 < 28.21159782665399,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010343037476490125,
                ),
                max_time: PositiveF64(
                    0.0 < 31.682706054228635,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011143348926934138,
                ),
                max_time: PositiveF64(
                    0.0 < 28.57514673463733,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001164705376865971,
                ),
                max_time: PositiveF64(
                    0.0 < 26.19129700664702,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012103709354227554,
                ),
                max_time: PositiveF64(
                    0.0 < 33.77531657955971,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012275126309857498,
                ),
                max_time: PositiveF64(
                    0.0 < 29.9036767191882,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012291275527931411,
                ),
                max_time: PositiveF64(
                    0.0 < 26.967492395184195,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001236093425949214,
                ),
                max_time: PositiveF64(
                    0.0 < 27.378816201619898,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013103897111843565,
                ),
                max_time: PositiveF64(
                    0.0 < 26.23937997373976,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013189565392646152,
                ),
                max_time: PositiveF64(
                    0.0 < 30.08898546797695,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013222386804900843,
                ),
                max_time: PositiveF64(
                    0.0 < 31.4557532049422,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013514987950991042,
                ),
                max_time: PositiveF64(
                    0.0 < 26.779746092520263,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013610869672997516,
                ),
                max_time: PositiveF64(
                    0.0 < 27.30165692329527,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013846846388942957,
                ),
                max_time: PositiveF64(
                    0.0 < 30.44284783690827,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001390157317593399,
                ),
                max_time: PositiveF64(
                    0.0 < 25.78434844706154,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013927236491850792,
                ),
                max_time: PositiveF64(
                    0.0 < 27.890709119711566,
                ),
                length: 197981,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014233043735267792,
                ),
                max_time: PositiveF64(
                    0.0 < 26.46714766225938,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014362489147989876,
                ),
                max_time: PositiveF64(
                    0.0 < 28.808523392992058,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014575283574513875,
                ),
                max_time: PositiveF64(
                    0.0 < 31.000030250301368,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014700723788285686,
                ),
                max_time: PositiveF64(
                    0.0 < 27.443266956217723,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014732356842794836,
                ),
                max_time: PositiveF64(
                    0.0 < 24.559633314592002,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000148005265848683,
                ),
                max_time: PositiveF64(
                    0.0 < 35.29497142758885,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015201909561723959,
                ),
                max_time: PositiveF64(
                    0.0 < 29.9536223405401,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015457799401596972,
                ),
                max_time: PositiveF64(
                    0.0 < 24.437128288355247,
                ),
                length: 369800,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015925020821483393,
                ),
                max_time: PositiveF64(
                    0.0 < 25.596006241333505,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016220158147173258,
                ),
                max_time: PositiveF64(
                    0.0 < 30.48061217263635,
                ),
                length: 287076,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016353046169981234,
                ),
                max_time: PositiveF64(
                    0.0 < 30.883757839584042,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017102725935469465,
                ),
                max_time: PositiveF64(
                    0.0 < 36.925566301964324,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000179717205756047,
                ),
                max_time: PositiveF64(
                    0.0 < 24.219351562009805,
                ),
                length: 299770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001804673085692432,
                ),
                max_time: PositiveF64(
                    0.0 < 28.1607305835184,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018662073966724257,
                ),
                max_time: PositiveF64(
                    0.0 < 25.906441505642253,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018791232134218738,
                ),
                max_time: PositiveF64(
                    0.0 < 28.742178262809183,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018936183376894178,
                ),
                max_time: PositiveF64(
                    0.0 < 28.073045509442593,
                ),
                length: 616326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019757271710330038,
                ),
                max_time: PositiveF64(
                    0.0 < 29.18314270472894,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020496997699126496,
                ),
                max_time: PositiveF64(
                    0.0 < 27.16071622933263,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000206783387857179,
                ),
                max_time: PositiveF64(
                    0.0 < 24.325903682379373,
                ),
                length: 295925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002093445354844903,
                ),
                max_time: PositiveF64(
                    0.0 < 29.37275083060978,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020989025803497263,
                ),
                max_time: PositiveF64(
                    0.0 < 27.627227518221687,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021173074199465347,
                ),
                max_time: PositiveF64(
                    0.0 < 24.54727772686236,
                ),
                length: 320818,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002124453595264697,
                ),
                max_time: PositiveF64(
                    0.0 < 30.674911934562363,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022066577076707006,
                ),
                max_time: PositiveF64(
                    0.0 < 29.40987283666741,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002261982499085491,
                ),
                max_time: PositiveF64(
                    0.0 < 28.53847055901047,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023418673456010453,
                ),
                max_time: PositiveF64(
                    0.0 < 25.439568150233157,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002392052353139551,
                ),
                max_time: PositiveF64(
                    0.0 < 31.226863617207144,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024145173002643183,
                ),
                max_time: PositiveF64(
                    0.0 < 30.01335941782198,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024403593132382717,
                ),
                max_time: PositiveF64(
                    0.0 < 30.32185709068178,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002446410775069907,
                ),
                max_time: PositiveF64(
                    0.0 < 29.585496381918656,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025144012760769385,
                ),
                max_time: PositiveF64(
                    0.0 < 27.007166531362053,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002548393253365422,
                ),
                max_time: PositiveF64(
                    0.0 < 28.054956907947897,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002566639048517949,
                ),
                max_time: PositiveF64(
                    0.0 < 25.90648060264876,
                ),
                length: 281180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025948053805624482,
                ),
                max_time: PositiveF64(
                    0.0 < 24.331934121196394,
                ),
                length: 286977,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026066229633081583,
                ),
                max_time: PositiveF64(
                    0.0 < 26.67682471641313,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002645081488006351,
                ),
                max_time: PositiveF64(
                    0.0 < 26.735619383723748,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002653157830379005,
                ),
                max_time: PositiveF64(
                    0.0 < 30.914153031562876,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027392449858387735,
                ),
                max_time: PositiveF64(
                    0.0 < 26.281440276381304,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002915799353075954,
                ),
                max_time: PositiveF64(
                    0.0 < 24.964604172850088,
                ),
                length: 220334,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029444332069750168,
                ),
                max_time: PositiveF64(
                    0.0 < 29.770975441770545,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002951298104236777,
                ),
                max_time: PositiveF64(
                    0.0 < 27.251377352782722,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029823642758164404,
                ),
                max_time: PositiveF64(
                    0.0 < 26.25222766337638,
                ),
                length: 293394,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003001843495720191,
                ),
                max_time: PositiveF64(
                    0.0 < 32.656165529149696,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003137807969288975,
                ),
                max_time: PositiveF64(
                    0.0 < 26.309965259670513,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031533660874161207,
                ),
                max_time: PositiveF64(
                    0.0 < 32.5281101744821,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003164680192346836,
                ),
                max_time: PositiveF64(
                    0.0 < 25.268445247545724,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032721028220272785,
                ),
                max_time: PositiveF64(
                    0.0 < 26.32907329704039,
                ),
                length: 433662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000328086299711261,
                ),
                max_time: PositiveF64(
                    0.0 < 34.549176877896095,
                ),
                length: 311358,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003284326763053347,
                ),
                max_time: PositiveF64(
                    0.0 < 30.171697684821215,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000329109202806821,
                ),
                max_time: PositiveF64(
                    0.0 < 24.635934607807485,
                ),
                length: 295354,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003323345118544374,
                ),
                max_time: PositiveF64(
                    0.0 < 25.277335728072273,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033335681765001013,
                ),
                max_time: PositiveF64(
                    0.0 < 27.068468060056063,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033886323966281218,
                ),
                max_time: PositiveF64(
                    0.0 < 28.713872937337428,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003693860812226113,
                ),
                max_time: PositiveF64(
                    0.0 < 25.849945145777493,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000408961505521388,
                ),
                max_time: PositiveF64(
                    0.0 < 28.32625576686645,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004350081534709727,
                ),
                max_time: PositiveF64(
                    0.0 < 23.830116252865515,
                ),
                length: 273284,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004629031537251027,
                ),
                max_time: PositiveF64(
                    0.0 < 31.99525406772176,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000465108932007352,
                ),
                max_time: PositiveF64(
                    0.0 < 28.734019389992174,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004666944520004268,
                ),
                max_time: PositiveF64(
                    0.0 < 27.384355321889124,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004718486371346753,
                ),
                max_time: PositiveF64(
                    0.0 < 24.368021946964365,
                ),
                length: 292059,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000048013786280165505,
                ),
                max_time: PositiveF64(
                    0.0 < 28.031576631564505,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004914403702871439,
                ),
                max_time: PositiveF64(
                    0.0 < 23.883361640863203,
                ),
                length: 297857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005446248468043979,
                ),
                max_time: PositiveF64(
                    0.0 < 27.56131170275397,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005604333327691169,
                ),
                max_time: PositiveF64(
                    0.0 < 27.16429170951153,
                ),
                length: 292119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005907839741303711,
                ),
                max_time: PositiveF64(
                    0.0 < 30.873694878502626,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006040286137654061,
                ),
                max_time: PositiveF64(
                    0.0 < 27.9945647674427,
                ),
                length: 262173,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007242372661586671,
                ),
                max_time: PositiveF64(
                    0.0 < 26.830164771280348,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008037332946686515,
                ),
                max_time: PositiveF64(
                    0.0 < 26.147087282490197,
                ),
                length: 297274,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000938143291384641,
                ),
                max_time: PositiveF64(
                    0.0 < 26.971979532219525,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010637884785280605,
                ),
                max_time: PositiveF64(
                    0.0 < 27.764462937294656,
                ),
                length: 210432,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001181733778249372,
                ),
                max_time: PositiveF64(
                    0.0 < 25.640157408466543,
                ),
                length: 290024,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000017460581893113947,
                ),
                max_time: PositiveF64(
                    0.0 < 29.675126637827894,
                ),
                length: 292252,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000024134160230837587,
                ),
                max_time: PositiveF64(
                    0.0 < 27.889302952212873,
                ),
                length: 217270,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000026746546179512443,
                ),
                max_time: PositiveF64(
                    0.0 < 26.57878436909451,
                ),
                length: 280317,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000034219131548329784,
                ),
                max_time: PositiveF64(
                    0.0 < 19.784546366665005,
                ),
                length: 44329,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00004912032335574468,
                ),
                max_time: PositiveF64(
                    0.0 < 23.343776534612125,
                ),
                length: 102984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 888ns
 - execution: 31.356184514s
 - cleanup: 42.621µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        37 (peak)  28.89 (ave)

============================================
