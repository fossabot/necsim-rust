# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 17712682617052006022,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3520400[10].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-141-6-2.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 19:05:49 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 0.01,
        sample: 0.0025,
        seed: 17712682617052006022,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3520400[10].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-141-6-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.01 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.0025 <= 1.0,
        ),
        seed: 17712682617052006022,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.875 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3520400[10].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff0501f648; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff0501f668; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3520400[10].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 5.351371596s
 - execution: 20.458070044s
 - cleanup: 6.962284ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 3040.2269023080107 after 982692410 steps.

# mpiexec: finished at Thu 13 May 19:06:21 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005280463935275481,
                ),
                max_time: PositiveF64(
                    0.0 < 2418.4688291216003,
                ),
                length: 309428,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00008328306307703315,
                ),
                max_time: PositiveF64(
                    0.0 < 2472.808992983332,
                ),
                length: 318089,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00018271152143090053,
                ),
                max_time: PositiveF64(
                    0.0 < 2449.0952310919006,
                ),
                length: 304243,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00021139130937236628,
                ),
                max_time: PositiveF64(
                    0.0 < 2366.5884820118913,
                ),
                length: 282924,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00022515640008630156,
                ),
                max_time: PositiveF64(
                    0.0 < 2437.293508586111,
                ),
                length: 322392,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0002519763231109695,
                ),
                max_time: PositiveF64(
                    0.0 < 2607.23086340137,
                ),
                length: 316480,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0002605891554416373,
                ),
                max_time: PositiveF64(
                    0.0 < 2612.8234520107326,
                ),
                length: 294189,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000261871423808957,
                ),
                max_time: PositiveF64(
                    0.0 < 2397.6367684788697,
                ),
                length: 304388,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00032742330051072077,
                ),
                max_time: PositiveF64(
                    0.0 < 2617.674427926467,
                ),
                length: 301105,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0003748551873128392,
                ),
                max_time: PositiveF64(
                    0.0 < 2678.525721239841,
                ),
                length: 362417,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00038744512681071486,
                ),
                max_time: PositiveF64(
                    0.0 < 2256.5118473154566,
                ),
                length: 325243,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0004995675721866655,
                ),
                max_time: PositiveF64(
                    0.0 < 2375.1802224305598,
                ),
                length: 294263,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0005007438311288581,
                ),
                max_time: PositiveF64(
                    0.0 < 2327.0814625149537,
                ),
                length: 308001,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006018262656126705,
                ),
                max_time: PositiveF64(
                    0.0 < 2522.6777821455144,
                ),
                length: 310184,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006223642345667968,
                ),
                max_time: PositiveF64(
                    0.0 < 2401.979281647713,
                ),
                length: 303891,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006320748907470697,
                ),
                max_time: PositiveF64(
                    0.0 < 2369.39054920661,
                ),
                length: 303121,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006383654646427428,
                ),
                max_time: PositiveF64(
                    0.0 < 2521.5204117018166,
                ),
                length: 314351,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006627935399519669,
                ),
                max_time: PositiveF64(
                    0.0 < 2469.1738555797724,
                ),
                length: 304061,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0006856298692040075,
                ),
                max_time: PositiveF64(
                    0.0 < 3040.2269023080107,
                ),
                length: 303954,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007581560833486156,
                ),
                max_time: PositiveF64(
                    0.0 < 2561.7597997735356,
                ),
                length: 309272,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007658102185467697,
                ),
                max_time: PositiveF64(
                    0.0 < 2359.6483568408094,
                ),
                length: 318088,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0007905424823495544,
                ),
                max_time: PositiveF64(
                    0.0 < 2819.798981085595,
                ),
                length: 281556,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009115800441766853,
                ),
                max_time: PositiveF64(
                    0.0 < 2366.5019303347012,
                ),
                length: 329116,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0009372424316175798,
                ),
                max_time: PositiveF64(
                    0.0 < 2191.979621960484,
                ),
                length: 315197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000944341794041903,
                ),
                max_time: PositiveF64(
                    0.0 < 2586.964929894769,
                ),
                length: 307791,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0010383262323343523,
                ),
                max_time: PositiveF64(
                    0.0 < 2520.61080883362,
                ),
                length: 301238,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0012548537887541178,
                ),
                max_time: PositiveF64(
                    0.0 < 2660.2837275280517,
                ),
                length: 290598,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0013087668391617568,
                ),
                max_time: PositiveF64(
                    0.0 < 2550.546311947549,
                ),
                length: 305117,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0013576268703321959,
                ),
                max_time: PositiveF64(
                    0.0 < 2317.4599641522013,
                ),
                length: 288048,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0014089749480000746,
                ),
                max_time: PositiveF64(
                    0.0 < 2284.8551569973815,
                ),
                length: 298640,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.001560711333973841,
                ),
                max_time: PositiveF64(
                    0.0 < 2855.628535549656,
                ),
                length: 311246,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0020303015774475464,
                ),
                max_time: PositiveF64(
                    0.0 < 2640.2447686285172,
                ),
                length: 295686,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 921ns
 - execution: 2.295184481s
 - cleanup: 38.573µs
INFO  The simulation resulted in a biodiversity of 9338869 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        35 (peak)  30.06 (ave)

============================================
