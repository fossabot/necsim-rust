# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: RDMA network found -- using rdma+shared memory (FI_VERBS_IFACE=ib0)
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 13725168382859465762,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517616[11].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 8 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-134-4-6.cx1.hpc.ic.ac.uk:8
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 10:06:47 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 13725168382859465762,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517616[11].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-134-4-6.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 13725168382859465762,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.5 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517616[11].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc94106978; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc94106998; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517616[11].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 8 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 9.922885377s
 - execution: 11.669951526s
 - cleanup: 41.518696ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 35.794963896082336 after 105304286 steps.

# mpiexec: finished at Thu 13 May 10:07:13 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000011834344615380132,
                ),
                max_time: PositiveF64(
                    0.0 < 27.246544160555842,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006084762638192132,
                ),
                max_time: PositiveF64(
                    0.0 < 30.66991302948187,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006511637951067684,
                ),
                max_time: PositiveF64(
                    0.0 < 31.197120870819624,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009608127876647998,
                ),
                max_time: PositiveF64(
                    0.0 < 28.186148779413,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011205548100523544,
                ),
                max_time: PositiveF64(
                    0.0 < 28.41479261827228,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011773154312555434,
                ),
                max_time: PositiveF64(
                    0.0 < 27.820195981705744,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000014942422660313426,
                ),
                max_time: PositiveF64(
                    0.0 < 28.462052817315527,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001593174525638119,
                ),
                max_time: PositiveF64(
                    0.0 < 33.10515224781983,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000020005006429180128,
                ),
                max_time: PositiveF64(
                    0.0 < 30.371814787254777,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021776621506042204,
                ),
                max_time: PositiveF64(
                    0.0 < 28.384324770438752,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026171182665457593,
                ),
                max_time: PositiveF64(
                    0.0 < 29.75579399441635,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004008599252536271,
                ),
                max_time: PositiveF64(
                    0.0 < 26.330824491241444,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000042239909403551934,
                ),
                max_time: PositiveF64(
                    0.0 < 27.49147477818984,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004341100487414984,
                ),
                max_time: PositiveF64(
                    0.0 < 26.95260718133746,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004577394260851797,
                ),
                max_time: PositiveF64(
                    0.0 < 25.59358096260045,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000047051695872823984,
                ),
                max_time: PositiveF64(
                    0.0 < 27.29615697386039,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005049165849313475,
                ),
                max_time: PositiveF64(
                    0.0 < 30.53991927550519,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000521395212838005,
                ),
                max_time: PositiveF64(
                    0.0 < 27.11090858749522,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005263796215571048,
                ),
                max_time: PositiveF64(
                    0.0 < 35.794963896082336,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005427686605719018,
                ),
                max_time: PositiveF64(
                    0.0 < 27.10607677313737,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005510961445520657,
                ),
                max_time: PositiveF64(
                    0.0 < 29.849825400051756,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005585406598340725,
                ),
                max_time: PositiveF64(
                    0.0 < 33.782476733452654,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005944529288259837,
                ),
                max_time: PositiveF64(
                    0.0 < 30.26742114162166,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006016311188128398,
                ),
                max_time: PositiveF64(
                    0.0 < 29.179707069461895,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006153696793798069,
                ),
                max_time: PositiveF64(
                    0.0 < 31.577140859366484,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006216912301626465,
                ),
                max_time: PositiveF64(
                    0.0 < 29.738435918878523,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006479738146047964,
                ),
                max_time: PositiveF64(
                    0.0 < 26.634541300427315,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006594703882978337,
                ),
                max_time: PositiveF64(
                    0.0 < 27.36926111591497,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006678533226445182,
                ),
                max_time: PositiveF64(
                    0.0 < 25.485634448368888,
                ),
                length: 135444,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006710966718448397,
                ),
                max_time: PositiveF64(
                    0.0 < 25.435137488736355,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006718104408887093,
                ),
                max_time: PositiveF64(
                    0.0 < 28.124329636253982,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000697708371355521,
                ),
                max_time: PositiveF64(
                    0.0 < 26.619692121505715,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006993170853508701,
                ),
                max_time: PositiveF64(
                    0.0 < 33.39365420444625,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000700189372870863,
                ),
                max_time: PositiveF64(
                    0.0 < 30.727300398506017,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007229989706925011,
                ),
                max_time: PositiveF64(
                    0.0 < 31.70789860204932,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008316004790343001,
                ),
                max_time: PositiveF64(
                    0.0 < 27.95776299066786,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008516854357876191,
                ),
                max_time: PositiveF64(
                    0.0 < 35.14254784931037,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008904223375294507,
                ),
                max_time: PositiveF64(
                    0.0 < 28.30821555820979,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009006928267107916,
                ),
                max_time: PositiveF64(
                    0.0 < 30.953869245684974,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010432630923040698,
                ),
                max_time: PositiveF64(
                    0.0 < 26.645544630334253,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010666508834522581,
                ),
                max_time: PositiveF64(
                    0.0 < 32.2733758543717,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000107267461246785,
                ),
                max_time: PositiveF64(
                    0.0 < 28.970172076093533,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001094227244646806,
                ),
                max_time: PositiveF64(
                    0.0 < 28.48320100930144,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011420124584882174,
                ),
                max_time: PositiveF64(
                    0.0 < 26.988253813964825,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011456268134146796,
                ),
                max_time: PositiveF64(
                    0.0 < 29.379711490136327,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011649790471190968,
                ),
                max_time: PositiveF64(
                    0.0 < 27.32342033760474,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011678407593751494,
                ),
                max_time: PositiveF64(
                    0.0 < 27.51968619811352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001246739851634704,
                ),
                max_time: PositiveF64(
                    0.0 < 30.464083094373294,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012664754459046357,
                ),
                max_time: PositiveF64(
                    0.0 < 27.077582631376906,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012678104974184201,
                ),
                max_time: PositiveF64(
                    0.0 < 26.012913792806515,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013644882987384754,
                ),
                max_time: PositiveF64(
                    0.0 < 27.502924106586526,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014372470785728453,
                ),
                max_time: PositiveF64(
                    0.0 < 27.65926832070582,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014514903759477171,
                ),
                max_time: PositiveF64(
                    0.0 < 25.63518299571721,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014869144776552545,
                ),
                max_time: PositiveF64(
                    0.0 < 32.06484514546056,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015026990876632063,
                ),
                max_time: PositiveF64(
                    0.0 < 31.418233351059087,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015731252170358978,
                ),
                max_time: PositiveF64(
                    0.0 < 25.51635509021095,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016431137639383309,
                ),
                max_time: PositiveF64(
                    0.0 < 28.5833827393582,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017243442054781788,
                ),
                max_time: PositiveF64(
                    0.0 < 29.31810128782338,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001734245325679673,
                ),
                max_time: PositiveF64(
                    0.0 < 28.83190810659712,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018948542102048549,
                ),
                max_time: PositiveF64(
                    0.0 < 28.354748853481837,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001920526596643768,
                ),
                max_time: PositiveF64(
                    0.0 < 30.554147329754816,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019884250432311568,
                ),
                max_time: PositiveF64(
                    0.0 < 28.838895369973358,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020034756245679297,
                ),
                max_time: PositiveF64(
                    0.0 < 30.95315087324581,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020397365579905014,
                ),
                max_time: PositiveF64(
                    0.0 < 25.719737815692035,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021090944185564453,
                ),
                max_time: PositiveF64(
                    0.0 < 27.447574526295668,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002111261040715906,
                ),
                max_time: PositiveF64(
                    0.0 < 27.317479458032885,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021155483131973796,
                ),
                max_time: PositiveF64(
                    0.0 < 30.814310502925892,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022094032753328108,
                ),
                max_time: PositiveF64(
                    0.0 < 28.13716792847724,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002335362007666042,
                ),
                max_time: PositiveF64(
                    0.0 < 31.244516428649458,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002471979013707326,
                ),
                max_time: PositiveF64(
                    0.0 < 28.465388167770882,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002500202147259767,
                ),
                max_time: PositiveF64(
                    0.0 < 25.31167088454607,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002528373842791698,
                ),
                max_time: PositiveF64(
                    0.0 < 29.40850341773428,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027508356717498295,
                ),
                max_time: PositiveF64(
                    0.0 < 26.778000792842565,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028072445351634556,
                ),
                max_time: PositiveF64(
                    0.0 < 29.935671240045604,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002855106799592999,
                ),
                max_time: PositiveF64(
                    0.0 < 27.366609667083655,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029342414570310282,
                ),
                max_time: PositiveF64(
                    0.0 < 31.240345863526034,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030141249093840194,
                ),
                max_time: PositiveF64(
                    0.0 < 27.135194646830428,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003056220916619612,
                ),
                max_time: PositiveF64(
                    0.0 < 26.561035985069882,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030698759131975173,
                ),
                max_time: PositiveF64(
                    0.0 < 29.716901789885654,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031129127192608408,
                ),
                max_time: PositiveF64(
                    0.0 < 29.14507829919417,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031398027505735726,
                ),
                max_time: PositiveF64(
                    0.0 < 27.837587579651718,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032054038676121444,
                ),
                max_time: PositiveF64(
                    0.0 < 32.744955952361565,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032106216771299323,
                ),
                max_time: PositiveF64(
                    0.0 < 24.611684072882284,
                ),
                length: 971326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003394815671631246,
                ),
                max_time: PositiveF64(
                    0.0 < 26.793089727630253,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003418046573278044,
                ),
                max_time: PositiveF64(
                    0.0 < 26.754092373783287,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035827004668531615,
                ),
                max_time: PositiveF64(
                    0.0 < 30.394594193940843,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003623371340744086,
                ),
                max_time: PositiveF64(
                    0.0 < 25.59903973679311,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036467736194700784,
                ),
                max_time: PositiveF64(
                    0.0 < 31.94889496715632,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036871191744225484,
                ),
                max_time: PositiveF64(
                    0.0 < 32.95019864967436,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036927795329932955,
                ),
                max_time: PositiveF64(
                    0.0 < 27.857663510233177,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003697288242510144,
                ),
                max_time: PositiveF64(
                    0.0 < 30.554783827081774,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004140369781746589,
                ),
                max_time: PositiveF64(
                    0.0 < 31.267331926461075,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004141693747128361,
                ),
                max_time: PositiveF64(
                    0.0 < 25.62066787551078,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004277527161644645,
                ),
                max_time: PositiveF64(
                    0.0 < 30.233986307319487,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004778469066268887,
                ),
                max_time: PositiveF64(
                    0.0 < 34.01340154648612,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004979173936769943,
                ),
                max_time: PositiveF64(
                    0.0 < 31.198208960959914,
                ),
                length: 495488,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004987362535735507,
                ),
                max_time: PositiveF64(
                    0.0 < 27.61968185587286,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005143071242774688,
                ),
                max_time: PositiveF64(
                    0.0 < 26.97792262082432,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000524084682040904,
                ),
                max_time: PositiveF64(
                    0.0 < 28.942559238672104,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005444141189248075,
                ),
                max_time: PositiveF64(
                    0.0 < 26.983611822499217,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006225697005701747,
                ),
                max_time: PositiveF64(
                    0.0 < 26.86721486496246,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006226300979517152,
                ),
                max_time: PositiveF64(
                    0.0 < 28.564387555258577,
                ),
                length: 172355,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000692096198073866,
                ),
                max_time: PositiveF64(
                    0.0 < 28.107830851295148,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007705934200463727,
                ),
                max_time: PositiveF64(
                    0.0 < 28.443675105433776,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008128445367627801,
                ),
                max_time: PositiveF64(
                    0.0 < 24.897449109641407,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008280650962144698,
                ),
                max_time: PositiveF64(
                    0.0 < 25.337786952004997,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012443490854940897,
                ),
                max_time: PositiveF64(
                    0.0 < 21.757161477441137,
                ),
                length: 125908,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000013680781807134945,
                ),
                max_time: PositiveF64(
                    0.0 < 27.685094283078175,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014531887984337022,
                ),
                max_time: PositiveF64(
                    0.0 < 28.33320440450884,
                ),
                length: 177248,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000027992396238740724,
                ),
                max_time: PositiveF64(
                    0.0 < 22.795046612697767,
                ),
                length: 55984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000044201027631085577,
                ),
                max_time: PositiveF64(
                    0.0 < 23.381861604327618,
                ),
                length: 170533,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 865ns
 - execution: 33.482139041s
 - cleanup: 36.572µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             8
 Used       :        11 (peak)   7.20 (ave)

============================================
