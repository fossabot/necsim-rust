# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 12713692581009849152,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517616[14].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 8 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-2-4.cx3.hpc.ic.ac.uk:8
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 10:06:48 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 12713692581009849152,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517616[14].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-2-4.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 12713692581009849152,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.5 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517616[14].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcaaa8b668; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcaaa8b688; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517616[14].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 8 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 10.843793848s
 - execution: 13.088461239s
 - cleanup: 89.271674ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 35.90025829564746 after 105304286 steps.

# mpiexec: finished at Thu 13 May 10:07:16 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000002922659059212407,
                ),
                max_time: PositiveF64(
                    0.0 < 27.28630372337756,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000003384044988674617,
                ),
                max_time: PositiveF64(
                    0.0 < 26.37598172515353,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000048695066590109803,
                ),
                max_time: PositiveF64(
                    0.0 < 28.346825225559435,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009285207908105164,
                ),
                max_time: PositiveF64(
                    0.0 < 28.441317047338963,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010657781129852495,
                ),
                max_time: PositiveF64(
                    0.0 < 30.44449170561218,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010908520892138895,
                ),
                max_time: PositiveF64(
                    0.0 < 28.51257939745252,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001378090472292648,
                ),
                max_time: PositiveF64(
                    0.0 < 28.911987578150857,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013940144538704402,
                ),
                max_time: PositiveF64(
                    0.0 < 28.522827157395405,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000015208551279455307,
                ),
                max_time: PositiveF64(
                    0.0 < 26.45756945496595,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018498849840842269,
                ),
                max_time: PositiveF64(
                    0.0 < 31.376444768930973,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021845616399174261,
                ),
                max_time: PositiveF64(
                    0.0 < 27.508146316711027,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000023077743355193192,
                ),
                max_time: PositiveF64(
                    0.0 < 30.517002254936582,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000027869613061781706,
                ),
                max_time: PositiveF64(
                    0.0 < 30.9612321017839,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002816947194950181,
                ),
                max_time: PositiveF64(
                    0.0 < 25.37406969172035,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000031187669807808405,
                ),
                max_time: PositiveF64(
                    0.0 < 27.73443333143128,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003472087151124015,
                ),
                max_time: PositiveF64(
                    0.0 < 28.45080492522085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000035760411493113153,
                ),
                max_time: PositiveF64(
                    0.0 < 27.022797202211027,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000036420500199030315,
                ),
                max_time: PositiveF64(
                    0.0 < 29.107849684765736,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003725216660144248,
                ),
                max_time: PositiveF64(
                    0.0 < 30.47449971289048,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003943557769225947,
                ),
                max_time: PositiveF64(
                    0.0 < 29.52378864936485,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000040388492106302465,
                ),
                max_time: PositiveF64(
                    0.0 < 35.62594592974236,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000041594915373144303,
                ),
                max_time: PositiveF64(
                    0.0 < 28.072091229827876,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000042711643527537646,
                ),
                max_time: PositiveF64(
                    0.0 < 25.398879197636532,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000047255983792737766,
                ),
                max_time: PositiveF64(
                    0.0 < 27.403967924438504,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004886890039856873,
                ),
                max_time: PositiveF64(
                    0.0 < 27.183327178766163,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005491621432596183,
                ),
                max_time: PositiveF64(
                    0.0 < 28.93452216567903,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005697311736274635,
                ),
                max_time: PositiveF64(
                    0.0 < 27.77861103018918,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006057053339447727,
                ),
                max_time: PositiveF64(
                    0.0 < 26.149191497573113,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006080851544520982,
                ),
                max_time: PositiveF64(
                    0.0 < 28.420308828603893,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006760161772034756,
                ),
                max_time: PositiveF64(
                    0.0 < 29.881040461342742,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006808954636228215,
                ),
                max_time: PositiveF64(
                    0.0 < 29.321449613617894,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006925220913389651,
                ),
                max_time: PositiveF64(
                    0.0 < 29.739704322712726,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007196859305724779,
                ),
                max_time: PositiveF64(
                    0.0 < 32.72638463999839,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007742866214854871,
                ),
                max_time: PositiveF64(
                    0.0 < 30.68410349817512,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008441639015588365,
                ),
                max_time: PositiveF64(
                    0.0 < 26.749829463558157,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008472110421542389,
                ),
                max_time: PositiveF64(
                    0.0 < 27.576374068289027,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008509124652111844,
                ),
                max_time: PositiveF64(
                    0.0 < 28.454424865879517,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008623775973881642,
                ),
                max_time: PositiveF64(
                    0.0 < 28.21047447263631,
                ),
                length: 125908,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008624622263586623,
                ),
                max_time: PositiveF64(
                    0.0 < 29.36906769954019,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008965398209936914,
                ),
                max_time: PositiveF64(
                    0.0 < 26.567094665027803,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009203560460968596,
                ),
                max_time: PositiveF64(
                    0.0 < 28.9597719805203,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009468742243057271,
                ),
                max_time: PositiveF64(
                    0.0 < 28.95536118322823,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009521066010598211,
                ),
                max_time: PositiveF64(
                    0.0 < 26.0835793182202,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009709785306344365,
                ),
                max_time: PositiveF64(
                    0.0 < 30.02958168451452,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009783552409881047,
                ),
                max_time: PositiveF64(
                    0.0 < 28.50490111271601,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000987799304852377,
                ),
                max_time: PositiveF64(
                    0.0 < 28.06851347350551,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010013348972215397,
                ),
                max_time: PositiveF64(
                    0.0 < 33.43728453653996,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010208998604821495,
                ),
                max_time: PositiveF64(
                    0.0 < 31.3979917576248,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010532911023930502,
                ),
                max_time: PositiveF64(
                    0.0 < 28.49013678787458,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010843289166562187,
                ),
                max_time: PositiveF64(
                    0.0 < 29.001557767829777,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001111694517275108,
                ),
                max_time: PositiveF64(
                    0.0 < 28.793300478802376,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001131550414479321,
                ),
                max_time: PositiveF64(
                    0.0 < 28.715668848828987,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011531146379417656,
                ),
                max_time: PositiveF64(
                    0.0 < 33.34268124373847,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001238022724336929,
                ),
                max_time: PositiveF64(
                    0.0 < 32.2593032490082,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012418445305417691,
                ),
                max_time: PositiveF64(
                    0.0 < 28.552846696167297,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012879619518124663,
                ),
                max_time: PositiveF64(
                    0.0 < 28.828988057495593,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012979047653294273,
                ),
                max_time: PositiveF64(
                    0.0 < 31.073242388756004,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013505033663596677,
                ),
                max_time: PositiveF64(
                    0.0 < 30.177175101299476,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001360575209718995,
                ),
                max_time: PositiveF64(
                    0.0 < 26.610015285743835,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014307131412927276,
                ),
                max_time: PositiveF64(
                    0.0 < 27.001359299529813,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014802504036404152,
                ),
                max_time: PositiveF64(
                    0.0 < 24.431733451916237,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014843303730582846,
                ),
                max_time: PositiveF64(
                    0.0 < 29.53212521127889,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015234164763011648,
                ),
                max_time: PositiveF64(
                    0.0 < 31.275136120656782,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015336348191397065,
                ),
                max_time: PositiveF64(
                    0.0 < 29.41436745498153,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015743850578786578,
                ),
                max_time: PositiveF64(
                    0.0 < 27.55295701977365,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016095431779050706,
                ),
                max_time: PositiveF64(
                    0.0 < 32.43337573409485,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001666903804709019,
                ),
                max_time: PositiveF64(
                    0.0 < 27.01335545512778,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016959318835385595,
                ),
                max_time: PositiveF64(
                    0.0 < 29.418340064015457,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017387681972014235,
                ),
                max_time: PositiveF64(
                    0.0 < 29.444405471141014,
                ),
                length: 495488,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018165943646564209,
                ),
                max_time: PositiveF64(
                    0.0 < 28.81141047221693,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018171438107006388,
                ),
                max_time: PositiveF64(
                    0.0 < 29.670698294064625,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018461576339889874,
                ),
                max_time: PositiveF64(
                    0.0 < 35.90025829564746,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018725836734012624,
                ),
                max_time: PositiveF64(
                    0.0 < 35.0028193748563,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018735639134570548,
                ),
                max_time: PositiveF64(
                    0.0 < 31.31777833361876,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019428903194618208,
                ),
                max_time: PositiveF64(
                    0.0 < 30.317817094003715,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019736399425873685,
                ),
                max_time: PositiveF64(
                    0.0 < 27.408199268630046,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020096624264720475,
                ),
                max_time: PositiveF64(
                    0.0 < 28.302213583903285,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002161028316294278,
                ),
                max_time: PositiveF64(
                    0.0 < 26.645602198300146,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002231563210608467,
                ),
                max_time: PositiveF64(
                    0.0 < 27.3090136913854,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023041883462360246,
                ),
                max_time: PositiveF64(
                    0.0 < 30.872395356354314,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002671747058036189,
                ),
                max_time: PositiveF64(
                    0.0 < 28.749523501960464,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027880247302491945,
                ),
                max_time: PositiveF64(
                    0.0 < 26.605613803965838,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028281485844883214,
                ),
                max_time: PositiveF64(
                    0.0 < 31.854623154440354,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002933006331140575,
                ),
                max_time: PositiveF64(
                    0.0 < 27.995227683183632,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029472449358802777,
                ),
                max_time: PositiveF64(
                    0.0 < 27.097802077756278,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030371312778609827,
                ),
                max_time: PositiveF64(
                    0.0 < 27.426576632990724,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003091239043628846,
                ),
                max_time: PositiveF64(
                    0.0 < 23.054537190182927,
                ),
                length: 170533,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031003918596339552,
                ),
                max_time: PositiveF64(
                    0.0 < 27.241493006309344,
                ),
                length: 971326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003179418410770296,
                ),
                max_time: PositiveF64(
                    0.0 < 28.161883409371594,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003196510673653119,
                ),
                max_time: PositiveF64(
                    0.0 < 28.00780278699229,
                ),
                length: 172355,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000341068977560699,
                ),
                max_time: PositiveF64(
                    0.0 < 26.66237884608103,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003900176907267738,
                ),
                max_time: PositiveF64(
                    0.0 < 31.07460961269734,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003980459502006539,
                ),
                max_time: PositiveF64(
                    0.0 < 27.916780256188588,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000039859202335956745,
                ),
                max_time: PositiveF64(
                    0.0 < 30.709740738660997,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004198541539157663,
                ),
                max_time: PositiveF64(
                    0.0 < 27.04467382461909,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004237684677887987,
                ),
                max_time: PositiveF64(
                    0.0 < 28.48981240756288,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004252603899024265,
                ),
                max_time: PositiveF64(
                    0.0 < 28.433109512767185,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000043164783158911035,
                ),
                max_time: PositiveF64(
                    0.0 < 25.967614549583473,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000460795303414141,
                ),
                max_time: PositiveF64(
                    0.0 < 30.078776220335335,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004635118203977218,
                ),
                max_time: PositiveF64(
                    0.0 < 28.481355837788694,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000533401259161792,
                ),
                max_time: PositiveF64(
                    0.0 < 30.37846740770856,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005336918647846911,
                ),
                max_time: PositiveF64(
                    0.0 < 31.05479567817727,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005636835652411687,
                ),
                max_time: PositiveF64(
                    0.0 < 26.170486381063576,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000056913462456731345,
                ),
                max_time: PositiveF64(
                    0.0 < 34.198089640622825,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006551255035125436,
                ),
                max_time: PositiveF64(
                    0.0 < 25.780164762370816,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006627965675742864,
                ),
                max_time: PositiveF64(
                    0.0 < 26.221042451610643,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007305963223014356,
                ),
                max_time: PositiveF64(
                    0.0 < 26.272285729995758,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009249067323136018,
                ),
                max_time: PositiveF64(
                    0.0 < 27.649056237553967,
                ),
                length: 135444,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009276424077220291,
                ),
                max_time: PositiveF64(
                    0.0 < 28.900151974599247,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011518744546523685,
                ),
                max_time: PositiveF64(
                    0.0 < 24.676970900901857,
                ),
                length: 177248,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000016882937021178712,
                ),
                max_time: PositiveF64(
                    0.0 < 24.93630044343228,
                ),
                length: 55984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.11µs
 - execution: 39.058617765s
 - cleanup: 78.393µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             8
 Used       :        11 (peak)   7.01 (ave)

============================================
