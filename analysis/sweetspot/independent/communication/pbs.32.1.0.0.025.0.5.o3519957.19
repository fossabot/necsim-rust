# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 16198773202558516359,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519957[19].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-104-13-1.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 18:13:04 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 16198773202558516359,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519957[19].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-104-13-1.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 16198773202558516359,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.5 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519957[19].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffc065f29c8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffc065f29e8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519957[19].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 12.398244599s
 - execution: 5.807845007s
 - cleanup: 35.630731ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 36.44472193554604 after 105304286 steps.

# mpiexec: finished at Thu 13 May 18:13:26 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000002646848684673131,
                ),
                max_time: PositiveF64(
                    0.0 < 27.0148583067259,
                ),
                length: 616326,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006258989576624074,
                ),
                max_time: PositiveF64(
                    0.0 < 28.343430825558524,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007304506194349969,
                ),
                max_time: PositiveF64(
                    0.0 < 27.1634924633876,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010473399203458911,
                ),
                max_time: PositiveF64(
                    0.0 < 29.22425015021291,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000013030421408544157,
                ),
                max_time: PositiveF64(
                    0.0 < 28.856421873143372,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001375784136614655,
                ),
                max_time: PositiveF64(
                    0.0 < 29.156739015048213,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000015965449490229489,
                ),
                max_time: PositiveF64(
                    0.0 < 28.1350662996495,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000016437924715839713,
                ),
                max_time: PositiveF64(
                    0.0 < 33.86870589903047,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000019547451990398201,
                ),
                max_time: PositiveF64(
                    0.0 < 30.77288245754432,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000022518218290024095,
                ),
                max_time: PositiveF64(
                    0.0 < 27.455838019278417,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000024022630218389907,
                ),
                max_time: PositiveF64(
                    0.0 < 26.670791357566202,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026182407714125944,
                ),
                max_time: PositiveF64(
                    0.0 < 27.32173612141783,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026754028353837,
                ),
                max_time: PositiveF64(
                    0.0 < 35.61968300682912,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000027429935794964777,
                ),
                max_time: PositiveF64(
                    0.0 < 29.76563442302662,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003027819117651376,
                ),
                max_time: PositiveF64(
                    0.0 < 29.286149592524296,
                ),
                length: 273284,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003122565958579848,
                ),
                max_time: PositiveF64(
                    0.0 < 29.47455868441841,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003151474972651336,
                ),
                max_time: PositiveF64(
                    0.0 < 25.735120983052436,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000036563894856289636,
                ),
                max_time: PositiveF64(
                    0.0 < 26.844271341461603,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000041594935606958927,
                ),
                max_time: PositiveF64(
                    0.0 < 27.408616925192852,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004619124510663042,
                ),
                max_time: PositiveF64(
                    0.0 < 27.646718114141482,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004695505509411113,
                ),
                max_time: PositiveF64(
                    0.0 < 26.905101079350608,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004795370966981238,
                ),
                max_time: PositiveF64(
                    0.0 < 26.13457348569166,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004802783670765365,
                ),
                max_time: PositiveF64(
                    0.0 < 29.791575497856016,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004875333764475798,
                ),
                max_time: PositiveF64(
                    0.0 < 25.986723403473345,
                ),
                length: 280317,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004957360902335672,
                ),
                max_time: PositiveF64(
                    0.0 < 30.74596894660663,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005112553733144232,
                ),
                max_time: PositiveF64(
                    0.0 < 27.89853443237614,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005674960346091495,
                ),
                max_time: PositiveF64(
                    0.0 < 26.74379543399101,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005825481522170328,
                ),
                max_time: PositiveF64(
                    0.0 < 28.574506706488062,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005918485618261471,
                ),
                max_time: PositiveF64(
                    0.0 < 31.84025883125492,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006359307305747741,
                ),
                max_time: PositiveF64(
                    0.0 < 30.69569019566499,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006610362845993478,
                ),
                max_time: PositiveF64(
                    0.0 < 31.22375283025713,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007124658646384674,
                ),
                max_time: PositiveF64(
                    0.0 < 30.852282650214473,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007150167066760638,
                ),
                max_time: PositiveF64(
                    0.0 < 27.541806713789537,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007194900650264735,
                ),
                max_time: PositiveF64(
                    0.0 < 28.58912670039263,
                ),
                length: 210432,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007245904026786931,
                ),
                max_time: PositiveF64(
                    0.0 < 26.893032172160755,
                ),
                length: 290024,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007271351420978789,
                ),
                max_time: PositiveF64(
                    0.0 < 30.976759692513703,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007526045212036259,
                ),
                max_time: PositiveF64(
                    0.0 < 28.10990307994618,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007592938039424624,
                ),
                max_time: PositiveF64(
                    0.0 < 28.570177593949193,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007769211615715754,
                ),
                max_time: PositiveF64(
                    0.0 < 31.455138481353874,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008932311454379338,
                ),
                max_time: PositiveF64(
                    0.0 < 36.44472193554604,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009430629843709681,
                ),
                max_time: PositiveF64(
                    0.0 < 27.53139979669647,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009590321792263268,
                ),
                max_time: PositiveF64(
                    0.0 < 28.85041983873899,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009610832119033574,
                ),
                max_time: PositiveF64(
                    0.0 < 30.249237845849528,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010035651218376351,
                ),
                max_time: PositiveF64(
                    0.0 < 29.023399087829066,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010159993196756645,
                ),
                max_time: PositiveF64(
                    0.0 < 26.232056158934263,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010446398901464704,
                ),
                max_time: PositiveF64(
                    0.0 < 26.72859711428265,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001053331497025134,
                ),
                max_time: PositiveF64(
                    0.0 < 26.748997038702957,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010553629437026757,
                ),
                max_time: PositiveF64(
                    0.0 < 35.40392810538199,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001058120146502084,
                ),
                max_time: PositiveF64(
                    0.0 < 26.289102377528522,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010713417494812028,
                ),
                max_time: PositiveF64(
                    0.0 < 22.555129604344017,
                ),
                length: 220334,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010780400311327654,
                ),
                max_time: PositiveF64(
                    0.0 < 26.493319316712906,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010823323415287689,
                ),
                max_time: PositiveF64(
                    0.0 < 27.478667636573384,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011142822028964439,
                ),
                max_time: PositiveF64(
                    0.0 < 24.906382142311777,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011206095862359433,
                ),
                max_time: PositiveF64(
                    0.0 < 26.761737504654025,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012369064539274888,
                ),
                max_time: PositiveF64(
                    0.0 < 25.792709035797156,
                ),
                length: 295925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012803423676821524,
                ),
                max_time: PositiveF64(
                    0.0 < 31.796394826714113,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000129562975487163,
                ),
                max_time: PositiveF64(
                    0.0 < 30.836938347729088,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013168878876257395,
                ),
                max_time: PositiveF64(
                    0.0 < 32.501917034744764,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013203153509389054,
                ),
                max_time: PositiveF64(
                    0.0 < 26.806710473965722,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013404357299129366,
                ),
                max_time: PositiveF64(
                    0.0 < 26.504063425775467,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014228364791923909,
                ),
                max_time: PositiveF64(
                    0.0 < 31.06559812328203,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001460829743837877,
                ),
                max_time: PositiveF64(
                    0.0 < 30.18124098789002,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001481141508885564,
                ),
                max_time: PositiveF64(
                    0.0 < 29.502365457461572,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015058563257452917,
                ),
                max_time: PositiveF64(
                    0.0 < 29.961608333614862,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016108661690661386,
                ),
                max_time: PositiveF64(
                    0.0 < 28.985386147084093,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016148549039640692,
                ),
                max_time: PositiveF64(
                    0.0 < 27.09300875687446,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017012829858775724,
                ),
                max_time: PositiveF64(
                    0.0 < 28.83536984302502,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001830138669778325,
                ),
                max_time: PositiveF64(
                    0.0 < 25.13650856274549,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018315316571704265,
                ),
                max_time: PositiveF64(
                    0.0 < 30.243512205052397,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019488156727254236,
                ),
                max_time: PositiveF64(
                    0.0 < 30.815061901488797,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019937098150180077,
                ),
                max_time: PositiveF64(
                    0.0 < 31.066987025690935,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002047935741822382,
                ),
                max_time: PositiveF64(
                    0.0 < 24.80500461440532,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002052093710513958,
                ),
                max_time: PositiveF64(
                    0.0 < 29.384170013059055,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020625461558121394,
                ),
                max_time: PositiveF64(
                    0.0 < 26.566190314871637,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020853800941633693,
                ),
                max_time: PositiveF64(
                    0.0 < 28.04029298105462,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002131226840562661,
                ),
                max_time: PositiveF64(
                    0.0 < 28.2034015492723,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022221711318271,
                ),
                max_time: PositiveF64(
                    0.0 < 30.308778237122066,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022315072092937704,
                ),
                max_time: PositiveF64(
                    0.0 < 26.741650229687963,
                ),
                length: 224964,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022647438277512144,
                ),
                max_time: PositiveF64(
                    0.0 < 27.29724126662235,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023531594489645258,
                ),
                max_time: PositiveF64(
                    0.0 < 27.31415248457211,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002357843034983542,
                ),
                max_time: PositiveF64(
                    0.0 < 29.80898833853408,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024543577714641884,
                ),
                max_time: PositiveF64(
                    0.0 < 26.398045917857903,
                ),
                length: 297274,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000025087705110560243,
                ),
                max_time: PositiveF64(
                    0.0 < 25.926970166652,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026554835858005887,
                ),
                max_time: PositiveF64(
                    0.0 < 26.877630696881766,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027850337286361437,
                ),
                max_time: PositiveF64(
                    0.0 < 28.271135347602065,
                ),
                length: 292119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028202056270854037,
                ),
                max_time: PositiveF64(
                    0.0 < 28.512122543158288,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000028588434117238215,
                ),
                max_time: PositiveF64(
                    0.0 < 28.158608818303815,
                ),
                length: 281180,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003125982263596505,
                ),
                max_time: PositiveF64(
                    0.0 < 22.932933191844505,
                ),
                length: 369800,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031392698404686392,
                ),
                max_time: PositiveF64(
                    0.0 < 23.39984657088621,
                ),
                length: 262173,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031874448613855577,
                ),
                max_time: PositiveF64(
                    0.0 < 27.121524120654023,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003220105838919185,
                ),
                max_time: PositiveF64(
                    0.0 < 32.21059220552959,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032696058277492668,
                ),
                max_time: PositiveF64(
                    0.0 < 29.5658564084758,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003337412642079318,
                ),
                max_time: PositiveF64(
                    0.0 < 26.375719388654236,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003510808817830391,
                ),
                max_time: PositiveF64(
                    0.0 < 24.020393317679698,
                ),
                length: 297857,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000035947555779292095,
                ),
                max_time: PositiveF64(
                    0.0 < 27.21332995017516,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036475284462267332,
                ),
                max_time: PositiveF64(
                    0.0 < 29.243626362000125,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003748987322804709,
                ),
                max_time: PositiveF64(
                    0.0 < 25.196774268493304,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000038509942587583446,
                ),
                max_time: PositiveF64(
                    0.0 < 25.37870247232316,
                ),
                length: 433662,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004099999484363792,
                ),
                max_time: PositiveF64(
                    0.0 < 29.461353975655904,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000413196729970311,
                ),
                max_time: PositiveF64(
                    0.0 < 19.79905162879495,
                ),
                length: 44329,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004165926504318129,
                ),
                max_time: PositiveF64(
                    0.0 < 27.078671744387055,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004206877536883091,
                ),
                max_time: PositiveF64(
                    0.0 < 30.05946787529284,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000476410708161179,
                ),
                max_time: PositiveF64(
                    0.0 < 24.80310357574225,
                ),
                length: 293394,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005046238783779078,
                ),
                max_time: PositiveF64(
                    0.0 < 30.022583141949873,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005198469056333366,
                ),
                max_time: PositiveF64(
                    0.0 < 28.351048376265613,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000053634895635923385,
                ),
                max_time: PositiveF64(
                    0.0 < 30.809573333929503,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005579480127082537,
                ),
                max_time: PositiveF64(
                    0.0 < 26.70689775886313,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005805270807957008,
                ),
                max_time: PositiveF64(
                    0.0 < 25.577336451322555,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007222285162700182,
                ),
                max_time: PositiveF64(
                    0.0 < 26.928994314570247,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007301013159599634,
                ),
                max_time: PositiveF64(
                    0.0 < 23.58947624248055,
                ),
                length: 197981,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000007421356656989175,
                ),
                max_time: PositiveF64(
                    0.0 < 30.13273099978218,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000746788768574147,
                ),
                max_time: PositiveF64(
                    0.0 < 24.837162697183825,
                ),
                length: 472100,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008167861762220507,
                ),
                max_time: PositiveF64(
                    0.0 < 24.049290714893722,
                ),
                length: 292059,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008609567650752492,
                ),
                max_time: PositiveF64(
                    0.0 < 30.012218125115847,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009199744766263951,
                ),
                max_time: PositiveF64(
                    0.0 < 27.592021286272193,
                ),
                length: 320818,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009333960852564438,
                ),
                max_time: PositiveF64(
                    0.0 < 27.86247879270022,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010353390278439178,
                ),
                max_time: PositiveF64(
                    0.0 < 28.565546739546235,
                ),
                length: 300125,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010388389903581707,
                ),
                max_time: PositiveF64(
                    0.0 < 27.27943848668478,
                ),
                length: 286977,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011258911993550225,
                ),
                max_time: PositiveF64(
                    0.0 < 24.072870870591885,
                ),
                length: 311358,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011471390788109215,
                ),
                max_time: PositiveF64(
                    0.0 < 26.568451512477505,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000011831267762163478,
                ),
                max_time: PositiveF64(
                    0.0 < 24.692735315926356,
                ),
                length: 281639,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000012854210795498755,
                ),
                max_time: PositiveF64(
                    0.0 < 27.739656071901745,
                ),
                length: 287076,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000014504454244335108,
                ),
                max_time: PositiveF64(
                    0.0 < 23.463550643740255,
                ),
                length: 295354,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001604076896644102,
                ),
                max_time: PositiveF64(
                    0.0 < 25.269086450873797,
                ),
                length: 299770,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000019025515388682024,
                ),
                max_time: PositiveF64(
                    0.0 < 25.903124030288648,
                ),
                length: 292252,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000215475758691408,
                ),
                max_time: PositiveF64(
                    0.0 < 28.889520063292828,
                ),
                length: 363129,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00002280013047389895,
                ),
                max_time: PositiveF64(
                    0.0 < 25.493876499115128,
                ),
                length: 217270,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00004323151151064408,
                ),
                max_time: PositiveF64(
                    0.0 < 23.260736835110745,
                ),
                length: 102984,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 701ns
 - execution: 34.271198379s
 - cleanup: 48.38µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        37 (peak)  28.80 (ave)

============================================
