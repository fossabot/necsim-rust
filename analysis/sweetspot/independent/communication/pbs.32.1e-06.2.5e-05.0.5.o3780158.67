# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 4697346495598168957,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780158[67].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-6-24.cx3.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 17 Jun 21:39:15 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 4697346495598168957,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.5)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780158[67].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-6-24.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value 0.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.000025 <= 1.0,
        ),
        seed: 4697346495598168957,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.5 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3780158[67].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffe3c0ec298; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffe3c0ec2b8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3780158[67].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.997711717s
 - execution: 1634.759180588s
 - cleanup: 2.769523ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 14325634.95999963 after 55462732785 steps.

# mpiexec: finished at Thu 17 Jun 22:06:39 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 28.74260934428877,
                ),
                max_time: PositiveF64(
                    0.0 < 9829098.625980046,
                ),
                length: 2023,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 33.24908326533868,
                ),
                max_time: PositiveF64(
                    0.0 < 10220819.058679577,
                ),
                length: 1389,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 65.83507157228213,
                ),
                max_time: PositiveF64(
                    0.0 < 13130932.215593157,
                ),
                length: 982,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 92.57775370215231,
                ),
                max_time: PositiveF64(
                    0.0 < 9381656.054866606,
                ),
                length: 850,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 100.9426375960919,
                ),
                max_time: PositiveF64(
                    0.0 < 8754487.0867302,
                ),
                length: 1902,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 130.95177426554457,
                ),
                max_time: PositiveF64(
                    0.0 < 8740465.319941526,
                ),
                length: 1370,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 135.25602923434172,
                ),
                max_time: PositiveF64(
                    0.0 < 13856919.905406088,
                ),
                length: 2497,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 165.78308053653603,
                ),
                max_time: PositiveF64(
                    0.0 < 4069697.6067442605,
                ),
                length: 3973,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 264.1809743282632,
                ),
                max_time: PositiveF64(
                    0.0 < 4956820.842442347,
                ),
                length: 844,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 276.4804260358624,
                ),
                max_time: PositiveF64(
                    0.0 < 9390890.174877185,
                ),
                length: 2128,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 287.107938681451,
                ),
                max_time: PositiveF64(
                    0.0 < 6201662.124463582,
                ),
                length: 2665,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 467.75005481990405,
                ),
                max_time: PositiveF64(
                    0.0 < 8403263.786973849,
                ),
                length: 6190,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 501.30462172412297,
                ),
                max_time: PositiveF64(
                    0.0 < 9713154.148995955,
                ),
                length: 1658,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 510.2790463106115,
                ),
                max_time: PositiveF64(
                    0.0 < 3085882.7839139355,
                ),
                length: 402,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 530.2524969202449,
                ),
                max_time: PositiveF64(
                    0.0 < 7921036.037920255,
                ),
                length: 789,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 548.256987462918,
                ),
                max_time: PositiveF64(
                    0.0 < 5484303.902171133,
                ),
                length: 2119,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 555.3967592659055,
                ),
                max_time: PositiveF64(
                    0.0 < 9598483.089157231,
                ),
                length: 2776,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 589.8152571740765,
                ),
                max_time: PositiveF64(
                    0.0 < 9039404.307840195,
                ),
                length: 464,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 590.4794204166622,
                ),
                max_time: PositiveF64(
                    0.0 < 8657663.587027052,
                ),
                length: 3913,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 735.031430609446,
                ),
                max_time: PositiveF64(
                    0.0 < 6437331.950630549,
                ),
                length: 1003,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 772.5835139742402,
                ),
                max_time: PositiveF64(
                    0.0 < 7196259.673476435,
                ),
                length: 2741,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 819.1197145763555,
                ),
                max_time: PositiveF64(
                    0.0 < 10307489.684969544,
                ),
                length: 1049,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 838.6657573642012,
                ),
                max_time: PositiveF64(
                    0.0 < 7770075.888897101,
                ),
                length: 1302,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 954.4858046349531,
                ),
                max_time: PositiveF64(
                    0.0 < 12120187.933465943,
                ),
                length: 2677,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 993.0562184548949,
                ),
                max_time: PositiveF64(
                    0.0 < 5626112.235550318,
                ),
                length: 1057,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1015.0423353205553,
                ),
                max_time: PositiveF64(
                    0.0 < 11222920.774921661,
                ),
                length: 1186,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1032.1064065213302,
                ),
                max_time: PositiveF64(
                    0.0 < 14325634.95999963,
                ),
                length: 1064,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1110.4926289342093,
                ),
                max_time: PositiveF64(
                    0.0 < 8694093.374561986,
                ),
                length: 3621,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1282.5052669715285,
                ),
                max_time: PositiveF64(
                    0.0 < 4839113.462552151,
                ),
                length: 634,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1348.5822347454227,
                ),
                max_time: PositiveF64(
                    0.0 < 7782748.709447624,
                ),
                length: 998,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1402.7040345121454,
                ),
                max_time: PositiveF64(
                    0.0 < 3907697.3159598364,
                ),
                length: 388,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1868.9763585705318,
                ),
                max_time: PositiveF64(
                    0.0 < 7724901.447851362,
                ),
                length: 1843,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.04µs
 - execution: 8.472184ms
 - cleanup: 54.791µs
INFO  The simulation resulted in a biodiversity of 8125 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :         1 (peak)  31.86 (ave)

============================================
