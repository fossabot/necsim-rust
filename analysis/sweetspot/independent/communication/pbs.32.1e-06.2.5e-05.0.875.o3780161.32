# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 445530657089008927,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780161[32].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 32 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-137-16-2.cx1.hpc.ic.ac.uk:32
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 17 Jun 22:12:36 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1e-06,
        sample: 2.5e-05,
        seed: 445530657089008927,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.875)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3780161[32].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-137-16-2.cx1.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value 0.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 0.000001 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.000025 <= 1.0,
        ),
        seed: 445530657089008927,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.875 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3780161[32].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffe995a27b8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffe995a27d8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3780161[32].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 32 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 4.346938418s
 - execution: 3375.75138925s
 - cleanup: 2.544389ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 14827327.175450739 after 66806442404 steps.

# mpiexec: finished at Thu 17 Jun 23:09:25 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 4.998131696249387,
                ),
                max_time: PositiveF64(
                    0.0 < 12194884.87460735,
                ),
                length: 4666,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 22.856561129873675,
                ),
                max_time: PositiveF64(
                    0.0 < 14827327.175450739,
                ),
                length: 1243,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 25.021136383462824,
                ),
                max_time: PositiveF64(
                    0.0 < 8620698.428882953,
                ),
                length: 1550,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 41.59568770951185,
                ),
                max_time: PositiveF64(
                    0.0 < 11260465.023324115,
                ),
                length: 2285,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 56.364004866289,
                ),
                max_time: PositiveF64(
                    0.0 < 5066733.043396469,
                ),
                length: 4763,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 76.81820511971415,
                ),
                max_time: PositiveF64(
                    0.0 < 7809388.40488081,
                ),
                length: 3809,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 79.8175023015656,
                ),
                max_time: PositiveF64(
                    0.0 < 8783586.163980272,
                ),
                length: 3386,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 88.76037850301167,
                ),
                max_time: PositiveF64(
                    0.0 < 9585130.944505103,
                ),
                length: 2272,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 99.83664914083138,
                ),
                max_time: PositiveF64(
                    0.0 < 4854917.318298897,
                ),
                length: 1442,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 102.25404238843517,
                ),
                max_time: PositiveF64(
                    0.0 < 8634796.507377664,
                ),
                length: 937,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 133.63384455091176,
                ),
                max_time: PositiveF64(
                    0.0 < 13223722.505465548,
                ),
                length: 3463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 160.25482143853355,
                ),
                max_time: PositiveF64(
                    0.0 < 7241967.093330802,
                ),
                length: 796,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 178.93993673812076,
                ),
                max_time: PositiveF64(
                    0.0 < 6534167.909563692,
                ),
                length: 749,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 276.81748387250445,
                ),
                max_time: PositiveF64(
                    0.0 < 9061107.318411145,
                ),
                length: 3270,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 284.734325169499,
                ),
                max_time: PositiveF64(
                    0.0 < 5521217.335622169,
                ),
                length: 1549,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 310.9505308060955,
                ),
                max_time: PositiveF64(
                    0.0 < 7916160.772725885,
                ),
                length: 1026,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 342.15678540045315,
                ),
                max_time: PositiveF64(
                    0.0 < 4714941.225620581,
                ),
                length: 218,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 412.7648021475912,
                ),
                max_time: PositiveF64(
                    0.0 < 7965944.987762383,
                ),
                length: 483,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 417.5455180611351,
                ),
                max_time: PositiveF64(
                    0.0 < 7010961.078697787,
                ),
                length: 1318,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 477.7072043727966,
                ),
                max_time: PositiveF64(
                    0.0 < 6402043.454857357,
                ),
                length: 867,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 637.8089418804973,
                ),
                max_time: PositiveF64(
                    0.0 < 7657219.280479882,
                ),
                length: 3184,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 714.617999279669,
                ),
                max_time: PositiveF64(
                    0.0 < 8847737.825409852,
                ),
                length: 2890,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 821.971000799456,
                ),
                max_time: PositiveF64(
                    0.0 < 11984644.17433821,
                ),
                length: 2925,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 848.0232638920963,
                ),
                max_time: PositiveF64(
                    0.0 < 11120633.849701982,
                ),
                length: 2107,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 850.9160382186947,
                ),
                max_time: PositiveF64(
                    0.0 < 7155505.988355894,
                ),
                length: 1204,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 858.7806057222499,
                ),
                max_time: PositiveF64(
                    0.0 < 11504055.25942229,
                ),
                length: 6491,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1001.8447057896669,
                ),
                max_time: PositiveF64(
                    0.0 < 5798588.031988061,
                ),
                length: 1213,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1381.0523159071588,
                ),
                max_time: PositiveF64(
                    0.0 < 10898648.320129996,
                ),
                length: 1006,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1407.0640657408962,
                ),
                max_time: PositiveF64(
                    0.0 < 12665419.30235753,
                ),
                length: 2287,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 1727.208281516698,
                ),
                max_time: PositiveF64(
                    0.0 < 10515959.653562298,
                ),
                length: 3350,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2241.707645732462,
                ),
                max_time: PositiveF64(
                    0.0 < 5753944.904830977,
                ),
                length: 867,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 2417.5176201339495,
                ),
                max_time: PositiveF64(
                    0.0 < 13053569.861200256,
                ),
                length: 2127,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 739ns
 - execution: 9.30375ms
 - cleanup: 10.382µs
INFO  The simulation resulted in a biodiversity of 8197 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        62            32
 Used       :        53 (peak)  32.00 (ave)

============================================
