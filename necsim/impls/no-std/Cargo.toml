[package]
name = "necsim-impls-no-std"
version = "0.1.0"
authors = ["Momo Langenstein <ml5717@ic.ac.uk>"]
license = "MIT OR Apache-2.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []
cuda = ["rust-cuda", "array2d/cuda", "necsim-core/cuda"]

[dependencies]
necsim-core = { path = "../../core" }
necsim-core-bond = { path = "../../core/bond" }
necsim-partitioning-core = { path = "../../partitioning/core" }

array2d = { path = "../../../third-party/array2d-no-std" }
contracts = { path = "../../../third-party/contracts" }
nanorand = { version = "0.6.0", default-features = false, features = ["wyrand"] }
aes = { version = "0.7.4", default-features = false, features = ["force-soft"] }
seahash = "4.1.0"
libm = "0.2.1"
hashbrown = "0.11.2"
xxhash-rust = { version = "0.8.2", features = ["xxh64"] }
slab = { version = "0.4.3", default-features = false, features = [] }
serde = { version = "1.0", default-features = false, features = ["derive"] }
log = "0.4.14"
displaydoc = { version = "0.2.1", default-features = false, features = [] }

[target.'cfg(target_os = "cuda")'.dependencies]
rust-cuda = { path = "../../../rust-cuda", features = ["derive"], optional = true }

[target.'cfg(not(target_os = "cuda"))'.dependencies]
rust-cuda = { path = "../../../rust-cuda", features = ["derive", "host"], optional = true }
